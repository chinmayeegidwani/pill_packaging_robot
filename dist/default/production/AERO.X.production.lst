

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 02 15:14:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4620 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  001DAE                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _pillBox
    78  001DAE  30                 	db	48
    79  001DAF  30                 	db	48
    80  001DB0  30                 	db	48
    81  001DB1  30                 	db	48
    82  001DB2  30                 	db	48
    83  001DB3  30                 	db	48
    84  001DB4  30                 	db	48
    85  001DB5  30                 	db	48
    86  001DB6  30                 	db	48
    87  001DB7  30                 	db	48
    88  001DB8  30                 	db	48
    89  001DB9  30                 	db	48
    90  001DBA  30                 	db	48
    91  001DBB  30                 	db	48
    92                           
    93                           ;initializer for _prescription
    94  001DBC  78                 	db	120
    95  001DBD  78                 	db	120
    96  001DBE  78                 	db	120
    97                           
    98                           ;initializer for _entryarray
    99  001DBF  30                 	db	48
   100  001DC0  30                 	db	48
   101  001DC1  30                 	db	48
   102                           
   103                           ;initializer for _UART
   104  001DC2  52                 	db	low _uart
   105  001DC3  00                 	db	high _uart
   106                           
   107                           ;initializer for sendPillRequests@F3053
   108  001DC4  78                 	db	120
   109                           
   110                           ;initializer for findMode@F3044
   111  001DC5  5A                 	db	90
   112                           
   113                           ;initializer for main@F3074
   114  001DC6  5A                 	db	90
   115                           
   116                           ;initializer for _num_pills_L_data
   117  001DC7  30                 	db	48
   118                           
   119                           ;initializer for _num_pills_F_data
   120  001DC8  30                 	db	48
   121                           
   122                           ;initializer for _num_pills_R_data
   123  001DC9  30                 	db	48
   124                           
   125                           ;initializer for _modeOfOperation
   126  001DCA  78                 	db	120
   127                           
   128                           ;initializer for _pastPres
   129  001DCB  78                 	db	120
   130                           
   131                           	psect	mediumconst
   132  00FE46                     __pmediumconst:
   133                           	opt stack 0
   134  00FE46  00                 	db	0
   135  00FE47                     _keys:
   136                           	opt stack 0
   137  00FE47  31                 	db	49
   138  00FE48  32                 	db	50
   139  00FE49  33                 	db	51
   140  00FE4A  52                 	db	82
   141  00FE4B  45                 	db	69
   142  00FE4C  53                 	db	83
   143  00FE4D  4D                 	db	77
   144  00FE4E  46                 	db	70
   145  00FE4F  4F                 	db	79
   146  00FE50  41                 	db	65
   147  00FE51  42                 	db	66
   148  00FE52  4C                 	db	76
   149  00FE53  2A                 	db	42
   150  00FE54  4E                 	db	78
   151  00FE55  23                 	db	35
   152  00FE56  65                 	db	101
   153  00FE57  00                 	db	0
   154  00FE58                     __end_of_keys:
   155                           	opt stack 0
   156  00FE58                     _LCD_LEFT:
   157                           	opt stack 0
   158  00FE58  00                 	db	0
   159  00FE59                     __end_of_LCD_LEFT:
   160                           	opt stack 0
   161  00FE59                     _LCD_RIGHT:
   162                           	opt stack 0
   163  00FE59  01                 	db	1
   164  00FE5A                     __end_of_LCD_RIGHT:
   165                           	opt stack 0
   166  00FE5A                     _LCD_SIZE_VERT:
   167                           	opt stack 0
   168  00FE5A  02                 	db	2
   169  00FE5B                     __end_of_LCD_SIZE_VERT:
   170                           	opt stack 0
   171  00FE5B                     _LCD_SIZE_HORZ:
   172                           	opt stack 0
   173  00FE5B  10                 	db	16
   174  00FE5C                     __end_of_LCD_SIZE_HORZ:
   175                           	opt stack 0
   176  00FE5C                     _LCD_VERT_LIMIT:
   177                           	opt stack 0
   178  00FE5C  02                 	db	2
   179  00FE5D                     __end_of_LCD_VERT_LIMIT:
   180                           	opt stack 0
   181  00FE5D                     _LCD_HORZ_LIMIT:
   182                           	opt stack 0
   183  00FE5D  28                 	db	40
   184  00FE5E                     __end_of_LCD_HORZ_LIMIT:
   185                           	opt stack 0
   186  0000                     _SPBRG	set	4015
   187  0000                     _RCREG	set	4014
   188  0000                     _RCSTAbits	set	4011
   189  0000                     _TXREG	set	4013
   190  0000                     _TXSTAbits	set	4012
   191  0000                     _LATDbits	set	3980
   192  0000                     _PORTB	set	3969
   193  0000                     _PORTCbits	set	3970
   194  0000                     _LATCbits	set	3979
   195  0000                     _INTCONbits	set	4082
   196  0000                     _ADCON1	set	4033
   197  0000                     _ADCON0	set	4034
   198  0000                     _TRISE	set	3990
   199  0000                     _TRISD	set	3989
   200  0000                     _TRISC	set	3988
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISA	set	3986
   203  0000                     _LATE	set	3981
   204  0000                     _LATD	set	3980
   205  0000                     _LATC	set	3979
   206  0000                     _LATB	set	3978
   207  0000                     _LATA	set	3977
   208  0000                     _TRISC7	set	31911
   209  0000                     _TRISC6	set	31910
   210  0000                     _RCIE	set	31981
   211  0000                     _RCIF	set	31989
   212  0000                     _TXIE	set	31980
   213  0000                     _TRMT	set	32097
   214  0000                     _TXIF	set	31988
   215  0000                     _INT1IF	set	32640
   216  0000                     _INT1IE	set	32643
   217  00FE5E                     STR_30:
   218  00FE5E  4D                 	db	77	;'M'
   219  00FE5F  6F                 	db	111	;'o'
   220  00FE60  72                 	db	114	;'r'
   221  00FE61  6E                 	db	110	;'n'
   222  00FE62  69                 	db	105	;'i'
   223  00FE63  6E                 	db	110	;'n'
   224  00FE64  67                 	db	103	;'g'
   225  00FE65  20                 	db	32
   226  00FE66  26                 	db	38
   227  00FE67  20                 	db	32
   228  00FE68  41                 	db	65	;'A'
   229  00FE69  66                 	db	102	;'f'
   230  00FE6A  74                 	db	116	;'t'
   231  00FE6B  65                 	db	101	;'e'
   232  00FE6C  72                 	db	114	;'r'
   233  00FE6D  6E                 	db	110	;'n'
   234  00FE6E  6F                 	db	111	;'o'
   235  00FE6F  6F                 	db	111	;'o'
   236  00FE70  6E                 	db	110	;'n'
   237  00FE71  00                 	db	0
   238  00FE72                     STR_27:
   239  00FE72  41                 	db	65	;'A'
   240  00FE73  6C                 	db	108	;'l'
   241  00FE74  74                 	db	116	;'t'
   242  00FE75  20                 	db	32
   243  00FE76  64                 	db	100	;'d'
   244  00FE77  61                 	db	97	;'a'
   245  00FE78  79                 	db	121	;'y'
   246  00FE79  73                 	db	115	;'s'
   247  00FE7A  20                 	db	32
   248  00FE7B  2D                 	db	45
   249  00FE7C  20                 	db	32
   250  00FE7D  4D                 	db	77	;'M'
   251  00FE7E  6F                 	db	111	;'o'
   252  00FE7F  6E                 	db	110	;'n'
   253  00FE80  64                 	db	100	;'d'
   254  00FE81  61                 	db	97	;'a'
   255  00FE82  79                 	db	121	;'y'
   256  00FE83  00                 	db	0
   257  00FE84                     STR_26:
   258  00FE84  41                 	db	65	;'A'
   259  00FE85  6C                 	db	108	;'l'
   260  00FE86  74                 	db	116	;'t'
   261  00FE87  20                 	db	32
   262  00FE88  64                 	db	100	;'d'
   263  00FE89  61                 	db	97	;'a'
   264  00FE8A  79                 	db	121	;'y'
   265  00FE8B  73                 	db	115	;'s'
   266  00FE8C  20                 	db	32
   267  00FE8D  2D                 	db	45
   268  00FE8E  20                 	db	32
   269  00FE8F  53                 	db	83	;'S'
   270  00FE90  75                 	db	117	;'u'
   271  00FE91  6E                 	db	110	;'n'
   272  00FE92  64                 	db	100	;'d'
   273  00FE93  61                 	db	97	;'a'
   274  00FE94  79                 	db	121	;'y'
   275  00FE95  00                 	db	0
   276  00FE96                     STR_5:
   277  00FE96  52                 	db	82	;'R'
   278  00FE97  65                 	db	101	;'e'
   279  00FE98  70                 	db	112	;'p'
   280  00FE99  65                 	db	101	;'e'
   281  00FE9A  74                 	db	116	;'t'
   282  00FE9B  69                 	db	105	;'i'
   283  00FE9C  74                 	db	116	;'t'
   284  00FE9D  69                 	db	105	;'i'
   285  00FE9E  6F                 	db	111	;'o'
   286  00FE9F  6E                 	db	110	;'n'
   287  00FEA0  2F                 	db	47
   288  00FEA1  44                 	db	68	;'D'
   289  00FEA2  61                 	db	97	;'a'
   290  00FEA3  79                 	db	121	;'y'
   291  00FEA4  3A                 	db	58	;':'
   292  00FEA5  20                 	db	32
   293  00FEA6  00                 	db	0
   294  00FEA7                     STR_6:
   295  00FEA7  44                 	db	68	;'D'
   296  00FEA8  61                 	db	97	;'a'
   297  00FEA9  79                 	db	121	;'y'
   298  00FEAA  20                 	db	32
   299  00FEAB  46                 	db	70	;'F'
   300  00FEAC  72                 	db	114	;'r'
   301  00FEAD  65                 	db	101	;'e'
   302  00FEAE  71                 	db	113	;'q'
   303  00FEAF  75                 	db	117	;'u'
   304  00FEB0  65                 	db	101	;'e'
   305  00FEB1  6E                 	db	110	;'n'
   306  00FEB2  63                 	db	99	;'c'
   307  00FEB3  79                 	db	121	;'y'
   308  00FEB4  3A                 	db	58	;':'
   309  00FEB5  20                 	db	32
   310  00FEB6  00                 	db	0
   311  00FEB7                     STR_1:
   312  00FEB7  50                 	db	80	;'P'
   313  00FEB8  72                 	db	114	;'r'
   314  00FEB9  65                 	db	101	;'e'
   315  00FEBA  73                 	db	115	;'s'
   316  00FEBB  63                 	db	99	;'c'
   317  00FEBC  72                 	db	114	;'r'
   318  00FEBD  69                 	db	105	;'i'
   319  00FEBE  70                 	db	112	;'p'
   320  00FEBF  74                 	db	116	;'t'
   321  00FEC0  69                 	db	105	;'i'
   322  00FEC1  6F                 	db	111	;'o'
   323  00FEC2  6E                 	db	110	;'n'
   324  00FEC3  3A                 	db	58	;':'
   325  00FEC4  20                 	db	32
   326  00FEC5  00                 	db	0
   327  00FEC6                     STR_9:
   328  00FEC6  23                 	db	35
   329  00FEC7  20                 	db	32
   330  00FEC8  6F                 	db	111	;'o'
   331  00FEC9  66                 	db	102	;'f'
   332  00FECA  20                 	db	32
   333  00FECB  46                 	db	70	;'F'
   334  00FECC  20                 	db	32
   335  00FECD  50                 	db	80	;'P'
   336  00FECE  69                 	db	105	;'i'
   337  00FECF  6C                 	db	108	;'l'
   338  00FED0  6C                 	db	108	;'l'
   339  00FED1  73                 	db	115	;'s'
   340  00FED2  3A                 	db	58	;':'
   341  00FED3  20                 	db	32
   342  00FED4  00                 	db	0
   343  00FED5                     STR_8:
   344  00FED5  23                 	db	35
   345  00FED6  20                 	db	32
   346  00FED7  6F                 	db	111	;'o'
   347  00FED8  66                 	db	102	;'f'
   348  00FED9  20                 	db	32
   349  00FEDA  52                 	db	82	;'R'
   350  00FEDB  20                 	db	32
   351  00FEDC  50                 	db	80	;'P'
   352  00FEDD  69                 	db	105	;'i'
   353  00FEDE  6C                 	db	108	;'l'
   354  00FEDF  6C                 	db	108	;'l'
   355  00FEE0  73                 	db	115	;'s'
   356  00FEE1  3A                 	db	58	;':'
   357  00FEE2  20                 	db	32
   358  00FEE3  00                 	db	0
   359  00FEE4                     STR_3:
   360  00FEE4  23                 	db	35
   361  00FEE5  20                 	db	32
   362  00FEE6  6F                 	db	111	;'o'
   363  00FEE7  66                 	db	102	;'f'
   364  00FEE8  20                 	db	32
   365  00FEE9  46                 	db	70	;'F'
   366  00FEEA  20                 	db	32
   367  00FEEB  70                 	db	112	;'p'
   368  00FEEC  69                 	db	105	;'i'
   369  00FEED  6C                 	db	108	;'l'
   370  00FEEE  6C                 	db	108	;'l'
   371  00FEEF  73                 	db	115	;'s'
   372  00FEF0  3A                 	db	58	;':'
   373  00FEF1  20                 	db	32
   374  00FEF2  00                 	db	0
   375  00FEF3                     STR_4:
   376  00FEF3  23                 	db	35
   377  00FEF4  20                 	db	32
   378  00FEF5  6F                 	db	111	;'o'
   379  00FEF6  66                 	db	102	;'f'
   380  00FEF7  20                 	db	32
   381  00FEF8  4C                 	db	76	;'L'
   382  00FEF9  20                 	db	32
   383  00FEFA  70                 	db	112	;'p'
   384  00FEFB  69                 	db	105	;'i'
   385  00FEFC  6C                 	db	108	;'l'
   386  00FEFD  6C                 	db	108	;'l'
   387  00FEFE  73                 	db	115	;'s'
   388  00FEFF  3A                 	db	58	;':'
   389  00FF00  20                 	db	32
   390  00FF01  00                 	db	0
   391  00FF02                     STR_2:
   392  00FF02  23                 	db	35
   393  00FF03  20                 	db	32
   394  00FF04  6F                 	db	111	;'o'
   395  00FF05  66                 	db	102	;'f'
   396  00FF06  20                 	db	32
   397  00FF07  52                 	db	82	;'R'
   398  00FF08  20                 	db	32
   399  00FF09  70                 	db	112	;'p'
   400  00FF0A  69                 	db	105	;'i'
   401  00FF0B  6C                 	db	108	;'l'
   402  00FF0C  6C                 	db	108	;'l'
   403  00FF0D  73                 	db	115	;'s'
   404  00FF0E  3A                 	db	58	;':'
   405  00FF0F  20                 	db	32
   406  00FF10  00                 	db	0
   407  00FF11                     STR_31:
   408  00FF11  41                 	db	65	;'A'
   409  00FF12  6C                 	db	108	;'l'
   410  00FF13  74                 	db	116	;'t'
   411  00FF14  20                 	db	32
   412  00FF15  4D                 	db	77	;'M'
   413  00FF16  6F                 	db	111	;'o'
   414  00FF17  72                 	db	114	;'r'
   415  00FF18  6E                 	db	110	;'n'
   416  00FF19  20                 	db	32
   417  00FF1A  26                 	db	38
   418  00FF1B  20                 	db	32
   419  00FF1C  41                 	db	65	;'A'
   420  00FF1D  66                 	db	102	;'f'
   421  00FF1E  74                 	db	116	;'t'
   422  00FF1F  00                 	db	0
   423  00FF20                     STR_34:
   424  00FF20  49                 	db	73	;'I'
   425  00FF21  6E                 	db	110	;'n'
   426  00FF22  76                 	db	118	;'v'
   427  00FF23  61                 	db	97	;'a'
   428  00FF24  6C                 	db	108	;'l'
   429  00FF25  69                 	db	105	;'i'
   430  00FF26  64                 	db	100	;'d'
   431  00FF27  20                 	db	32
   432  00FF28  69                 	db	105	;'i'
   433  00FF29  6E                 	db	110	;'n'
   434  00FF2A  70                 	db	112	;'p'
   435  00FF2B  75                 	db	117	;'u'
   436  00FF2C  74                 	db	116	;'t'
   437  00FF2D  00                 	db	0
   438  00FF2E                     STR_42:
   439  00FF2E  72                 	db	114	;'r'
   440  00FF2F  65                 	db	101	;'e'
   441  00FF30  63                 	db	99	;'c'
   442  00FF31  65                 	db	101	;'e'
   443  00FF32  69                 	db	105	;'i'
   444  00FF33  76                 	db	118	;'v'
   445  00FF34  65                 	db	101	;'e'
   446  00FF35  64                 	db	100	;'d'
   447  00FF36  20                 	db	32
   448  00FF37  32                 	db	50	;'2'
   449  00FF38  00                 	db	0
   450  00FF39                     STR_43:
   451  00FF39  72                 	db	114	;'r'
   452  00FF3A  65                 	db	101	;'e'
   453  00FF3B  63                 	db	99	;'c'
   454  00FF3C  65                 	db	101	;'e'
   455  00FF3D  69                 	db	105	;'i'
   456  00FF3E  76                 	db	118	;'v'
   457  00FF3F  65                 	db	101	;'e'
   458  00FF40  64                 	db	100	;'d'
   459  00FF41  20                 	db	32
   460  00FF42  33                 	db	51	;'3'
   461  00FF43  00                 	db	0
   462  00FF44                     STR_44:
   463  00FF44  72                 	db	114	;'r'
   464  00FF45  65                 	db	101	;'e'
   465  00FF46  63                 	db	99	;'c'
   466  00FF47  65                 	db	101	;'e'
   467  00FF48  69                 	db	105	;'i'
   468  00FF49  76                 	db	118	;'v'
   469  00FF4A  65                 	db	101	;'e'
   470  00FF4B  64                 	db	100	;'d'
   471  00FF4C  20                 	db	32
   472  00FF4D  34                 	db	52	;'4'
   473  00FF4E  00                 	db	0
   474  00FF4F                     STR_45:
   475  00FF4F  72                 	db	114	;'r'
   476  00FF50  65                 	db	101	;'e'
   477  00FF51  63                 	db	99	;'c'
   478  00FF52  65                 	db	101	;'e'
   479  00FF53  69                 	db	105	;'i'
   480  00FF54  76                 	db	118	;'v'
   481  00FF55  65                 	db	101	;'e'
   482  00FF56  64                 	db	100	;'d'
   483  00FF57  20                 	db	32
   484  00FF58  35                 	db	53	;'5'
   485  00FF59  00                 	db	0
   486  00FF5A                     STR_46:
   487  00FF5A  72                 	db	114	;'r'
   488  00FF5B  65                 	db	101	;'e'
   489  00FF5C  63                 	db	99	;'c'
   490  00FF5D  65                 	db	101	;'e'
   491  00FF5E  69                 	db	105	;'i'
   492  00FF5F  76                 	db	118	;'v'
   493  00FF60  65                 	db	101	;'e'
   494  00FF61  64                 	db	100	;'d'
   495  00FF62  20                 	db	32
   496  00FF63  36                 	db	54	;'6'
   497  00FF64  00                 	db	0
   498  00FF65                     STR_47:
   499  00FF65  72                 	db	114	;'r'
   500  00FF66  65                 	db	101	;'e'
   501  00FF67  63                 	db	99	;'c'
   502  00FF68  65                 	db	101	;'e'
   503  00FF69  69                 	db	105	;'i'
   504  00FF6A  76                 	db	118	;'v'
   505  00FF6B  65                 	db	101	;'e'
   506  00FF6C  64                 	db	100	;'d'
   507  00FF6D  20                 	db	32
   508  00FF6E  37                 	db	55	;'7'
   509  00FF6F  00                 	db	0
   510  00FF70                     STR_48:
   511  00FF70  72                 	db	114	;'r'
   512  00FF71  65                 	db	101	;'e'
   513  00FF72  63                 	db	99	;'c'
   514  00FF73  65                 	db	101	;'e'
   515  00FF74  69                 	db	105	;'i'
   516  00FF75  76                 	db	118	;'v'
   517  00FF76  65                 	db	101	;'e'
   518  00FF77  64                 	db	100	;'d'
   519  00FF78  20                 	db	32
   520  00FF79  38                 	db	56	;'8'
   521  00FF7A  00                 	db	0
   522  00FF7B                     STR_33:
   523  00FF7B  72                 	db	114	;'r'
   524  00FF7C  65                 	db	101	;'e'
   525  00FF7D  63                 	db	99	;'c'
   526  00FF7E  65                 	db	101	;'e'
   527  00FF7F  69                 	db	105	;'i'
   528  00FF80  76                 	db	118	;'v'
   529  00FF81  65                 	db	101	;'e'
   530  00FF82  64                 	db	100	;'d'
   531  00FF83  21                 	db	33
   532  00FF84  21                 	db	33
   533  00FF85  00                 	db	0
   534  00FF86                     STR_19:
   535  00FF86  30                 	db	48	;'0'
   536  00FF87  20                 	db	32
   537  00FF88  46                 	db	70	;'F'
   538  00FF89  20                 	db	32
   539  00FF8A  70                 	db	112	;'p'
   540  00FF8B  69                 	db	105	;'i'
   541  00FF8C  6C                 	db	108	;'l'
   542  00FF8D  6C                 	db	108	;'l'
   543  00FF8E  73                 	db	115	;'s'
   544  00FF8F  00                 	db	0
   545  00FF90                     STR_21:
   546  00FF90  32                 	db	50	;'2'
   547  00FF91  20                 	db	32
   548  00FF92  46                 	db	70	;'F'
   549  00FF93  20                 	db	32
   550  00FF94  70                 	db	112	;'p'
   551  00FF95  69                 	db	105	;'i'
   552  00FF96  6C                 	db	108	;'l'
   553  00FF97  6C                 	db	108	;'l'
   554  00FF98  73                 	db	115	;'s'
   555  00FF99  00                 	db	0
   556  00FF9A                     STR_22:
   557  00FF9A  30                 	db	48	;'0'
   558  00FF9B  20                 	db	32
   559  00FF9C  4C                 	db	76	;'L'
   560  00FF9D  20                 	db	32
   561  00FF9E  70                 	db	112	;'p'
   562  00FF9F  69                 	db	105	;'i'
   563  00FFA0  6C                 	db	108	;'l'
   564  00FFA1  6C                 	db	108	;'l'
   565  00FFA2  73                 	db	115	;'s'
   566  00FFA3  00                 	db	0
   567  00FFA4                     STR_24:
   568  00FFA4  32                 	db	50	;'2'
   569  00FFA5  20                 	db	32
   570  00FFA6  4C                 	db	76	;'L'
   571  00FFA7  20                 	db	32
   572  00FFA8  70                 	db	112	;'p'
   573  00FFA9  69                 	db	105	;'i'
   574  00FFAA  6C                 	db	108	;'l'
   575  00FFAB  6C                 	db	108	;'l'
   576  00FFAC  73                 	db	115	;'s'
   577  00FFAD  00                 	db	0
   578  00FFAE                     STR_16:
   579  00FFAE  30                 	db	48	;'0'
   580  00FFAF  20                 	db	32
   581  00FFB0  52                 	db	82	;'R'
   582  00FFB1  20                 	db	32
   583  00FFB2  70                 	db	112	;'p'
   584  00FFB3  69                 	db	105	;'i'
   585  00FFB4  6C                 	db	108	;'l'
   586  00FFB5  6C                 	db	108	;'l'
   587  00FFB6  73                 	db	115	;'s'
   588  00FFB7  00                 	db	0
   589  00FFB8                     STR_18:
   590  00FFB8  32                 	db	50	;'2'
   591  00FFB9  20                 	db	32
   592  00FFBA  52                 	db	82	;'R'
   593  00FFBB  20                 	db	32
   594  00FFBC  70                 	db	112	;'p'
   595  00FFBD  69                 	db	105	;'i'
   596  00FFBE  6C                 	db	108	;'l'
   597  00FFBF  6C                 	db	108	;'l'
   598  00FFC0  73                 	db	115	;'s'
   599  00FFC1  00                 	db	0
   600  00FFC2                     STR_20:
   601  00FFC2  31                 	db	49	;'1'
   602  00FFC3  20                 	db	32
   603  00FFC4  46                 	db	70	;'F'
   604  00FFC5  20                 	db	32
   605  00FFC6  70                 	db	112	;'p'
   606  00FFC7  69                 	db	105	;'i'
   607  00FFC8  6C                 	db	108	;'l'
   608  00FFC9  6C                 	db	108	;'l'
   609  00FFCA  00                 	db	0
   610  00FFCB                     STR_23:
   611  00FFCB  31                 	db	49	;'1'
   612  00FFCC  20                 	db	32
   613  00FFCD  4C                 	db	76	;'L'
   614  00FFCE  20                 	db	32
   615  00FFCF  70                 	db	112	;'p'
   616  00FFD0  69                 	db	105	;'i'
   617  00FFD1  6C                 	db	108	;'l'
   618  00FFD2  6C                 	db	108	;'l'
   619  00FFD3  00                 	db	0
   620  00FFD4                     STR_17:
   621  00FFD4  31                 	db	49	;'1'
   622  00FFD5  20                 	db	32
   623  00FFD6  52                 	db	82	;'R'
   624  00FFD7  20                 	db	32
   625  00FFD8  70                 	db	112	;'p'
   626  00FFD9  69                 	db	105	;'i'
   627  00FFDA  6C                 	db	108	;'l'
   628  00FFDB  6C                 	db	108	;'l'
   629  00FFDC  00                 	db	0
   630  00FFDD                     STR_25:
   631  00FFDD  45                 	db	69	;'E'
   632  00FFDE  76                 	db	118	;'v'
   633  00FFDF  65                 	db	101	;'e'
   634  00FFE0  72                 	db	114	;'r'
   635  00FFE1  79                 	db	121	;'y'
   636  00FFE2  64                 	db	100	;'d'
   637  00FFE3  61                 	db	97	;'a'
   638  00FFE4  79                 	db	121	;'y'
   639  00FFE5  00                 	db	0
   640  00FFE6                     STR_28:
   641  00FFE6  4D                 	db	77	;'M'
   642  00FFE7  6F                 	db	111	;'o'
   643  00FFE8  72                 	db	114	;'r'
   644  00FFE9  6E                 	db	110	;'n'
   645  00FFEA  69                 	db	105	;'i'
   646  00FFEB  6E                 	db	110	;'n'
   647  00FFEC  67                 	db	103	;'g'
   648  00FFED  00                 	db	0
   649  00FFEE                     STR_32:
   650  00FFEE  77                 	db	119	;'w'
   651  00FFEF  61                 	db	97	;'a'
   652  00FFF0  69                 	db	105	;'i'
   653  00FFF1  74                 	db	116	;'t'
   654  00FFF2  69                 	db	105	;'i'
   655  00FFF3  6E                 	db	110	;'n'
   656  00FFF4  67                 	db	103	;'g'
   657  00FFF5  00                 	db	0
   658  00FFF6                     STR_12:
   659  00FFF6  4C                 	db	76	;'L'
   660  00FFF7  32                 	db	50	;'2'
   661  00FFF8  00                 	db	0
   662  00FFF9                     STR_11:
   663  00FFF9  4C                 	db	76	;'L'
   664  00FFFA  33                 	db	51	;'3'
   665  00FFFB  00                 	db	0
   666  00FFFC                     STR_13:
   667  00FFFC  4C                 	db	76	;'L'
   668  00FFFD  00                 	db	0
   669  0000                     
   670                           ; #config settings
   671  00FFFE  00                 	db	0	; dummy byte at the end
   672  0000                     
   673                           	psect	cinit
   674  001D10                     __pcinit:
   675                           	opt stack 0
   676  001D10                     start_initialization:
   677                           	opt stack 0
   678  001D10                     __initialization:
   679                           	opt stack 0
   680                           
   681                           ; Initialize objects allocated to COMRAM (30 bytes)
   682                           ; load TBLPTR registers with __pidataCOMRAM
   683  001D10  0EAE               	movlw	low __pidataCOMRAM
   684  001D12  6EF6               	movwf	tblptrl,c
   685  001D14  0E1D               	movlw	high __pidataCOMRAM
   686  001D16  6EF7               	movwf	tblptrh,c
   687  001D18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   688  001D1A  6EF8               	movwf	tblptru,c
   689  001D1C  EE00  F026         	lfsr	0,__pdataCOMRAM
   690  001D20  EE10 F01E          	lfsr	1,30
   691  001D24                     copy_data0:
   692  001D24  0009               	tblrd		*+
   693  001D26  CFF5 FFEE          	movff	tablat,postinc0
   694  001D2A  50E5               	movf	postdec1,w,c
   695  001D2C  50E1               	movf	fsr1l,w,c
   696  001D2E  E1FA               	bnz	copy_data0
   697                           
   698                           ; Clear objects allocated to BANK0 (16 bytes)
   699  001D30  EE00  F099         	lfsr	0,__pbssBANK0
   700  001D34  0E10               	movlw	16
   701  001D36                     clear_0:
   702  001D36  6AEE               	clrf	postinc0,c
   703  001D38  06E8               	decf	wreg,f,c
   704  001D3A  E1FD               	bnz	clear_0
   705                           
   706                           ; Clear objects allocated to COMRAM (26 bytes)
   707  001D3C  EE00  F044         	lfsr	0,__pbssCOMRAM
   708  001D40  0E1A               	movlw	26
   709  001D42                     clear_1:
   710  001D42  6AEE               	clrf	postinc0,c
   711  001D44  06E8               	decf	wreg,f,c
   712  001D46  E1FD               	bnz	clear_1
   713  001D48                     end_of_initialization:
   714                           	opt stack 0
   715  001D48                     __end_of__initialization:
   716                           	opt stack 0
   717  001D48  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   718  001D4A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   719  001D4C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   720  001D4E  6EF8               	movwf	tblptru,c
   721  001D50  0100               	movlb	0
   722  001D52  EFF3  F006         	goto	_main	;jump to C main() function
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           postdec1	equ	0xFE5
   730                           fsr1l	equ	0xFE1
   731                           
   732                           	psect	bssCOMRAM
   733  000044                     __pbssCOMRAM:
   734                           	opt stack 0
   735  000044                     _done:
   736                           	opt stack 0
   737  000044                     	ds	2
   738  000046                     _prevPills:
   739                           	opt stack 0
   740  000046                     	ds	2
   741  000048                     _numPills:
   742                           	opt stack 0
   743  000048                     	ds	2
   744  00004A                     _LCDinterruptState:
   745                           	opt stack 0
   746  00004A                     	ds	1
   747  00004B                     _UARTinterruptState:
   748                           	opt stack 0
   749  00004B                     	ds	1
   750  00004C                     _side:
   751                           	opt stack 0
   752  00004C                     	ds	1
   753  00004D                     _frequency_data:
   754                           	opt stack 0
   755  00004D                     	ds	1
   756  00004E                     _repetition_data:
   757                           	opt stack 0
   758  00004E                     	ds	1
   759  00004F                     _prescription_data:
   760                           	opt stack 0
   761  00004F                     	ds	1
   762  000050                     _reset:
   763                           	opt stack 0
   764  000050                     	ds	1
   765  000051                     _x:
   766                           	opt stack 0
   767  000051                     	ds	1
   768  000052                     _uart:
   769                           	opt stack 0
   770  000052                     	ds	12
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           postinc0	equ	0xFEE
   776                           wreg	equ	0xFE8
   777                           postdec1	equ	0xFE5
   778                           fsr1l	equ	0xFE1
   779                           
   780                           	psect	dataCOMRAM
   781  000026                     __pdataCOMRAM:
   782                           	opt stack 0
   783  000026                     _pillBox:
   784                           	opt stack 0
   785  000026                     	ds	14
   786  000034                     _prescription:
   787                           	opt stack 0
   788  000034                     	ds	3
   789  000037                     _entryarray:
   790                           	opt stack 0
   791  000037                     	ds	3
   792  00003A                     _UART:
   793                           	opt stack 0
   794  00003A                     	ds	2
   795  00003C                     sendPillRequests@F3053:
   796                           	opt stack 0
   797  00003C                     	ds	1
   798  00003D                     findMode@F3044:
   799                           	opt stack 0
   800  00003D                     	ds	1
   801  00003E                     main@F3074:
   802                           	opt stack 0
   803  00003E                     	ds	1
   804  00003F                     _num_pills_L_data:
   805                           	opt stack 0
   806  00003F                     	ds	1
   807  000040                     _num_pills_F_data:
   808                           	opt stack 0
   809  000040                     	ds	1
   810  000041                     _num_pills_R_data:
   811                           	opt stack 0
   812  000041                     	ds	1
   813  000042                     _modeOfOperation:
   814                           	opt stack 0
   815  000042                     	ds	1
   816  000043                     _pastPres:
   817                           	opt stack 0
   818  000043                     	ds	1
   819                           tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           postinc0	equ	0xFEE
   824                           wreg	equ	0xFE8
   825                           postdec1	equ	0xFE5
   826                           fsr1l	equ	0xFE1
   827                           
   828                           	psect	bssBANK0
   829  000099                     __pbssBANK0:
   830                           	opt stack 0
   831  000099                     _arr_dataRX:
   832                           	opt stack 0
   833  000099                     	ds	16
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1l	equ	0xFE1
   842                           
   843                           	psect	cstackBANK0
   844  000080                     __pcstackBANK0:
   845                           	opt stack 0
   846  000080                     ?_printf:
   847                           	opt stack 0
   848  000080                     ?___aldiv:
   849                           	opt stack 0
   850  000080                     uartTransmitBlocking@numTransmits:
   851                           	opt stack 0
   852  000080                     printf@f:
   853                           	opt stack 0
   854  000080                     ___aldiv@dividend:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x0
   858  000080                     	ds	1
   859  000081                     ??_findMode:
   860                           
   861                           ; 1 bytes @ 0x1
   862  000081                     	ds	1
   863  000082                     printf@ap:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x2
   867  000082                     	ds	1
   868  000083                     findMode@input:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x3
   872  000083                     	ds	1
   873  000084                     printf@c:
   874                           	opt stack 0
   875  000084                     ___aldiv@divisor:
   876                           	opt stack 0
   877                           
   878                           ; 4 bytes @ 0x4
   879  000084                     	ds	1
   880  000085                     ??_sendPillRequests:
   881  000085                     ?_user_interface:
   882                           	opt stack 0
   883  000085                     findMode@flag:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x5
   887  000085                     	ds	2
   888  000087                     ??_user_interface:
   889  000087                     findMode@arr:
   890                           	opt stack 0
   891  000087                     sendPillRequests@i:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x7
   895  000087                     	ds	1
   896  000088                     ___aldiv@counter:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x8
   900  000088                     	ds	1
   901  000089                     ___aldiv@sign:
   902                           	opt stack 0
   903  000089                     sendPillRequests@input:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x9
   907  000089                     	ds	1
   908  00008A                     ___aldiv@quotient:
   909                           	opt stack 0
   910                           
   911                           ; 4 bytes @ 0xA
   912  00008A                     	ds	1
   913  00008B                     sendPillRequests@arr:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0xB
   917  00008B                     	ds	3
   918  00008E                     ??_UART_Init:
   919                           
   920                           ; 1 bytes @ 0xE
   921  00008E                     	ds	4
   922  000092                     ??_main:
   923                           
   924                           ; 1 bytes @ 0x12
   925  000092                     	ds	2
   926  000094                     main@res:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x14
   930  000094                     	ds	2
   931  000096                     main@input:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x16
   935  000096                     	ds	2
   936  000098                     main@arr:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x18
   940  000098                     	ds	1
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           
   950                           	psect	cstackCOMRAM
   951  000001                     __pcstackCOMRAM:
   952                           	opt stack 0
   953  000001                     i2lcdNibble@temp:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x0
   957  000001                     	ds	1
   958  000002                     i2lcdNibble@data:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x1
   962  000002                     	ds	1
   963  000003                     i2lcdInst@data:
   964                           	opt stack 0
   965  000003                     i2putch@data:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x2
   969  000003                     	ds	1
   970  000004                     ?i2_printf:
   971                           	opt stack 0
   972  000004                     i2printf@f:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x3
   976  000004                     	ds	2
   977  000006                     i2printf@ap:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x5
   981  000006                     	ds	2
   982  000008                     i2printf@c:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x7
   986  000008                     	ds	1
   987  000009                     ??_resetSection:
   988                           
   989                           ; 1 bytes @ 0x8
   990  000009                     	ds	1
   991  00000A                     ??_interruptHandler:
   992                           
   993                           ; 1 bytes @ 0x9
   994  00000A                     	ds	20
   995  00001E                     interruptHandler@k_375:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x1D
   999  00001E                     	ds	1
  1000  00001F                     interruptHandler@keypress_374:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x1E
  1004  00001F                     	ds	1
  1005  000020                     interruptHandler@keypress:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x1F
  1009  000020                     	ds	1
  1010  000021                     interruptHandler@k:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x20
  1014  000021                     	ds	1
  1015  000022                     lcdNibble@temp:
  1016                           	opt stack 0
  1017  000022                     uartTransmitBlocking@data:
  1018                           	opt stack 0
  1019  000022                     UART_Init@baud:
  1020                           	opt stack 0
  1021                           
  1022                           ; 4 bytes @ 0x21
  1023  000022                     	ds	1
  1024  000023                     lcdNibble@data:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x22
  1028  000023                     	ds	1
  1029  000024                     lcdInst@data:
  1030                           	opt stack 0
  1031  000024                     putch@data:
  1032                           	opt stack 0
  1033  000024                     uartTransmitBlocking@numBytes:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x23
  1037  000024                     	ds	1
  1038  000025                     ??_initLCD:
  1039  000025                     ??_uartTransmitBlocking:
  1040                           
  1041                           ; 1 bytes @ 0x24
  1042  000025                     	ds	1
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1l	equ	0xFE1
  1051                           
  1052 ;;
  1053 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1054 ;;
  1055 ;; *************** function _main *****************
  1056 ;; Defined at:
  1057 ;;		line 185 in file "main.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  input           2   22[BANK0 ] int 
  1062 ;;  res             2   20[BANK0 ] int 
  1063 ;;  arr             1   24[BANK0 ] unsigned char [1]
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;Total ram usage:        7 bytes
  1078 ;; Hardware stack levels required when called:    9
  1079 ;; This function calls:
  1080 ;;		_UART_Init
  1081 ;;		_findMode
  1082 ;;		_lcdInst
  1083 ;;		_placeMarkers
  1084 ;;		_printf
  1085 ;;		_sendPillRequests
  1086 ;;		_uartTransmitBlocking
  1087 ;;		_user_interface
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text0
  1094  000DE6                     __ptext0:
  1095                           	opt stack 0
  1096  000DE6                     _main:
  1097                           	opt stack 22
  1098                           
  1099                           ;main.c: 192: LATA = 0x00;
  1100                           
  1101                           ;incstack = 0
  1102  000DE6  0E00               	movlw	0
  1103  000DE8  6E89               	movwf	3977,c	;volatile
  1104                           
  1105                           ;main.c: 193: LATB = 0x00;
  1106  000DEA  0E00               	movlw	0
  1107  000DEC  6E8A               	movwf	3978,c	;volatile
  1108                           
  1109                           ;main.c: 194: LATC = 0x00;
  1110  000DEE  0E00               	movlw	0
  1111  000DF0  6E8B               	movwf	3979,c	;volatile
  1112                           
  1113                           ;main.c: 195: LATD = 0x00;
  1114  000DF2  0E00               	movlw	0
  1115  000DF4  6E8C               	movwf	3980,c	;volatile
  1116                           
  1117                           ;main.c: 196: LATE = 0x00;
  1118  000DF6  0E00               	movlw	0
  1119  000DF8  6E8D               	movwf	3981,c	;volatile
  1120                           
  1121                           ;main.c: 200: TRISA = 0xFF;
  1122  000DFA  6892               	setf	3986,c	;volatile
  1123                           
  1124                           ;main.c: 201: TRISB = 0xFF;
  1125  000DFC  6893               	setf	3987,c	;volatile
  1126                           
  1127                           ;main.c: 202: TRISC = 0x00;
  1128  000DFE  0E00               	movlw	0
  1129  000E00  6E94               	movwf	3988,c	;volatile
  1130                           
  1131                           ;main.c: 203: TRISD = 0x00;
  1132  000E02  0E00               	movlw	0
  1133  000E04  6E95               	movwf	3989,c	;volatile
  1134                           
  1135                           ;main.c: 204: TRISE = 0x00;
  1136  000E06  0E00               	movlw	0
  1137  000E08  6E96               	movwf	3990,c	;volatile
  1138                           
  1139                           ;main.c: 207: ADCON0 = 0x00;
  1140  000E0A  0E00               	movlw	0
  1141  000E0C  6EC2               	movwf	4034,c	;volatile
  1142                           
  1143                           ;main.c: 208: ADCON1 = 0b00001111;
  1144  000E0E  0E0F               	movlw	15
  1145  000E10  6EC1               	movwf	4033,c	;volatile
  1146                           
  1147                           ;main.c: 211: INT1IE = 1;
  1148  000E12  86F0               	bsf	intcon3,3,c	;volatile
  1149                           
  1150                           ;main.c: 212: (INTCONbits.GIE = 1);
  1151  000E14  8EF2               	bsf	intcon,7,c	;volatile
  1152                           
  1153                           ;main.c: 213: UART_Init(9600);
  1154  000E16  0E80               	movlw	128
  1155  000E18  6E22               	movwf	UART_Init@baud,c
  1156  000E1A  0E25               	movlw	37
  1157  000E1C  6E23               	movwf	UART_Init@baud+1,c
  1158  000E1E  0E00               	movlw	0
  1159  000E20  6E24               	movwf	UART_Init@baud+2,c
  1160  000E22  0E00               	movlw	0
  1161  000E24  6E25               	movwf	UART_Init@baud+3,c
  1162  000E26  EC6A  F00D         	call	_UART_Init	;wreg free
  1163                           
  1164                           ;main.c: 215: int res = user_interface();
  1165  000E2A  EC82  F00A         	call	_user_interface	;wreg free
  1166  000E2E  C085  F094         	movff	?_user_interface,main@res
  1167  000E32  C086  F095         	movff	?_user_interface+1,main@res+1
  1168                           
  1169                           ;main.c: 217: if(num_pills_R_data == '0'){
  1170  000E36  0E30               	movlw	48
  1171  000E38  1841               	xorwf	_num_pills_R_data,w,c
  1172  000E3A  A4D8               	btfss	status,2,c
  1173  000E3C  D008               	goto	l162
  1174                           
  1175                           ;main.c: 218: printf("0 R pills");
  1176  000E3E  0EAE               	movlw	low STR_16
  1177  000E40  0100               	movlb	0	; () banked
  1178  000E42  6F80               	movwf	printf@f& (0+255),b
  1179  000E44  0EFF               	movlw	high STR_16
  1180  000E46  6F81               	movwf	(printf@f+1)& (0+255),b
  1181  000E48  ECAB  F00E         	call	_printf	;wreg free
  1182                           
  1183                           ;main.c: 219: } else if(num_pills_R_data == '1'){
  1184  000E4C  D017               	goto	l166
  1185  000E4E                     l162:
  1186  000E4E  0E31               	movlw	49
  1187  000E50  1841               	xorwf	_num_pills_R_data,w,c
  1188  000E52  A4D8               	btfss	status,2,c
  1189  000E54  D008               	goto	l164
  1190                           
  1191                           ;main.c: 220: printf("1 R pill");
  1192  000E56  0ED4               	movlw	low STR_17
  1193  000E58  0100               	movlb	0	; () banked
  1194  000E5A  6F80               	movwf	printf@f& (0+255),b
  1195  000E5C  0EFF               	movlw	high STR_17
  1196  000E5E  6F81               	movwf	(printf@f+1)& (0+255),b
  1197  000E60  ECAB  F00E         	call	_printf	;wreg free
  1198                           
  1199                           ;main.c: 221: } else if(num_pills_R_data == '2'){
  1200  000E64  D00B               	goto	l166
  1201  000E66                     l164:
  1202  000E66  0E32               	movlw	50
  1203  000E68  1841               	xorwf	_num_pills_R_data,w,c
  1204  000E6A  A4D8               	btfss	status,2,c
  1205  000E6C  D007               	goto	l166
  1206                           
  1207                           ;main.c: 222: printf("2 R pills");
  1208  000E6E  0EB8               	movlw	low STR_18
  1209  000E70  0100               	movlb	0	; () banked
  1210  000E72  6F80               	movwf	printf@f& (0+255),b
  1211  000E74  0EFF               	movlw	high STR_18
  1212  000E76  6F81               	movwf	(printf@f+1)& (0+255),b
  1213  000E78  ECAB  F00E         	call	_printf	;wreg free
  1214  000E7C                     l166:
  1215                           
  1216                           ;main.c: 223: }
  1217                           ;main.c: 225: lcdInst(0xC0);;
  1218  000E7C  0EC0               	movlw	192
  1219  000E7E  ECF0  F00E         	call	_lcdInst
  1220                           
  1221                           ;main.c: 226: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1222  000E82  0E33               	movlw	51
  1223  000E84  0100               	movlb	0	; () banked
  1224  000E86  6F93               	movwf	(??_main+1)& (0+255),b
  1225  000E88  0EBB               	movlw	187
  1226  000E8A  6F92               	movwf	??_main& (0+255),b
  1227  000E8C  0EDF               	movlw	223
  1228  000E8E                     u4817:
  1229  000E8E  2EE8               	decfsz	wreg,f,c
  1230  000E90  D7FE               	bra	u4817
  1231  000E92  2F92               	decfsz	??_main& (0+255),f,b
  1232  000E94  D7FC               	bra	u4817
  1233  000E96  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1234  000E98  D7FA               	bra	u4817
  1235  000E9A  D000               	nop2	
  1236                           
  1237                           ;main.c: 227: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1238  000E9C  0E01               	movlw	1
  1239  000E9E  ECF0  F00E         	call	_lcdInst
  1240  000EA2  0EC3               	movlw	195
  1241  000EA4  0100               	movlb	0	; () banked
  1242  000EA6  6F92               	movwf	??_main& (0+255),b
  1243  000EA8  0ECD               	movlw	205
  1244  000EAA                     u4827:
  1245  000EAA  2EE8               	decfsz	wreg,f,c
  1246  000EAC  D7FE               	bra	u4827
  1247  000EAE  2F92               	decfsz	??_main& (0+255),f,b
  1248  000EB0  D7FC               	bra	u4827
  1249                           
  1250                           ;main.c: 229: if(num_pills_F_data == '0'){
  1251  000EB2  0E30               	movlw	48
  1252  000EB4  1840               	xorwf	_num_pills_F_data,w,c
  1253  000EB6  A4D8               	btfss	status,2,c
  1254  000EB8  D008               	goto	l167
  1255                           
  1256                           ;main.c: 230: printf("0 F pills");
  1257  000EBA  0E86               	movlw	low STR_19
  1258  000EBC  0100               	movlb	0	; () banked
  1259  000EBE  6F80               	movwf	printf@f& (0+255),b
  1260  000EC0  0EFF               	movlw	high STR_19
  1261  000EC2  6F81               	movwf	(printf@f+1)& (0+255),b
  1262  000EC4  ECAB  F00E         	call	_printf	;wreg free
  1263                           
  1264                           ;main.c: 231: } else if(num_pills_F_data == '1'){
  1265  000EC8  D017               	goto	l171
  1266  000ECA                     l167:
  1267  000ECA  0E31               	movlw	49
  1268  000ECC  1840               	xorwf	_num_pills_F_data,w,c
  1269  000ECE  A4D8               	btfss	status,2,c
  1270  000ED0  D008               	goto	l169
  1271                           
  1272                           ;main.c: 232: printf("1 F pill");
  1273  000ED2  0EC2               	movlw	low STR_20
  1274  000ED4  0100               	movlb	0	; () banked
  1275  000ED6  6F80               	movwf	printf@f& (0+255),b
  1276  000ED8  0EFF               	movlw	high STR_20
  1277  000EDA  6F81               	movwf	(printf@f+1)& (0+255),b
  1278  000EDC  ECAB  F00E         	call	_printf	;wreg free
  1279                           
  1280                           ;main.c: 233: } else if(num_pills_F_data == '2'){
  1281  000EE0  D00B               	goto	l171
  1282  000EE2                     l169:
  1283  000EE2  0E32               	movlw	50
  1284  000EE4  1840               	xorwf	_num_pills_F_data,w,c
  1285  000EE6  A4D8               	btfss	status,2,c
  1286  000EE8  D007               	goto	l171
  1287                           
  1288                           ;main.c: 234: printf("2 F pills");
  1289  000EEA  0E90               	movlw	low STR_21
  1290  000EEC  0100               	movlb	0	; () banked
  1291  000EEE  6F80               	movwf	printf@f& (0+255),b
  1292  000EF0  0EFF               	movlw	high STR_21
  1293  000EF2  6F81               	movwf	(printf@f+1)& (0+255),b
  1294  000EF4  ECAB  F00E         	call	_printf	;wreg free
  1295  000EF8                     l171:
  1296                           
  1297                           ;main.c: 235: }
  1298                           ;main.c: 237: lcdInst(0xC0);;
  1299  000EF8  0EC0               	movlw	192
  1300  000EFA  ECF0  F00E         	call	_lcdInst
  1301                           
  1302                           ;main.c: 238: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1303  000EFE  0E33               	movlw	51
  1304  000F00  0100               	movlb	0	; () banked
  1305  000F02  6F93               	movwf	(??_main+1)& (0+255),b
  1306  000F04  0EBB               	movlw	187
  1307  000F06  6F92               	movwf	??_main& (0+255),b
  1308  000F08  0EDF               	movlw	223
  1309  000F0A                     u4837:
  1310  000F0A  2EE8               	decfsz	wreg,f,c
  1311  000F0C  D7FE               	bra	u4837
  1312  000F0E  2F92               	decfsz	??_main& (0+255),f,b
  1313  000F10  D7FC               	bra	u4837
  1314  000F12  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1315  000F14  D7FA               	bra	u4837
  1316  000F16  D000               	nop2	
  1317                           
  1318                           ;main.c: 239: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1319  000F18  0E01               	movlw	1
  1320  000F1A  ECF0  F00E         	call	_lcdInst
  1321  000F1E  0EC3               	movlw	195
  1322  000F20  0100               	movlb	0	; () banked
  1323  000F22  6F92               	movwf	??_main& (0+255),b
  1324  000F24  0ECD               	movlw	205
  1325  000F26                     u4847:
  1326  000F26  2EE8               	decfsz	wreg,f,c
  1327  000F28  D7FE               	bra	u4847
  1328  000F2A  2F92               	decfsz	??_main& (0+255),f,b
  1329  000F2C  D7FC               	bra	u4847
  1330                           
  1331                           ;main.c: 241: if(num_pills_L_data == '0'){
  1332  000F2E  0E30               	movlw	48
  1333  000F30  183F               	xorwf	_num_pills_L_data,w,c
  1334  000F32  A4D8               	btfss	status,2,c
  1335  000F34  D008               	goto	l172
  1336                           
  1337                           ;main.c: 242: printf("0 L pills");
  1338  000F36  0E9A               	movlw	low STR_22
  1339  000F38  0100               	movlb	0	; () banked
  1340  000F3A  6F80               	movwf	printf@f& (0+255),b
  1341  000F3C  0EFF               	movlw	high STR_22
  1342  000F3E  6F81               	movwf	(printf@f+1)& (0+255),b
  1343  000F40  ECAB  F00E         	call	_printf	;wreg free
  1344                           
  1345                           ;main.c: 243: } else if(num_pills_L_data == '1'){
  1346  000F44  D017               	goto	l176
  1347  000F46                     l172:
  1348  000F46  0E31               	movlw	49
  1349  000F48  183F               	xorwf	_num_pills_L_data,w,c
  1350  000F4A  A4D8               	btfss	status,2,c
  1351  000F4C  D008               	goto	l174
  1352                           
  1353                           ;main.c: 244: printf("1 L pill");
  1354  000F4E  0ECB               	movlw	low STR_23
  1355  000F50  0100               	movlb	0	; () banked
  1356  000F52  6F80               	movwf	printf@f& (0+255),b
  1357  000F54  0EFF               	movlw	high STR_23
  1358  000F56  6F81               	movwf	(printf@f+1)& (0+255),b
  1359  000F58  ECAB  F00E         	call	_printf	;wreg free
  1360                           
  1361                           ;main.c: 245: } else if(num_pills_L_data == '2'){
  1362  000F5C  D00B               	goto	l176
  1363  000F5E                     l174:
  1364  000F5E  0E32               	movlw	50
  1365  000F60  183F               	xorwf	_num_pills_L_data,w,c
  1366  000F62  A4D8               	btfss	status,2,c
  1367  000F64  D007               	goto	l176
  1368                           
  1369                           ;main.c: 246: printf("2 L pills");
  1370  000F66  0EA4               	movlw	low STR_24
  1371  000F68  0100               	movlb	0	; () banked
  1372  000F6A  6F80               	movwf	printf@f& (0+255),b
  1373  000F6C  0EFF               	movlw	high STR_24
  1374  000F6E  6F81               	movwf	(printf@f+1)& (0+255),b
  1375  000F70  ECAB  F00E         	call	_printf	;wreg free
  1376  000F74                     l176:
  1377                           
  1378                           ;main.c: 247: }
  1379                           ;main.c: 249: lcdInst(0xC0);;
  1380  000F74  0EC0               	movlw	192
  1381  000F76  ECF0  F00E         	call	_lcdInst
  1382                           
  1383                           ;main.c: 250: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1384  000F7A  0E33               	movlw	51
  1385  000F7C  0100               	movlb	0	; () banked
  1386  000F7E  6F93               	movwf	(??_main+1)& (0+255),b
  1387  000F80  0EBB               	movlw	187
  1388  000F82  6F92               	movwf	??_main& (0+255),b
  1389  000F84  0EDF               	movlw	223
  1390  000F86                     u4857:
  1391  000F86  2EE8               	decfsz	wreg,f,c
  1392  000F88  D7FE               	bra	u4857
  1393  000F8A  2F92               	decfsz	??_main& (0+255),f,b
  1394  000F8C  D7FC               	bra	u4857
  1395  000F8E  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1396  000F90  D7FA               	bra	u4857
  1397  000F92  D000               	nop2	
  1398                           
  1399                           ;main.c: 251: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1400  000F94  0E01               	movlw	1
  1401  000F96  ECF0  F00E         	call	_lcdInst
  1402  000F9A  0EC3               	movlw	195
  1403  000F9C  0100               	movlb	0	; () banked
  1404  000F9E  6F92               	movwf	??_main& (0+255),b
  1405  000FA0  0ECD               	movlw	205
  1406  000FA2                     u4867:
  1407  000FA2  2EE8               	decfsz	wreg,f,c
  1408  000FA4  D7FE               	bra	u4867
  1409  000FA6  2F92               	decfsz	??_main& (0+255),f,b
  1410  000FA8  D7FC               	bra	u4867
  1411                           
  1412                           ;main.c: 254: if(frequency_data == '1'){
  1413  000FAA  0E31               	movlw	49
  1414  000FAC  184D               	xorwf	_frequency_data,w,c
  1415  000FAE  A4D8               	btfss	status,2,c
  1416  000FB0  D008               	goto	l177
  1417                           
  1418                           ;main.c: 255: printf("Everyday");
  1419  000FB2  0EDD               	movlw	low STR_25
  1420  000FB4  0100               	movlb	0	; () banked
  1421  000FB6  6F80               	movwf	printf@f& (0+255),b
  1422  000FB8  0EFF               	movlw	high STR_25
  1423  000FBA  6F81               	movwf	(printf@f+1)& (0+255),b
  1424  000FBC  ECAB  F00E         	call	_printf	;wreg free
  1425                           
  1426                           ;main.c: 257: } else if(frequency_data == '2'){
  1427  000FC0  D017               	goto	l181
  1428  000FC2                     l177:
  1429  000FC2  0E32               	movlw	50
  1430  000FC4  184D               	xorwf	_frequency_data,w,c
  1431  000FC6  A4D8               	btfss	status,2,c
  1432  000FC8  D008               	goto	l179
  1433                           
  1434                           ;main.c: 258: printf("Alt days - Sunday");
  1435  000FCA  0E84               	movlw	low STR_26
  1436  000FCC  0100               	movlb	0	; () banked
  1437  000FCE  6F80               	movwf	printf@f& (0+255),b
  1438  000FD0  0EFE               	movlw	high STR_26
  1439  000FD2  6F81               	movwf	(printf@f+1)& (0+255),b
  1440  000FD4  ECAB  F00E         	call	_printf	;wreg free
  1441                           
  1442                           ;main.c: 260: } else if(frequency_data == '3'){
  1443  000FD8  D00B               	goto	l181
  1444  000FDA                     l179:
  1445  000FDA  0E33               	movlw	51
  1446  000FDC  184D               	xorwf	_frequency_data,w,c
  1447  000FDE  A4D8               	btfss	status,2,c
  1448  000FE0  D007               	goto	l181
  1449                           
  1450                           ;main.c: 261: printf("Alt days - Monday");
  1451  000FE2  0E72               	movlw	low STR_27
  1452  000FE4  0100               	movlb	0	; () banked
  1453  000FE6  6F80               	movwf	printf@f& (0+255),b
  1454  000FE8  0EFE               	movlw	high STR_27
  1455  000FEA  6F81               	movwf	(printf@f+1)& (0+255),b
  1456  000FEC  ECAB  F00E         	call	_printf	;wreg free
  1457  000FF0                     l181:
  1458                           
  1459                           ;main.c: 263: }
  1460                           ;main.c: 265: lcdInst(0xC0);;
  1461  000FF0  0EC0               	movlw	192
  1462  000FF2  ECF0  F00E         	call	_lcdInst
  1463                           
  1464                           ;main.c: 266: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1465  000FF6  0E33               	movlw	51
  1466  000FF8  0100               	movlb	0	; () banked
  1467  000FFA  6F93               	movwf	(??_main+1)& (0+255),b
  1468  000FFC  0EBB               	movlw	187
  1469  000FFE  6F92               	movwf	??_main& (0+255),b
  1470  001000  0EDF               	movlw	223
  1471  001002                     u4877:
  1472  001002  2EE8               	decfsz	wreg,f,c
  1473  001004  D7FE               	bra	u4877
  1474  001006  2F92               	decfsz	??_main& (0+255),f,b
  1475  001008  D7FC               	bra	u4877
  1476  00100A  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1477  00100C  D7FA               	bra	u4877
  1478  00100E  D000               	nop2	
  1479                           
  1480                           ;main.c: 267: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1481  001010  0E01               	movlw	1
  1482  001012  ECF0  F00E         	call	_lcdInst
  1483  001016  0EC3               	movlw	195
  1484  001018  0100               	movlb	0	; () banked
  1485  00101A  6F92               	movwf	??_main& (0+255),b
  1486  00101C  0ECD               	movlw	205
  1487  00101E                     u4887:
  1488  00101E  2EE8               	decfsz	wreg,f,c
  1489  001020  D7FE               	bra	u4887
  1490  001022  2F92               	decfsz	??_main& (0+255),f,b
  1491  001024  D7FC               	bra	u4887
  1492                           
  1493                           ;main.c: 269: if(repetition_data == '1'){
  1494  001026  0E31               	movlw	49
  1495  001028  184E               	xorwf	_repetition_data,w,c
  1496  00102A  A4D8               	btfss	status,2,c
  1497  00102C  D008               	goto	l182
  1498                           
  1499                           ;main.c: 270: printf("Morning");
  1500  00102E  0EE6               	movlw	low STR_28
  1501  001030  0100               	movlb	0	; () banked
  1502  001032  6F80               	movwf	printf@f& (0+255),b
  1503  001034  0EFF               	movlw	high STR_28
  1504  001036  6F81               	movwf	(printf@f+1)& (0+255),b
  1505  001038  ECAB  F00E         	call	_printf	;wreg free
  1506                           
  1507                           ;main.c: 271: } else if(repetition_data == '2'){
  1508  00103C  D023               	goto	l188
  1509  00103E                     l182:
  1510  00103E  0E32               	movlw	50
  1511  001040  184E               	xorwf	_repetition_data,w,c
  1512  001042  A4D8               	btfss	status,2,c
  1513  001044  D008               	goto	l184
  1514                           
  1515                           ;main.c: 272: printf("Afternoon");
  1516  001046  0E68               	movlw	low (STR_30+10)
  1517  001048  0100               	movlb	0	; () banked
  1518  00104A  6F80               	movwf	printf@f& (0+255),b
  1519  00104C  0EFE               	movlw	high (STR_30+10)
  1520  00104E  6F81               	movwf	(printf@f+1)& (0+255),b
  1521  001050  ECAB  F00E         	call	_printf	;wreg free
  1522                           
  1523                           ;main.c: 273: } else if(repetition_data == '3'){
  1524  001054  D017               	goto	l188
  1525  001056                     l184:
  1526  001056  0E33               	movlw	51
  1527  001058  184E               	xorwf	_repetition_data,w,c
  1528  00105A  A4D8               	btfss	status,2,c
  1529  00105C  D008               	goto	l186
  1530                           
  1531                           ;main.c: 274: printf("Morning & Afternoon");
  1532  00105E  0E5E               	movlw	low STR_30
  1533  001060  0100               	movlb	0	; () banked
  1534  001062  6F80               	movwf	printf@f& (0+255),b
  1535  001064  0EFE               	movlw	high STR_30
  1536  001066  6F81               	movwf	(printf@f+1)& (0+255),b
  1537  001068  ECAB  F00E         	call	_printf	;wreg free
  1538                           
  1539                           ;main.c: 275: } else if(repetition_data == '4'){
  1540  00106C  D00B               	goto	l188
  1541  00106E                     l186:
  1542  00106E  0E34               	movlw	52
  1543  001070  184E               	xorwf	_repetition_data,w,c
  1544  001072  A4D8               	btfss	status,2,c
  1545  001074  D007               	goto	l188
  1546                           
  1547                           ;main.c: 276: printf("Alt Morn & Aft");
  1548  001076  0E11               	movlw	low STR_31
  1549  001078  0100               	movlb	0	; () banked
  1550  00107A  6F80               	movwf	printf@f& (0+255),b
  1551  00107C  0EFF               	movlw	high STR_31
  1552  00107E  6F81               	movwf	(printf@f+1)& (0+255),b
  1553  001080  ECAB  F00E         	call	_printf	;wreg free
  1554  001084                     l188:
  1555                           
  1556                           ;main.c: 277: }
  1557                           ;main.c: 278: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1558  001084  0E01               	movlw	1
  1559  001086  ECF0  F00E         	call	_lcdInst
  1560  00108A  0EC3               	movlw	195
  1561  00108C  0100               	movlb	0	; () banked
  1562  00108E  6F92               	movwf	??_main& (0+255),b
  1563  001090  0ECD               	movlw	205
  1564  001092                     u4897:
  1565  001092  2EE8               	decfsz	wreg,f,c
  1566  001094  D7FE               	bra	u4897
  1567  001096  2F92               	decfsz	??_main& (0+255),f,b
  1568  001098  D7FC               	bra	u4897
  1569                           
  1570                           ;main.c: 279: unsigned char arr[1] = {'Z'};
  1571  00109A  C03E  F098         	movff	main@F3074,main@arr
  1572                           
  1573                           ;main.c: 280: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1574  00109E  0E33               	movlw	51
  1575  0010A0  0100               	movlb	0	; () banked
  1576  0010A2  6F93               	movwf	(??_main+1)& (0+255),b
  1577  0010A4  0EBB               	movlw	187
  1578  0010A6  6F92               	movwf	??_main& (0+255),b
  1579  0010A8  0EDF               	movlw	223
  1580  0010AA                     u4907:
  1581  0010AA  2EE8               	decfsz	wreg,f,c
  1582  0010AC  D7FE               	bra	u4907
  1583  0010AE  2F92               	decfsz	??_main& (0+255),f,b
  1584  0010B0  D7FC               	bra	u4907
  1585  0010B2  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1586  0010B4  D7FA               	bra	u4907
  1587  0010B6  D000               	nop2	
  1588                           
  1589                           ;main.c: 283: LATCbits.LATC7 = 0;
  1590  0010B8  9E8B               	bcf	3979,7,c	;volatile
  1591                           
  1592                           ;main.c: 284: int input = PORTCbits.RC7;
  1593  0010BA  AE82               	btfss	3970,7,c	;volatile
  1594  0010BC  D004               	goto	u4730
  1595  0010BE  0100               	movlb	0	; () banked
  1596  0010C0  6B92               	clrf	??_main& (0+255),b
  1597  0010C2  2B92               	incf	??_main& (0+255),f,b
  1598  0010C4  D002               	goto	u4738
  1599  0010C6                     u4730:
  1600  0010C6  0100               	movlb	0	; () banked
  1601  0010C8  6B92               	clrf	??_main& (0+255),b
  1602  0010CA                     u4738:
  1603  0010CA  5192               	movf	??_main& (0+255),w,b
  1604  0010CC  6F96               	movwf	main@input& (0+255),b
  1605  0010CE  6B97               	clrf	(main@input+1)& (0+255),b
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 285: uartTransmitBlocking(arr, 1);
  1609  0010D0  0E98               	movlw	low main@arr
  1610  0010D2  6E22               	movwf	uartTransmitBlocking@data,c
  1611  0010D4  0E00               	movlw	high main@arr
  1612  0010D6  6E23               	movwf	uartTransmitBlocking@data+1,c
  1613  0010D8  0E01               	movlw	1
  1614  0010DA  6E24               	movwf	uartTransmitBlocking@numBytes,c
  1615  0010DC  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  1616                           
  1617                           ;main.c: 286: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1618  0010E0  0E33               	movlw	51
  1619  0010E2  0100               	movlb	0	; () banked
  1620  0010E4  6F93               	movwf	(??_main+1)& (0+255),b
  1621  0010E6  0EBB               	movlw	187
  1622  0010E8  6F92               	movwf	??_main& (0+255),b
  1623  0010EA  0EDF               	movlw	223
  1624  0010EC                     u4917:
  1625  0010EC  2EE8               	decfsz	wreg,f,c
  1626  0010EE  D7FE               	bra	u4917
  1627  0010F0  2F92               	decfsz	??_main& (0+255),f,b
  1628  0010F2  D7FC               	bra	u4917
  1629  0010F4  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1630  0010F6  D7FA               	bra	u4917
  1631  0010F8  D000               	nop2	
  1632                           
  1633                           ;main.c: 287: while(input == 0){
  1634  0010FA  D020               	goto	l191
  1635  0010FC                     
  1636                           ;main.c: 289: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1637  0010FC  0E33               	movlw	51
  1638  0010FE  0100               	movlb	0	; () banked
  1639  001100  6F93               	movwf	(??_main+1)& (0+255),b
  1640  001102  0EBB               	movlw	187
  1641  001104  6F92               	movwf	??_main& (0+255),b
  1642  001106  0EDF               	movlw	223
  1643  001108                     u4927:
  1644  001108  2EE8               	decfsz	wreg,f,c
  1645  00110A  D7FE               	bra	u4927
  1646  00110C  2F92               	decfsz	??_main& (0+255),f,b
  1647  00110E  D7FC               	bra	u4927
  1648  001110  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1649  001112  D7FA               	bra	u4927
  1650  001114  D000               	nop2	
  1651                           
  1652                           ;main.c: 290: printf("waiting");
  1653  001116  0EEE               	movlw	low STR_32
  1654  001118  0100               	movlb	0	; () banked
  1655  00111A  6F80               	movwf	printf@f& (0+255),b
  1656  00111C  0EFF               	movlw	high STR_32
  1657  00111E  6F81               	movwf	(printf@f+1)& (0+255),b
  1658  001120  ECAB  F00E         	call	_printf	;wreg free
  1659                           
  1660                           ;main.c: 291: _delay((unsigned long)((2000)*(40000000/4000.0)));
  1661  001124  0E66               	movlw	102
  1662  001126  0100               	movlb	0	; () banked
  1663  001128  6F93               	movwf	(??_main+1)& (0+255),b
  1664  00112A  0E76               	movlw	118
  1665  00112C  6F92               	movwf	??_main& (0+255),b
  1666  00112E  0EC1               	movlw	193
  1667  001130                     u4937:
  1668  001130  2EE8               	decfsz	wreg,f,c
  1669  001132  D7FE               	bra	u4937
  1670  001134  2F92               	decfsz	??_main& (0+255),f,b
  1671  001136  D7FC               	bra	u4937
  1672  001138  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1673  00113A  D7FA               	bra	u4937
  1674  00113C                     l191:
  1675  00113C  0100               	movlb	0	; () banked
  1676  00113E  5196               	movf	main@input& (0+255),w,b
  1677  001140  1197               	iorwf	(main@input+1)& (0+255),w,b
  1678  001142  B4D8               	btfsc	status,2,c
  1679  001144  D7DB               	goto	l192
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main.c: 293: }
  1683                           ;main.c: 294: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1684                           
  1685                           ; BSR set to: 0
  1686  001146  0E01               	movlw	1
  1687  001148  ECF0  F00E         	call	_lcdInst
  1688  00114C  0EC3               	movlw	195
  1689  00114E  0100               	movlb	0	; () banked
  1690  001150  6F92               	movwf	??_main& (0+255),b
  1691  001152  0ECD               	movlw	205
  1692  001154                     u4947:
  1693  001154  2EE8               	decfsz	wreg,f,c
  1694  001156  D7FE               	bra	u4947
  1695  001158  2F92               	decfsz	??_main& (0+255),f,b
  1696  00115A  D7FC               	bra	u4947
  1697                           
  1698                           ;main.c: 295: printf("received!!");
  1699  00115C  0E7B               	movlw	low STR_33
  1700  00115E  0100               	movlb	0	; () banked
  1701  001160  6F80               	movwf	printf@f& (0+255),b
  1702  001162  0EFF               	movlw	high STR_33
  1703  001164  6F81               	movwf	(printf@f+1)& (0+255),b
  1704  001166  ECAB  F00E         	call	_printf	;wreg free
  1705                           
  1706                           ;main.c: 297: _delay((unsigned long)((2000)*(40000000/4000.0)));
  1707  00116A  0E66               	movlw	102
  1708  00116C  0100               	movlb	0	; () banked
  1709  00116E  6F93               	movwf	(??_main+1)& (0+255),b
  1710  001170  0E76               	movlw	118
  1711  001172  6F92               	movwf	??_main& (0+255),b
  1712  001174  0EC1               	movlw	193
  1713  001176                     u4957:
  1714  001176  2EE8               	decfsz	wreg,f,c
  1715  001178  D7FE               	bra	u4957
  1716  00117A  2F92               	decfsz	??_main& (0+255),f,b
  1717  00117C  D7FC               	bra	u4957
  1718  00117E  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1719  001180  D7FA               	bra	u4957
  1720                           
  1721                           ;main.c: 298: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  1722  001182  0E01               	movlw	1
  1723  001184  ECF0  F00E         	call	_lcdInst
  1724  001188  0EC3               	movlw	195
  1725  00118A  0100               	movlb	0	; () banked
  1726  00118C  6F92               	movwf	??_main& (0+255),b
  1727  00118E  0ECD               	movlw	205
  1728  001190                     u4967:
  1729  001190  2EE8               	decfsz	wreg,f,c
  1730  001192  D7FE               	bra	u4967
  1731  001194  2F92               	decfsz	??_main& (0+255),f,b
  1732  001196  D7FC               	bra	u4967
  1733                           
  1734                           ;main.c: 301: findMode();
  1735  001198  EC2B  F00E         	call	_findMode	;wreg free
  1736                           
  1737                           ;main.c: 302: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1738  00119C  0E33               	movlw	51
  1739  00119E  0100               	movlb	0	; () banked
  1740  0011A0  6F93               	movwf	(??_main+1)& (0+255),b
  1741  0011A2  0EBB               	movlw	187
  1742  0011A4  6F92               	movwf	??_main& (0+255),b
  1743  0011A6  0EDF               	movlw	223
  1744  0011A8                     u4977:
  1745  0011A8  2EE8               	decfsz	wreg,f,c
  1746  0011AA  D7FE               	bra	u4977
  1747  0011AC  2F92               	decfsz	??_main& (0+255),f,b
  1748  0011AE  D7FC               	bra	u4977
  1749  0011B0  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1750  0011B2  D7FA               	bra	u4977
  1751  0011B4  D000               	nop2	
  1752                           
  1753                           ;main.c: 304: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1754  0011B6  0E33               	movlw	51
  1755  0011B8  0100               	movlb	0	; () banked
  1756  0011BA  6F93               	movwf	(??_main+1)& (0+255),b
  1757  0011BC  0EBB               	movlw	187
  1758  0011BE  6F92               	movwf	??_main& (0+255),b
  1759  0011C0  0EDF               	movlw	223
  1760  0011C2                     u4987:
  1761  0011C2  2EE8               	decfsz	wreg,f,c
  1762  0011C4  D7FE               	bra	u4987
  1763  0011C6  2F92               	decfsz	??_main& (0+255),f,b
  1764  0011C8  D7FC               	bra	u4987
  1765  0011CA  2F93               	decfsz	(??_main+1)& (0+255),f,b
  1766  0011CC  D7FA               	bra	u4987
  1767  0011CE  D000               	nop2	
  1768                           
  1769                           ;main.c: 307: placeMarkers();
  1770  0011D0  ECEE  F008         	call	_placeMarkers	;wreg free
  1771                           
  1772                           ;main.c: 309: sendPillRequests();
  1773  0011D4  ECD4  F003         	call	_sendPillRequests	;wreg free
  1774                           
  1775                           ;main.c: 315: return;
  1776  0011D8  EF07  F000         	goto	start
  1777  0011DC                     __end_of_main:
  1778                           	opt stack 0
  1779                           tblptru	equ	0xFF8
  1780                           tblptrh	equ	0xFF7
  1781                           tblptrl	equ	0xFF6
  1782                           tablat	equ	0xFF5
  1783                           intcon	equ	0xFF2
  1784                           intcon3	equ	0xFF0
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           postdec1	equ	0xFE5
  1788                           fsr1l	equ	0xFE1
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _user_interface *****************
  1792 ;; Defined at:
  1793 ;;		line 82 in file "main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  2    5[BANK0 ] int 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    8
  1814 ;; This function calls:
  1815 ;;		_initLCD
  1816 ;;		_lcdInst
  1817 ;;		_printf
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text1
  1824  001504                     __ptext1:
  1825                           	opt stack 0
  1826  001504                     _user_interface:
  1827                           	opt stack 22
  1828                           
  1829                           ;main.c: 86: initLCD();
  1830                           
  1831                           ;incstack = 0
  1832  001504  EC62  F00E         	call	_initLCD	;wreg free
  1833                           
  1834                           ;main.c: 97: x = 0;
  1835  001508  0E00               	movlw	0
  1836  00150A  6E51               	movwf	_x,c
  1837  00150C                     
  1838                           ;main.c: 100: printf("Prescription: ");
  1839  00150C  0EB7               	movlw	low STR_1
  1840  00150E  0100               	movlb	0	; () banked
  1841  001510  6F80               	movwf	printf@f& (0+255),b
  1842  001512  0EFE               	movlw	high STR_1
  1843  001514  6F81               	movwf	(printf@f+1)& (0+255),b
  1844  001516  ECAB  F00E         	call	_printf	;wreg free
  1845                           
  1846                           ;main.c: 101: lcdInst(0xC0);;
  1847  00151A  0EC0               	movlw	192
  1848  00151C  ECF0  F00E         	call	_lcdInst
  1849                           
  1850                           ;main.c: 103: while(x == 0){
  1851  001520  D00D               	goto	l128
  1852  001522                     
  1853                           ;main.c: 104: _delay((unsigned long)((100)*(40000000/4000.0)));
  1854  001522  0E06               	movlw	6
  1855  001524  0100               	movlb	0	; () banked
  1856  001526  6F88               	movwf	(??_user_interface+1)& (0+255),b
  1857  001528  0E13               	movlw	19
  1858  00152A  6F87               	movwf	??_user_interface& (0+255),b
  1859  00152C  0EAD               	movlw	173
  1860  00152E                     u4997:
  1861  00152E  2EE8               	decfsz	wreg,f,c
  1862  001530  D7FE               	bra	u4997
  1863  001532  2F87               	decfsz	??_user_interface& (0+255),f,b
  1864  001534  D7FC               	bra	u4997
  1865  001536  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  1866  001538  D7FA               	bra	u4997
  1867  00153A  D000               	nop2	
  1868  00153C                     l128:
  1869  00153C  5051               	movf	_x,w,c
  1870  00153E  B4D8               	btfsc	status,2,c
  1871  001540  D7F0               	goto	l129
  1872                           
  1873                           ;main.c: 105: }
  1874                           ;main.c: 106: if(reset == 1){
  1875  001542  0450               	decf	_reset,w,c
  1876  001544  B4D8               	btfsc	status,2,c
  1877  001546  D10A               	goto	u4020
  1878                           
  1879                           ;main.c: 109: }
  1880                           ;main.c: 111: printf("# of R Pills: ");
  1881                           
  1882                           ;main.c: 108: continue;
  1883                           
  1884                           ;main.c: 107: reset = 0;
  1885  001548  0ED5               	movlw	low STR_8
  1886  00154A  0100               	movlb	0	; () banked
  1887  00154C  6F80               	movwf	printf@f& (0+255),b
  1888  00154E  0EFE               	movlw	high STR_8
  1889  001550  6F81               	movwf	(printf@f+1)& (0+255),b
  1890  001552  ECAB  F00E         	call	_printf	;wreg free
  1891                           
  1892                           ;main.c: 112: lcdInst(0xC0);;
  1893  001556  0EC0               	movlw	192
  1894  001558  ECF0  F00E         	call	_lcdInst
  1895                           
  1896                           ;main.c: 114: while(x == 1){
  1897  00155C  D00D               	goto	l133
  1898  00155E                     
  1899                           ;main.c: 115: _delay((unsigned long)((100)*(40000000/4000.0)));
  1900  00155E  0E06               	movlw	6
  1901  001560  0100               	movlb	0	; () banked
  1902  001562  6F88               	movwf	(??_user_interface+1)& (0+255),b
  1903  001564  0E13               	movlw	19
  1904  001566  6F87               	movwf	??_user_interface& (0+255),b
  1905  001568  0EAD               	movlw	173
  1906  00156A                     u5007:
  1907  00156A  2EE8               	decfsz	wreg,f,c
  1908  00156C  D7FE               	bra	u5007
  1909  00156E  2F87               	decfsz	??_user_interface& (0+255),f,b
  1910  001570  D7FC               	bra	u5007
  1911  001572  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  1912  001574  D7FA               	bra	u5007
  1913  001576  D000               	nop2	
  1914  001578                     l133:
  1915  001578  0451               	decf	_x,w,c
  1916  00157A  B4D8               	btfsc	status,2,c
  1917  00157C  D7F0               	goto	l134
  1918                           
  1919                           ;main.c: 116: }
  1920                           ;main.c: 117: if(reset == 1){
  1921  00157E  0450               	decf	_reset,w,c
  1922  001580  B4D8               	btfsc	status,2,c
  1923  001582  D0EC               	goto	u4020
  1924                           
  1925                           ;main.c: 120: }
  1926                           ;main.c: 122: printf("# of F Pills: ");
  1927                           
  1928                           ;main.c: 119: continue;
  1929                           
  1930                           ;main.c: 118: reset = 0;
  1931  001584  0EC6               	movlw	low STR_9
  1932  001586  0100               	movlb	0	; () banked
  1933  001588  6F80               	movwf	printf@f& (0+255),b
  1934  00158A  0EFE               	movlw	high STR_9
  1935  00158C  6F81               	movwf	(printf@f+1)& (0+255),b
  1936  00158E  ECAB  F00E         	call	_printf	;wreg free
  1937                           
  1938                           ;main.c: 123: lcdInst(0xC0);;
  1939  001592  0EC0               	movlw	192
  1940  001594  ECF0  F00E         	call	_lcdInst
  1941                           
  1942                           ;main.c: 125: while(x == 2){
  1943  001598  D00D               	goto	l137
  1944  00159A                     
  1945                           ;main.c: 126: _delay((unsigned long)((100)*(40000000/4000.0)));
  1946  00159A  0E06               	movlw	6
  1947  00159C  0100               	movlb	0	; () banked
  1948  00159E  6F88               	movwf	(??_user_interface+1)& (0+255),b
  1949  0015A0  0E13               	movlw	19
  1950  0015A2  6F87               	movwf	??_user_interface& (0+255),b
  1951  0015A4  0EAD               	movlw	173
  1952  0015A6                     u5017:
  1953  0015A6  2EE8               	decfsz	wreg,f,c
  1954  0015A8  D7FE               	bra	u5017
  1955  0015AA  2F87               	decfsz	??_user_interface& (0+255),f,b
  1956  0015AC  D7FC               	bra	u5017
  1957  0015AE  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  1958  0015B0  D7FA               	bra	u5017
  1959  0015B2  D000               	nop2	
  1960  0015B4                     l137:
  1961  0015B4  0E02               	movlw	2
  1962  0015B6  1851               	xorwf	_x,w,c
  1963  0015B8  B4D8               	btfsc	status,2,c
  1964  0015BA  D7EF               	goto	l138
  1965                           
  1966                           ;main.c: 127: }
  1967                           ;main.c: 128: if(reset == 1){
  1968  0015BC  0450               	decf	_reset,w,c
  1969  0015BE  B4D8               	btfsc	status,2,c
  1970  0015C0  D0CD               	goto	u4020
  1971                           
  1972                           ;main.c: 131: }
  1973                           ;main.c: 133: printf("# of L pills: ");
  1974                           
  1975                           ;main.c: 130: continue;
  1976                           
  1977                           ;main.c: 129: reset = 0;
  1978  0015C2  0EF3               	movlw	low STR_4
  1979  0015C4  0100               	movlb	0	; () banked
  1980  0015C6  6F80               	movwf	printf@f& (0+255),b
  1981  0015C8  0EFE               	movlw	high STR_4
  1982  0015CA  6F81               	movwf	(printf@f+1)& (0+255),b
  1983  0015CC  ECAB  F00E         	call	_printf	;wreg free
  1984                           
  1985                           ;main.c: 134: lcdInst(0xC0);;
  1986  0015D0  0EC0               	movlw	192
  1987  0015D2  ECF0  F00E         	call	_lcdInst
  1988                           
  1989                           ;main.c: 136: while(x == 3){
  1990  0015D6  D00D               	goto	l141
  1991  0015D8                     
  1992                           ;main.c: 137: _delay((unsigned long)((100)*(40000000/4000.0)));
  1993  0015D8  0E06               	movlw	6
  1994  0015DA  0100               	movlb	0	; () banked
  1995  0015DC  6F88               	movwf	(??_user_interface+1)& (0+255),b
  1996  0015DE  0E13               	movlw	19
  1997  0015E0  6F87               	movwf	??_user_interface& (0+255),b
  1998  0015E2  0EAD               	movlw	173
  1999  0015E4                     u5027:
  2000  0015E4  2EE8               	decfsz	wreg,f,c
  2001  0015E6  D7FE               	bra	u5027
  2002  0015E8  2F87               	decfsz	??_user_interface& (0+255),f,b
  2003  0015EA  D7FC               	bra	u5027
  2004  0015EC  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2005  0015EE  D7FA               	bra	u5027
  2006  0015F0  D000               	nop2	
  2007  0015F2                     l141:
  2008  0015F2  0E03               	movlw	3
  2009  0015F4  1851               	xorwf	_x,w,c
  2010  0015F6  B4D8               	btfsc	status,2,c
  2011  0015F8  D7EF               	goto	l142
  2012                           
  2013                           ;main.c: 138: }
  2014                           ;main.c: 139: if(num_pills_L_data == '1'){
  2015  0015FA  0E31               	movlw	49
  2016  0015FC  183F               	xorwf	_num_pills_L_data,w,c
  2017  0015FE  A4D8               	btfss	status,2,c
  2018  001600  D021               	goto	l144
  2019                           
  2020                           ;main.c: 140: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2021  001602  0E33               	movlw	51
  2022  001604  0100               	movlb	0	; () banked
  2023  001606  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2024  001608  0EBB               	movlw	187
  2025  00160A  6F87               	movwf	??_user_interface& (0+255),b
  2026  00160C  0EDF               	movlw	223
  2027  00160E                     u5037:
  2028  00160E  2EE8               	decfsz	wreg,f,c
  2029  001610  D7FE               	bra	u5037
  2030  001612  2F87               	decfsz	??_user_interface& (0+255),f,b
  2031  001614  D7FC               	bra	u5037
  2032  001616  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2033  001618  D7FA               	bra	u5037
  2034  00161A  D000               	nop2	
  2035                           
  2036                           ;main.c: 141: printf("L3");
  2037  00161C  0EF9               	movlw	low STR_11
  2038  00161E  0100               	movlb	0	; () banked
  2039  001620  6F80               	movwf	printf@f& (0+255),b
  2040  001622  0EFF               	movlw	high STR_11
  2041  001624  6F81               	movwf	(printf@f+1)& (0+255),b
  2042  001626  ECAB  F00E         	call	_printf	;wreg free
  2043                           
  2044                           ;main.c: 142: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2045  00162A  0E33               	movlw	51
  2046  00162C  0100               	movlb	0	; () banked
  2047  00162E  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2048  001630  0EBB               	movlw	187
  2049  001632  6F87               	movwf	??_user_interface& (0+255),b
  2050  001634  0EDF               	movlw	223
  2051  001636                     u5047:
  2052  001636  2EE8               	decfsz	wreg,f,c
  2053  001638  D7FE               	bra	u5047
  2054  00163A  2F87               	decfsz	??_user_interface& (0+255),f,b
  2055  00163C  D7FC               	bra	u5047
  2056  00163E  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2057  001640  D7FA               	bra	u5047
  2058  001642  D000               	nop2	
  2059  001644                     l144:
  2060                           
  2061                           ;main.c: 143: }
  2062                           ;main.c: 144: if(reset == 1){
  2063  001644  0450               	decf	_reset,w,c
  2064  001646  A4D8               	btfss	status,2,c
  2065  001648  D026               	goto	l145
  2066                           
  2067                           ;main.c: 145: if(num_pills_L_data == '1'){
  2068  00164A  0E31               	movlw	49
  2069  00164C  183F               	xorwf	_num_pills_L_data,w,c
  2070  00164E  A4D8               	btfss	status,2,c
  2071  001650  D085               	goto	u4020
  2072                           
  2073                           ;main.c: 146: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2074  001652  0E33               	movlw	51
  2075  001654  0100               	movlb	0	; () banked
  2076  001656  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2077  001658  0EBB               	movlw	187
  2078  00165A  6F87               	movwf	??_user_interface& (0+255),b
  2079  00165C  0EDF               	movlw	223
  2080  00165E                     u5057:
  2081  00165E  2EE8               	decfsz	wreg,f,c
  2082  001660  D7FE               	bra	u5057
  2083  001662  2F87               	decfsz	??_user_interface& (0+255),f,b
  2084  001664  D7FC               	bra	u5057
  2085  001666  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2086  001668  D7FA               	bra	u5057
  2087  00166A  D000               	nop2	
  2088                           
  2089                           ;main.c: 147: printf("L2");
  2090  00166C  0EF6               	movlw	low STR_12
  2091  00166E  0100               	movlb	0	; () banked
  2092  001670  6F80               	movwf	printf@f& (0+255),b
  2093  001672  0EFF               	movlw	high STR_12
  2094  001674  6F81               	movwf	(printf@f+1)& (0+255),b
  2095  001676  ECAB  F00E         	call	_printf	;wreg free
  2096                           
  2097                           ;main.c: 148: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2098  00167A  0E33               	movlw	51
  2099  00167C  0100               	movlb	0	; () banked
  2100  00167E  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2101  001680  0EBB               	movlw	187
  2102  001682  6F87               	movwf	??_user_interface& (0+255),b
  2103  001684  0EDF               	movlw	223
  2104  001686                     u5067:
  2105  001686  2EE8               	decfsz	wreg,f,c
  2106  001688  D7FE               	bra	u5067
  2107  00168A  2F87               	decfsz	??_user_interface& (0+255),f,b
  2108  00168C  D7FC               	bra	u5067
  2109  00168E  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2110  001690  D7FA               	bra	u5067
  2111  001692  D000               	nop2	
  2112  001694  D063               	goto	u4020
  2113  001696                     l145:
  2114                           
  2115                           ;main.c: 152: }
  2116                           ;main.c: 153: if(num_pills_L_data == '1'){
  2117  001696  0E31               	movlw	49
  2118  001698  183F               	xorwf	_num_pills_L_data,w,c
  2119  00169A  A4D8               	btfss	status,2,c
  2120  00169C  D021               	goto	l147
  2121                           
  2122                           ;main.c: 154: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2123  00169E  0E33               	movlw	51
  2124  0016A0  0100               	movlb	0	; () banked
  2125  0016A2  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2126  0016A4  0EBB               	movlw	187
  2127  0016A6  6F87               	movwf	??_user_interface& (0+255),b
  2128  0016A8  0EDF               	movlw	223
  2129  0016AA                     u5077:
  2130  0016AA  2EE8               	decfsz	wreg,f,c
  2131  0016AC  D7FE               	bra	u5077
  2132  0016AE  2F87               	decfsz	??_user_interface& (0+255),f,b
  2133  0016B0  D7FC               	bra	u5077
  2134  0016B2  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2135  0016B4  D7FA               	bra	u5077
  2136  0016B6  D000               	nop2	
  2137                           
  2138                           ;main.c: 155: printf("L");
  2139  0016B8  0EFC               	movlw	low STR_13
  2140  0016BA  0100               	movlb	0	; () banked
  2141  0016BC  6F80               	movwf	printf@f& (0+255),b
  2142  0016BE  0EFF               	movlw	high STR_13
  2143  0016C0  6F81               	movwf	(printf@f+1)& (0+255),b
  2144  0016C2  ECAB  F00E         	call	_printf	;wreg free
  2145                           
  2146                           ;main.c: 156: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2147  0016C6  0E33               	movlw	51
  2148  0016C8  0100               	movlb	0	; () banked
  2149  0016CA  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2150  0016CC  0EBB               	movlw	187
  2151  0016CE  6F87               	movwf	??_user_interface& (0+255),b
  2152  0016D0  0EDF               	movlw	223
  2153  0016D2                     u5087:
  2154  0016D2  2EE8               	decfsz	wreg,f,c
  2155  0016D4  D7FE               	bra	u5087
  2156  0016D6  2F87               	decfsz	??_user_interface& (0+255),f,b
  2157  0016D8  D7FC               	bra	u5087
  2158  0016DA  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2159  0016DC  D7FA               	bra	u5087
  2160  0016DE  D000               	nop2	
  2161  0016E0                     l147:
  2162                           
  2163                           ;main.c: 157: }
  2164                           ;main.c: 158: printf("Repetition/Day: ");
  2165  0016E0  0E96               	movlw	low STR_5
  2166  0016E2  0100               	movlb	0	; () banked
  2167  0016E4  6F80               	movwf	printf@f& (0+255),b
  2168  0016E6  0EFE               	movlw	high STR_5
  2169  0016E8  6F81               	movwf	(printf@f+1)& (0+255),b
  2170  0016EA  ECAB  F00E         	call	_printf	;wreg free
  2171                           
  2172                           ;main.c: 159: lcdInst(0xC0);;
  2173  0016EE  0EC0               	movlw	192
  2174  0016F0  ECF0  F00E         	call	_lcdInst
  2175                           
  2176                           ;main.c: 161: while(x == 4){
  2177  0016F4  D00D               	goto	l148
  2178  0016F6                     
  2179                           ;main.c: 162: _delay((unsigned long)((100)*(40000000/4000.0)));
  2180  0016F6  0E06               	movlw	6
  2181  0016F8  0100               	movlb	0	; () banked
  2182  0016FA  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2183  0016FC  0E13               	movlw	19
  2184  0016FE  6F87               	movwf	??_user_interface& (0+255),b
  2185  001700  0EAD               	movlw	173
  2186  001702                     u5097:
  2187  001702  2EE8               	decfsz	wreg,f,c
  2188  001704  D7FE               	bra	u5097
  2189  001706  2F87               	decfsz	??_user_interface& (0+255),f,b
  2190  001708  D7FC               	bra	u5097
  2191  00170A  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2192  00170C  D7FA               	bra	u5097
  2193  00170E  D000               	nop2	
  2194  001710                     l148:
  2195  001710  0E04               	movlw	4
  2196  001712  1851               	xorwf	_x,w,c
  2197  001714  B4D8               	btfsc	status,2,c
  2198  001716  D7EF               	goto	l149
  2199                           
  2200                           ;main.c: 163: }
  2201                           ;main.c: 164: if(reset == 1){
  2202  001718  0450               	decf	_reset,w,c
  2203  00171A  B4D8               	btfsc	status,2,c
  2204  00171C  D01F               	goto	u4020
  2205                           
  2206                           ;main.c: 167: }
  2207                           ;main.c: 169: printf("Day Frequency: ");
  2208                           
  2209                           ;main.c: 166: continue;
  2210                           
  2211                           ;main.c: 165: reset = 0;
  2212  00171E  0EA7               	movlw	low STR_6
  2213  001720  0100               	movlb	0	; () banked
  2214  001722  6F80               	movwf	printf@f& (0+255),b
  2215  001724  0EFE               	movlw	high STR_6
  2216  001726  6F81               	movwf	(printf@f+1)& (0+255),b
  2217  001728  ECAB  F00E         	call	_printf	;wreg free
  2218                           
  2219                           ;main.c: 170: lcdInst(0xC0);;
  2220  00172C  0EC0               	movlw	192
  2221  00172E  ECF0  F00E         	call	_lcdInst
  2222                           
  2223                           ;main.c: 171: while(x == 5){
  2224  001732  D00D               	goto	l152
  2225  001734                     
  2226                           ;main.c: 172: _delay((unsigned long)((100)*(40000000/4000.0)));
  2227  001734  0E06               	movlw	6
  2228  001736  0100               	movlb	0	; () banked
  2229  001738  6F88               	movwf	(??_user_interface+1)& (0+255),b
  2230  00173A  0E13               	movlw	19
  2231  00173C  6F87               	movwf	??_user_interface& (0+255),b
  2232  00173E  0EAD               	movlw	173
  2233  001740                     u5107:
  2234  001740  2EE8               	decfsz	wreg,f,c
  2235  001742  D7FE               	bra	u5107
  2236  001744  2F87               	decfsz	??_user_interface& (0+255),f,b
  2237  001746  D7FC               	bra	u5107
  2238  001748  2F88               	decfsz	(??_user_interface+1)& (0+255),f,b
  2239  00174A  D7FA               	bra	u5107
  2240  00174C  D000               	nop2	
  2241  00174E                     l152:
  2242  00174E  0E05               	movlw	5
  2243  001750  1851               	xorwf	_x,w,c
  2244  001752  B4D8               	btfsc	status,2,c
  2245  001754  D7EF               	goto	l153
  2246                           
  2247                           ;main.c: 173: }
  2248                           ;main.c: 174: if(reset == 1){
  2249  001756  0450               	decf	_reset,w,c
  2250  001758  A4D8               	btfss	status,2,c
  2251  00175A  D003               	goto	l156
  2252  00175C                     u4020:
  2253                           
  2254                           ;main.c: 175: reset = 0;
  2255  00175C  0E00               	movlw	0
  2256  00175E  6E50               	movwf	_reset,c
  2257                           
  2258                           ;main.c: 176: continue;
  2259  001760  D6D5               	goto	l127
  2260  001762                     l156:
  2261                           
  2262                           ;main.c: 179: }
  2263                           ;main.c: 180: return 0;
  2264  001762  0E00               	movlw	0
  2265  001764  0100               	movlb	0	; () banked
  2266  001766  6F86               	movwf	(?_user_interface+1)& (0+255),b
  2267  001768  0E00               	movlw	0
  2268  00176A  6F85               	movwf	?_user_interface& (0+255),b
  2269  00176C  0012               	return	
  2270  00176E                     __end_of_user_interface:
  2271                           	opt stack 0
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           intcon	equ	0xFF2
  2277                           intcon3	equ	0xFF0
  2278                           postinc0	equ	0xFEE
  2279                           wreg	equ	0xFE8
  2280                           postdec1	equ	0xFE5
  2281                           fsr1l	equ	0xFE1
  2282                           status	equ	0xFD8
  2283                           
  2284 ;; *************** function _initLCD *****************
  2285 ;; Defined at:
  2286 ;;		line 63 in file "lcd.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;Total ram usage:        1 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    7
  2307 ;; This function calls:
  2308 ;;		_lcdInst
  2309 ;; This function is called by:
  2310 ;;		_user_interface
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text2
  2315  001CC4                     __ptext2:
  2316                           	opt stack 0
  2317  001CC4                     _initLCD:
  2318                           	opt stack 22
  2319                           
  2320                           ;lcd.c: 71: _delay((unsigned long)((15)*(40000000/4000.0)));
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;incstack = 0
  2324  001CC4  0EC3               	movlw	195
  2325  001CC6  6E25               	movwf	??_initLCD& (0+255),c
  2326  001CC8  0ECD               	movlw	205
  2327  001CCA                     u5117:
  2328  001CCA  2EE8               	decfsz	wreg,f,c
  2329  001CCC  D7FE               	bra	u5117
  2330  001CCE  2E25               	decfsz	??_initLCD& (0+255),f,c
  2331  001CD0  D7FC               	bra	u5117
  2332  001CD2  F000               	nop	
  2333                           
  2334                           ;lcd.c: 72: lcdInst(0b00110011);
  2335  001CD4  0E33               	movlw	51
  2336  001CD6  ECF0  F00E         	call	_lcdInst
  2337                           
  2338                           ;lcd.c: 73: lcdInst(0b00110010);
  2339  001CDA  0E32               	movlw	50
  2340  001CDC  ECF0  F00E         	call	_lcdInst
  2341                           
  2342                           ;lcd.c: 74: lcdInst(0b00101000);
  2343  001CE0  0E28               	movlw	40
  2344  001CE2  ECF0  F00E         	call	_lcdInst
  2345                           
  2346                           ;lcd.c: 75: lcdInst(0b00001111);
  2347  001CE6  0E0F               	movlw	15
  2348  001CE8  ECF0  F00E         	call	_lcdInst
  2349                           
  2350                           ;lcd.c: 76: lcdInst(0b00000110);
  2351  001CEC  0E06               	movlw	6
  2352  001CEE  ECF0  F00E         	call	_lcdInst
  2353                           
  2354                           ;lcd.c: 77: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2355  001CF2  0E01               	movlw	1
  2356  001CF4  ECF0  F00E         	call	_lcdInst
  2357  001CF8  0EC3               	movlw	195
  2358  001CFA  6E25               	movwf	??_initLCD& (0+255),c
  2359  001CFC  0ECD               	movlw	205
  2360  001CFE                     u5127:
  2361  001CFE  2EE8               	decfsz	wreg,f,c
  2362  001D00  D7FE               	bra	u5127
  2363  001D02  2E25               	decfsz	??_initLCD& (0+255),f,c
  2364  001D04  D7FC               	bra	u5127
  2365  001D06  F000               	nop	
  2366                           
  2367                           ;lcd.c: 80: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  2368  001D08  0E0F               	movlw	15
  2369  001D0A  ECF0  F00E         	call	_lcdInst
  2370  001D0E  0012               	return		;funcret
  2371  001D10                     __end_of_initLCD:
  2372                           	opt stack 0
  2373                           tblptru	equ	0xFF8
  2374                           tblptrh	equ	0xFF7
  2375                           tblptrl	equ	0xFF6
  2376                           tablat	equ	0xFF5
  2377                           intcon	equ	0xFF2
  2378                           intcon3	equ	0xFF0
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           postdec1	equ	0xFE5
  2382                           fsr1l	equ	0xFE1
  2383                           status	equ	0xFD8
  2384                           
  2385 ;; *************** function _sendPillRequests *****************
  2386 ;; Defined at:
  2387 ;;		line 295 in file "operation.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  i               2    7[BANK0 ] int 
  2392 ;;  input           2    9[BANK0 ] int 
  2393 ;;  arr             1   11[BANK0 ] unsigned char [1]
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;Total ram usage:        7 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    8
  2410 ;; This function calls:
  2411 ;;		_lcdInst
  2412 ;;		_printf
  2413 ;;		_uartTransmitBlocking
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text3
  2420  0007A8                     __ptext3:
  2421                           	opt stack 0
  2422  0007A8                     _sendPillRequests:
  2423                           	opt stack 22
  2424                           
  2425                           ;operation.c: 296: unsigned char arr[1] = {'x'};
  2426                           
  2427                           ;incstack = 0
  2428  0007A8  C03C  F08B         	movff	sendPillRequests@F3053,sendPillRequests@arr
  2429                           
  2430                           ;operation.c: 297: LATCbits.LATC7 = 0;
  2431  0007AC  9E8B               	bcf	3979,7,c	;volatile
  2432                           
  2433                           ;operation.c: 298: int input = PORTCbits.RC7;
  2434  0007AE  AE82               	btfss	3970,7,c	;volatile
  2435  0007B0  D004               	goto	u4390
  2436  0007B2  0100               	movlb	0	; () banked
  2437  0007B4  6B85               	clrf	??_sendPillRequests& (0+255),b
  2438  0007B6  2B85               	incf	??_sendPillRequests& (0+255),f,b
  2439  0007B8  D002               	goto	u4398
  2440  0007BA                     u4390:
  2441  0007BA  0100               	movlb	0	; () banked
  2442  0007BC  6B85               	clrf	??_sendPillRequests& (0+255),b
  2443  0007BE                     u4398:
  2444  0007BE  5185               	movf	??_sendPillRequests& (0+255),w,b
  2445  0007C0  6F89               	movwf	sendPillRequests@input& (0+255),b
  2446  0007C2  6B8A               	clrf	(sendPillRequests@input+1)& (0+255),b
  2447                           
  2448                           ;operation.c: 299: for(int i=0; i < sizeof(pillBox); i++){
  2449  0007C4  0E00               	movlw	0
  2450  0007C6  6F88               	movwf	(sendPillRequests@i+1)& (0+255),b
  2451  0007C8  0E00               	movlw	0
  2452  0007CA  6F87               	movwf	sendPillRequests@i& (0+255),b
  2453                           
  2454                           ; BSR set to: 0
  2455  0007CC  5188               	movf	(sendPillRequests@i+1)& (0+255),w,b
  2456  0007CE  E105               	bnz	u4400
  2457  0007D0  0E0E               	movlw	14
  2458  0007D2  5D87               	subwf	sendPillRequests@i& (0+255),w,b
  2459  0007D4  B0D8               	btfsc	status,0,c
  2460  0007D6  D2E2               	goto	u4560
  2461  0007D8  D001               	goto	l495
  2462  0007DA                     u4400:
  2463                           
  2464                           ; BSR set to: 0
  2465  0007DA  D2E0               	goto	u4560
  2466  0007DC                     l495:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;operation.c: 300: if(pillBox[i] == 'y'){
  2470                           
  2471                           ; BSR set to: 0
  2472  0007DC  0E26               	movlw	low _pillBox
  2473  0007DE  2587               	addwf	sendPillRequests@i& (0+255),w,b
  2474  0007E0  6ED9               	movwf	fsr2l,c
  2475  0007E2  0E00               	movlw	high _pillBox
  2476  0007E4  2188               	addwfc	(sendPillRequests@i+1)& (0+255),w,b
  2477  0007E6  6EDA               	movwf	fsr2h,c
  2478  0007E8  0E79               	movlw	121
  2479  0007EA  18DE               	xorwf	postinc2,w,c
  2480  0007EC  A4D8               	btfss	status,2,c
  2481  0007EE  D2D0               	goto	l535
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;operation.c: 303: if(num_pills_R_data == '1'){
  2485  0007F0  0E31               	movlw	49
  2486  0007F2  1841               	xorwf	_num_pills_R_data,w,c
  2487  0007F4  A4D8               	btfss	status,2,c
  2488  0007F6  D062               	goto	l498
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;operation.c: 304: arr[0] = ('B');
  2492  0007F8  0E42               	movlw	66
  2493  0007FA  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;operation.c: 305: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2497  0007FC  0E33               	movlw	51
  2498  0007FE  0100               	movlb	0	; () banked
  2499  000800  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2500  000802  0EBB               	movlw	187
  2501  000804  6F85               	movwf	??_sendPillRequests& (0+255),b
  2502  000806  0EDF               	movlw	223
  2503  000808                     u5137:
  2504  000808  2EE8               	decfsz	wreg,f,c
  2505  00080A  D7FE               	bra	u5137
  2506  00080C  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2507  00080E  D7FC               	bra	u5137
  2508  000810  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2509  000812  D7FA               	bra	u5137
  2510  000814  D000               	nop2	
  2511                           
  2512                           ;operation.c: 306: uartTransmitBlocking(arr, 1);
  2513  000816  0E8B               	movlw	low sendPillRequests@arr
  2514  000818  6E22               	movwf	uartTransmitBlocking@data,c
  2515  00081A  0E00               	movlw	high sendPillRequests@arr
  2516  00081C  6E23               	movwf	uartTransmitBlocking@data+1,c
  2517  00081E  0E01               	movlw	1
  2518  000820  6E24               	movwf	uartTransmitBlocking@numBytes,c
  2519  000822  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  2520                           
  2521                           ;operation.c: 307: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2522  000826  0E33               	movlw	51
  2523  000828  0100               	movlb	0	; () banked
  2524  00082A  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2525  00082C  0EBB               	movlw	187
  2526  00082E  6F85               	movwf	??_sendPillRequests& (0+255),b
  2527  000830  0EDF               	movlw	223
  2528  000832                     u5147:
  2529  000832  2EE8               	decfsz	wreg,f,c
  2530  000834  D7FE               	bra	u5147
  2531  000836  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2532  000838  D7FC               	bra	u5147
  2533  00083A  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2534  00083C  D7FA               	bra	u5147
  2535  00083E  D000               	nop2	
  2536  000840                     
  2537                           ;operation.c: 309: _delay((unsigned long)((100)*(40000000/4000.0)));
  2538  000840  0E06               	movlw	6
  2539  000842  0100               	movlb	0	; () banked
  2540  000844  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2541  000846  0E13               	movlw	19
  2542  000848  6F85               	movwf	??_sendPillRequests& (0+255),b
  2543  00084A  0EAD               	movlw	173
  2544  00084C                     u5157:
  2545  00084C  2EE8               	decfsz	wreg,f,c
  2546  00084E  D7FE               	bra	u5157
  2547  000850  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2548  000852  D7FC               	bra	u5157
  2549  000854  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2550  000856  D7FA               	bra	u5157
  2551  000858  D000               	nop2	
  2552                           
  2553                           ;operation.c: 310: if(input == 1){
  2554  00085A  0100               	movlb	0	; () banked
  2555  00085C  0589               	decf	sendPillRequests@input& (0+255),w,b
  2556  00085E  118A               	iorwf	(sendPillRequests@input+1)& (0+255),w,b
  2557  000860  A4D8               	btfss	status,2,c
  2558  000862  D7EE               	goto	l499
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;operation.c: 311: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2562  000864  0E01               	movlw	1
  2563  000866  ECF0  F00E         	call	_lcdInst
  2564  00086A  0EC3               	movlw	195
  2565  00086C  0100               	movlb	0	; () banked
  2566  00086E  6F85               	movwf	??_sendPillRequests& (0+255),b
  2567  000870  0ECD               	movlw	205
  2568  000872                     u5167:
  2569  000872  2EE8               	decfsz	wreg,f,c
  2570  000874  D7FE               	bra	u5167
  2571  000876  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2572  000878  D7FC               	bra	u5167
  2573                           
  2574                           ;operation.c: 312: _delay((unsigned long)((100)*(40000000/4000.0)));
  2575  00087A  0E06               	movlw	6
  2576  00087C  0100               	movlb	0	; () banked
  2577  00087E  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2578  000880  0E13               	movlw	19
  2579  000882  6F85               	movwf	??_sendPillRequests& (0+255),b
  2580  000884  0EAD               	movlw	173
  2581  000886                     u5177:
  2582  000886  2EE8               	decfsz	wreg,f,c
  2583  000888  D7FE               	bra	u5177
  2584  00088A  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2585  00088C  D7FC               	bra	u5177
  2586  00088E  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2587  000890  D7FA               	bra	u5177
  2588  000892  D000               	nop2	
  2589                           
  2590                           ;operation.c: 314: printf("received 2");
  2591  000894  0E2E               	movlw	low STR_42
  2592  000896  0100               	movlb	0	; () banked
  2593  000898  6F80               	movwf	printf@f& (0+255),b
  2594  00089A  0EFF               	movlw	high STR_42
  2595  00089C  6F81               	movwf	(printf@f+1)& (0+255),b
  2596  00089E  ECAB  F00E         	call	_printf	;wreg free
  2597                           
  2598                           ;operation.c: 315: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2599  0008A2  0E33               	movlw	51
  2600  0008A4  0100               	movlb	0	; () banked
  2601  0008A6  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2602  0008A8  0EBB               	movlw	187
  2603  0008AA  6F85               	movwf	??_sendPillRequests& (0+255),b
  2604  0008AC  0EDF               	movlw	223
  2605  0008AE                     u5187:
  2606  0008AE  2EE8               	decfsz	wreg,f,c
  2607  0008B0  D7FE               	bra	u5187
  2608  0008B2  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2609  0008B4  D7FC               	bra	u5187
  2610  0008B6  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2611  0008B8  D7FA               	bra	u5187
  2612  0008BA  D066               	goto	L1
  2613  0008BC                     l498:
  2614  0008BC  0E32               	movlw	50
  2615  0008BE  1841               	xorwf	_num_pills_R_data,w,c
  2616  0008C0  A4D8               	btfss	status,2,c
  2617  0008C2  D063               	goto	l507
  2618                           
  2619                           ;operation.c: 320: arr[0] = ('C');
  2620  0008C4  0E43               	movlw	67
  2621  0008C6  0100               	movlb	0	; () banked
  2622  0008C8  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;operation.c: 321: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2626  0008CA  0E33               	movlw	51
  2627  0008CC  0100               	movlb	0	; () banked
  2628  0008CE  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2629  0008D0  0EBB               	movlw	187
  2630  0008D2  6F85               	movwf	??_sendPillRequests& (0+255),b
  2631  0008D4  0EDF               	movlw	223
  2632  0008D6                     u5197:
  2633  0008D6  2EE8               	decfsz	wreg,f,c
  2634  0008D8  D7FE               	bra	u5197
  2635  0008DA  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2636  0008DC  D7FC               	bra	u5197
  2637  0008DE  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2638  0008E0  D7FA               	bra	u5197
  2639  0008E2  D000               	nop2	
  2640                           
  2641                           ;operation.c: 322: uartTransmitBlocking(arr, 1);
  2642  0008E4  0E8B               	movlw	low sendPillRequests@arr
  2643  0008E6  6E22               	movwf	uartTransmitBlocking@data,c
  2644  0008E8  0E00               	movlw	high sendPillRequests@arr
  2645  0008EA  6E23               	movwf	uartTransmitBlocking@data+1,c
  2646  0008EC  0E01               	movlw	1
  2647  0008EE  6E24               	movwf	uartTransmitBlocking@numBytes,c
  2648  0008F0  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  2649                           
  2650                           ;operation.c: 323: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2651  0008F4  0E33               	movlw	51
  2652  0008F6  0100               	movlb	0	; () banked
  2653  0008F8  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2654  0008FA  0EBB               	movlw	187
  2655  0008FC  6F85               	movwf	??_sendPillRequests& (0+255),b
  2656  0008FE  0EDF               	movlw	223
  2657  000900                     u5207:
  2658  000900  2EE8               	decfsz	wreg,f,c
  2659  000902  D7FE               	bra	u5207
  2660  000904  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2661  000906  D7FC               	bra	u5207
  2662  000908  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2663  00090A  D7FA               	bra	u5207
  2664  00090C  D000               	nop2	
  2665  00090E                     
  2666                           ;operation.c: 325: _delay((unsigned long)((100)*(40000000/4000.0)));
  2667  00090E  0E06               	movlw	6
  2668  000910  0100               	movlb	0	; () banked
  2669  000912  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2670  000914  0E13               	movlw	19
  2671  000916  6F85               	movwf	??_sendPillRequests& (0+255),b
  2672  000918  0EAD               	movlw	173
  2673  00091A                     u5217:
  2674  00091A  2EE8               	decfsz	wreg,f,c
  2675  00091C  D7FE               	bra	u5217
  2676  00091E  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2677  000920  D7FC               	bra	u5217
  2678  000922  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2679  000924  D7FA               	bra	u5217
  2680  000926  D000               	nop2	
  2681                           
  2682                           ;operation.c: 326: if(input == 1){
  2683  000928  0100               	movlb	0	; () banked
  2684  00092A  0589               	decf	sendPillRequests@input& (0+255),w,b
  2685  00092C  118A               	iorwf	(sendPillRequests@input+1)& (0+255),w,b
  2686  00092E  A4D8               	btfss	status,2,c
  2687  000930  D7EE               	goto	l505
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;operation.c: 327: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2691  000932  0E01               	movlw	1
  2692  000934  ECF0  F00E         	call	_lcdInst
  2693  000938  0EC3               	movlw	195
  2694  00093A  0100               	movlb	0	; () banked
  2695  00093C  6F85               	movwf	??_sendPillRequests& (0+255),b
  2696  00093E  0ECD               	movlw	205
  2697  000940                     u5227:
  2698  000940  2EE8               	decfsz	wreg,f,c
  2699  000942  D7FE               	bra	u5227
  2700  000944  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2701  000946  D7FC               	bra	u5227
  2702                           
  2703                           ;operation.c: 328: _delay((unsigned long)((100)*(40000000/4000.0)));
  2704  000948  0E06               	movlw	6
  2705  00094A  0100               	movlb	0	; () banked
  2706  00094C  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2707  00094E  0E13               	movlw	19
  2708  000950  6F85               	movwf	??_sendPillRequests& (0+255),b
  2709  000952  0EAD               	movlw	173
  2710  000954                     u5237:
  2711  000954  2EE8               	decfsz	wreg,f,c
  2712  000956  D7FE               	bra	u5237
  2713  000958  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2714  00095A  D7FC               	bra	u5237
  2715  00095C  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2716  00095E  D7FA               	bra	u5237
  2717  000960  D000               	nop2	
  2718                           
  2719                           ;operation.c: 329: printf("received 3");
  2720  000962  0E39               	movlw	low STR_43
  2721  000964  0100               	movlb	0	; () banked
  2722  000966  6F80               	movwf	printf@f& (0+255),b
  2723  000968  0EFF               	movlw	high STR_43
  2724  00096A  6F81               	movwf	(printf@f+1)& (0+255),b
  2725  00096C  ECAB  F00E         	call	_printf	;wreg free
  2726                           
  2727                           ;operation.c: 330: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2728  000970  0E33               	movlw	51
  2729  000972  0100               	movlb	0	; () banked
  2730  000974  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2731  000976  0EBB               	movlw	187
  2732  000978  6F85               	movwf	??_sendPillRequests& (0+255),b
  2733  00097A  0EDF               	movlw	223
  2734  00097C                     u5247:
  2735  00097C  2EE8               	decfsz	wreg,f,c
  2736  00097E  D7FE               	bra	u5247
  2737  000980  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2738  000982  D7FC               	bra	u5247
  2739  000984  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2740  000986  D7FA               	bra	u5247
  2741  000988                     L1:
  2742  000988  D000               	nop2	
  2743  00098A                     l507:
  2744                           
  2745                           ;operation.c: 332: }
  2746                           ;operation.c: 333: }
  2747                           ;operation.c: 334: }
  2748                           ;operation.c: 337: if(num_pills_F_data == '1'){
  2749  00098A  0E31               	movlw	49
  2750  00098C  1840               	xorwf	_num_pills_F_data,w,c
  2751  00098E  A4D8               	btfss	status,2,c
  2752  000990  D063               	goto	l509
  2753                           
  2754                           ;operation.c: 338: arr[0] = ('D');
  2755  000992  0E44               	movlw	68
  2756  000994  0100               	movlb	0	; () banked
  2757  000996  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;operation.c: 339: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2761  000998  0E33               	movlw	51
  2762  00099A  0100               	movlb	0	; () banked
  2763  00099C  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2764  00099E  0EBB               	movlw	187
  2765  0009A0  6F85               	movwf	??_sendPillRequests& (0+255),b
  2766  0009A2  0EDF               	movlw	223
  2767  0009A4                     u5257:
  2768  0009A4  2EE8               	decfsz	wreg,f,c
  2769  0009A6  D7FE               	bra	u5257
  2770  0009A8  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2771  0009AA  D7FC               	bra	u5257
  2772  0009AC  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2773  0009AE  D7FA               	bra	u5257
  2774  0009B0  D000               	nop2	
  2775                           
  2776                           ;operation.c: 340: uartTransmitBlocking(arr, 1);
  2777  0009B2  0E8B               	movlw	low sendPillRequests@arr
  2778  0009B4  6E22               	movwf	uartTransmitBlocking@data,c
  2779  0009B6  0E00               	movlw	high sendPillRequests@arr
  2780  0009B8  6E23               	movwf	uartTransmitBlocking@data+1,c
  2781  0009BA  0E01               	movlw	1
  2782  0009BC  6E24               	movwf	uartTransmitBlocking@numBytes,c
  2783  0009BE  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  2784                           
  2785                           ;operation.c: 341: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2786  0009C2  0E33               	movlw	51
  2787  0009C4  0100               	movlb	0	; () banked
  2788  0009C6  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2789  0009C8  0EBB               	movlw	187
  2790  0009CA  6F85               	movwf	??_sendPillRequests& (0+255),b
  2791  0009CC  0EDF               	movlw	223
  2792  0009CE                     u5267:
  2793  0009CE  2EE8               	decfsz	wreg,f,c
  2794  0009D0  D7FE               	bra	u5267
  2795  0009D2  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2796  0009D4  D7FC               	bra	u5267
  2797  0009D6  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2798  0009D8  D7FA               	bra	u5267
  2799  0009DA  D000               	nop2	
  2800  0009DC                     
  2801                           ;operation.c: 343: _delay((unsigned long)((100)*(40000000/4000.0)));
  2802  0009DC  0E06               	movlw	6
  2803  0009DE  0100               	movlb	0	; () banked
  2804  0009E0  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2805  0009E2  0E13               	movlw	19
  2806  0009E4  6F85               	movwf	??_sendPillRequests& (0+255),b
  2807  0009E6  0EAD               	movlw	173
  2808  0009E8                     u5277:
  2809  0009E8  2EE8               	decfsz	wreg,f,c
  2810  0009EA  D7FE               	bra	u5277
  2811  0009EC  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2812  0009EE  D7FC               	bra	u5277
  2813  0009F0  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2814  0009F2  D7FA               	bra	u5277
  2815  0009F4  D000               	nop2	
  2816                           
  2817                           ;operation.c: 344: if(input == 1){
  2818  0009F6  0100               	movlb	0	; () banked
  2819  0009F8  0589               	decf	sendPillRequests@input& (0+255),w,b
  2820  0009FA  118A               	iorwf	(sendPillRequests@input+1)& (0+255),w,b
  2821  0009FC  A4D8               	btfss	status,2,c
  2822  0009FE  D7EE               	goto	l510
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;operation.c: 345: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2826  000A00  0E01               	movlw	1
  2827  000A02  ECF0  F00E         	call	_lcdInst
  2828  000A06  0EC3               	movlw	195
  2829  000A08  0100               	movlb	0	; () banked
  2830  000A0A  6F85               	movwf	??_sendPillRequests& (0+255),b
  2831  000A0C  0ECD               	movlw	205
  2832  000A0E                     u5287:
  2833  000A0E  2EE8               	decfsz	wreg,f,c
  2834  000A10  D7FE               	bra	u5287
  2835  000A12  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2836  000A14  D7FC               	bra	u5287
  2837                           
  2838                           ;operation.c: 346: _delay((unsigned long)((100)*(40000000/4000.0)));
  2839  000A16  0E06               	movlw	6
  2840  000A18  0100               	movlb	0	; () banked
  2841  000A1A  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2842  000A1C  0E13               	movlw	19
  2843  000A1E  6F85               	movwf	??_sendPillRequests& (0+255),b
  2844  000A20  0EAD               	movlw	173
  2845  000A22                     u5297:
  2846  000A22  2EE8               	decfsz	wreg,f,c
  2847  000A24  D7FE               	bra	u5297
  2848  000A26  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2849  000A28  D7FC               	bra	u5297
  2850  000A2A  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2851  000A2C  D7FA               	bra	u5297
  2852  000A2E  D000               	nop2	
  2853                           
  2854                           ;operation.c: 347: printf("received 4");
  2855  000A30  0E44               	movlw	low STR_44
  2856  000A32  0100               	movlb	0	; () banked
  2857  000A34  6F80               	movwf	printf@f& (0+255),b
  2858  000A36  0EFF               	movlw	high STR_44
  2859  000A38  6F81               	movwf	(printf@f+1)& (0+255),b
  2860  000A3A  ECAB  F00E         	call	_printf	;wreg free
  2861                           
  2862                           ;operation.c: 348: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2863  000A3E  0E33               	movlw	51
  2864  000A40  0100               	movlb	0	; () banked
  2865  000A42  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2866  000A44  0EBB               	movlw	187
  2867  000A46  6F85               	movwf	??_sendPillRequests& (0+255),b
  2868  000A48  0EDF               	movlw	223
  2869  000A4A                     u5307:
  2870  000A4A  2EE8               	decfsz	wreg,f,c
  2871  000A4C  D7FE               	bra	u5307
  2872  000A4E  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2873  000A50  D7FC               	bra	u5307
  2874  000A52  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2875  000A54  D7FA               	bra	u5307
  2876  000A56  D066               	goto	L2
  2877  000A58                     l509:
  2878  000A58  0E32               	movlw	50
  2879  000A5A  1840               	xorwf	_num_pills_F_data,w,c
  2880  000A5C  A4D8               	btfss	status,2,c
  2881  000A5E  D063               	goto	l518
  2882                           
  2883                           ;operation.c: 353: arr[0] = ('E');
  2884  000A60  0E45               	movlw	69
  2885  000A62  0100               	movlb	0	; () banked
  2886  000A64  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;operation.c: 354: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2890  000A66  0E33               	movlw	51
  2891  000A68  0100               	movlb	0	; () banked
  2892  000A6A  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2893  000A6C  0EBB               	movlw	187
  2894  000A6E  6F85               	movwf	??_sendPillRequests& (0+255),b
  2895  000A70  0EDF               	movlw	223
  2896  000A72                     u5317:
  2897  000A72  2EE8               	decfsz	wreg,f,c
  2898  000A74  D7FE               	bra	u5317
  2899  000A76  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2900  000A78  D7FC               	bra	u5317
  2901  000A7A  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2902  000A7C  D7FA               	bra	u5317
  2903  000A7E  D000               	nop2	
  2904                           
  2905                           ;operation.c: 355: uartTransmitBlocking(arr, 1);
  2906  000A80  0E8B               	movlw	low sendPillRequests@arr
  2907  000A82  6E22               	movwf	uartTransmitBlocking@data,c
  2908  000A84  0E00               	movlw	high sendPillRequests@arr
  2909  000A86  6E23               	movwf	uartTransmitBlocking@data+1,c
  2910  000A88  0E01               	movlw	1
  2911  000A8A  6E24               	movwf	uartTransmitBlocking@numBytes,c
  2912  000A8C  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  2913                           
  2914                           ;operation.c: 356: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2915  000A90  0E33               	movlw	51
  2916  000A92  0100               	movlb	0	; () banked
  2917  000A94  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2918  000A96  0EBB               	movlw	187
  2919  000A98  6F85               	movwf	??_sendPillRequests& (0+255),b
  2920  000A9A  0EDF               	movlw	223
  2921  000A9C                     u5327:
  2922  000A9C  2EE8               	decfsz	wreg,f,c
  2923  000A9E  D7FE               	bra	u5327
  2924  000AA0  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2925  000AA2  D7FC               	bra	u5327
  2926  000AA4  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2927  000AA6  D7FA               	bra	u5327
  2928  000AA8  D000               	nop2	
  2929  000AAA                     
  2930                           ;operation.c: 358: _delay((unsigned long)((100)*(40000000/4000.0)));
  2931  000AAA  0E06               	movlw	6
  2932  000AAC  0100               	movlb	0	; () banked
  2933  000AAE  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2934  000AB0  0E13               	movlw	19
  2935  000AB2  6F85               	movwf	??_sendPillRequests& (0+255),b
  2936  000AB4  0EAD               	movlw	173
  2937  000AB6                     u5337:
  2938  000AB6  2EE8               	decfsz	wreg,f,c
  2939  000AB8  D7FE               	bra	u5337
  2940  000ABA  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2941  000ABC  D7FC               	bra	u5337
  2942  000ABE  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2943  000AC0  D7FA               	bra	u5337
  2944  000AC2  D000               	nop2	
  2945                           
  2946                           ;operation.c: 359: if(input == 1){
  2947  000AC4  0100               	movlb	0	; () banked
  2948  000AC6  0589               	decf	sendPillRequests@input& (0+255),w,b
  2949  000AC8  118A               	iorwf	(sendPillRequests@input+1)& (0+255),w,b
  2950  000ACA  A4D8               	btfss	status,2,c
  2951  000ACC  D7EE               	goto	l516
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;operation.c: 360: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2955  000ACE  0E01               	movlw	1
  2956  000AD0  ECF0  F00E         	call	_lcdInst
  2957  000AD4  0EC3               	movlw	195
  2958  000AD6  0100               	movlb	0	; () banked
  2959  000AD8  6F85               	movwf	??_sendPillRequests& (0+255),b
  2960  000ADA  0ECD               	movlw	205
  2961  000ADC                     u5347:
  2962  000ADC  2EE8               	decfsz	wreg,f,c
  2963  000ADE  D7FE               	bra	u5347
  2964  000AE0  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2965  000AE2  D7FC               	bra	u5347
  2966                           
  2967                           ;operation.c: 361: _delay((unsigned long)((100)*(40000000/4000.0)));
  2968  000AE4  0E06               	movlw	6
  2969  000AE6  0100               	movlb	0	; () banked
  2970  000AE8  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2971  000AEA  0E13               	movlw	19
  2972  000AEC  6F85               	movwf	??_sendPillRequests& (0+255),b
  2973  000AEE  0EAD               	movlw	173
  2974  000AF0                     u5357:
  2975  000AF0  2EE8               	decfsz	wreg,f,c
  2976  000AF2  D7FE               	bra	u5357
  2977  000AF4  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  2978  000AF6  D7FC               	bra	u5357
  2979  000AF8  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  2980  000AFA  D7FA               	bra	u5357
  2981  000AFC  D000               	nop2	
  2982                           
  2983                           ;operation.c: 362: printf("received 5");
  2984  000AFE  0E4F               	movlw	low STR_45
  2985  000B00  0100               	movlb	0	; () banked
  2986  000B02  6F80               	movwf	printf@f& (0+255),b
  2987  000B04  0EFF               	movlw	high STR_45
  2988  000B06  6F81               	movwf	(printf@f+1)& (0+255),b
  2989  000B08  ECAB  F00E         	call	_printf	;wreg free
  2990                           
  2991                           ;operation.c: 363: _delay((unsigned long)((1000)*(40000000/4000.0)));
  2992  000B0C  0E33               	movlw	51
  2993  000B0E  0100               	movlb	0	; () banked
  2994  000B10  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  2995  000B12  0EBB               	movlw	187
  2996  000B14  6F85               	movwf	??_sendPillRequests& (0+255),b
  2997  000B16  0EDF               	movlw	223
  2998  000B18                     u5367:
  2999  000B18  2EE8               	decfsz	wreg,f,c
  3000  000B1A  D7FE               	bra	u5367
  3001  000B1C  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3002  000B1E  D7FC               	bra	u5367
  3003  000B20  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3004  000B22  D7FA               	bra	u5367
  3005  000B24                     L2:
  3006  000B24  D000               	nop2	
  3007  000B26                     l518:
  3008                           
  3009                           ;operation.c: 365: }
  3010                           ;operation.c: 366: }
  3011                           ;operation.c: 367: }
  3012                           ;operation.c: 369: if(num_pills_L_data == '1'){
  3013  000B26  0E31               	movlw	49
  3014  000B28  183F               	xorwf	_num_pills_L_data,w,c
  3015  000B2A  A4D8               	btfss	status,2,c
  3016  000B2C  D063               	goto	l520
  3017                           
  3018                           ;operation.c: 371: arr[0] = ('F');
  3019  000B2E  0E46               	movlw	70
  3020  000B30  0100               	movlb	0	; () banked
  3021  000B32  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;operation.c: 372: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3025  000B34  0E33               	movlw	51
  3026  000B36  0100               	movlb	0	; () banked
  3027  000B38  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3028  000B3A  0EBB               	movlw	187
  3029  000B3C  6F85               	movwf	??_sendPillRequests& (0+255),b
  3030  000B3E  0EDF               	movlw	223
  3031  000B40                     u5377:
  3032  000B40  2EE8               	decfsz	wreg,f,c
  3033  000B42  D7FE               	bra	u5377
  3034  000B44  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3035  000B46  D7FC               	bra	u5377
  3036  000B48  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3037  000B4A  D7FA               	bra	u5377
  3038  000B4C  D000               	nop2	
  3039                           
  3040                           ;operation.c: 373: uartTransmitBlocking(arr, 1);
  3041  000B4E  0E8B               	movlw	low sendPillRequests@arr
  3042  000B50  6E22               	movwf	uartTransmitBlocking@data,c
  3043  000B52  0E00               	movlw	high sendPillRequests@arr
  3044  000B54  6E23               	movwf	uartTransmitBlocking@data+1,c
  3045  000B56  0E01               	movlw	1
  3046  000B58  6E24               	movwf	uartTransmitBlocking@numBytes,c
  3047  000B5A  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  3048                           
  3049                           ;operation.c: 374: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3050  000B5E  0E33               	movlw	51
  3051  000B60  0100               	movlb	0	; () banked
  3052  000B62  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3053  000B64  0EBB               	movlw	187
  3054  000B66  6F85               	movwf	??_sendPillRequests& (0+255),b
  3055  000B68  0EDF               	movlw	223
  3056  000B6A                     u5387:
  3057  000B6A  2EE8               	decfsz	wreg,f,c
  3058  000B6C  D7FE               	bra	u5387
  3059  000B6E  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3060  000B70  D7FC               	bra	u5387
  3061  000B72  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3062  000B74  D7FA               	bra	u5387
  3063  000B76  D000               	nop2	
  3064  000B78                     
  3065                           ;operation.c: 376: _delay((unsigned long)((100)*(40000000/4000.0)));
  3066  000B78  0E06               	movlw	6
  3067  000B7A  0100               	movlb	0	; () banked
  3068  000B7C  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3069  000B7E  0E13               	movlw	19
  3070  000B80  6F85               	movwf	??_sendPillRequests& (0+255),b
  3071  000B82  0EAD               	movlw	173
  3072  000B84                     u5397:
  3073  000B84  2EE8               	decfsz	wreg,f,c
  3074  000B86  D7FE               	bra	u5397
  3075  000B88  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3076  000B8A  D7FC               	bra	u5397
  3077  000B8C  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3078  000B8E  D7FA               	bra	u5397
  3079  000B90  D000               	nop2	
  3080                           
  3081                           ;operation.c: 377: if(input == 1){
  3082  000B92  0100               	movlb	0	; () banked
  3083  000B94  0589               	decf	sendPillRequests@input& (0+255),w,b
  3084  000B96  118A               	iorwf	(sendPillRequests@input+1)& (0+255),w,b
  3085  000B98  A4D8               	btfss	status,2,c
  3086  000B9A  D7EE               	goto	l521
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;operation.c: 378: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3090  000B9C  0E01               	movlw	1
  3091  000B9E  ECF0  F00E         	call	_lcdInst
  3092  000BA2  0EC3               	movlw	195
  3093  000BA4  0100               	movlb	0	; () banked
  3094  000BA6  6F85               	movwf	??_sendPillRequests& (0+255),b
  3095  000BA8  0ECD               	movlw	205
  3096  000BAA                     u5407:
  3097  000BAA  2EE8               	decfsz	wreg,f,c
  3098  000BAC  D7FE               	bra	u5407
  3099  000BAE  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3100  000BB0  D7FC               	bra	u5407
  3101                           
  3102                           ;operation.c: 379: _delay((unsigned long)((100)*(40000000/4000.0)));
  3103  000BB2  0E06               	movlw	6
  3104  000BB4  0100               	movlb	0	; () banked
  3105  000BB6  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3106  000BB8  0E13               	movlw	19
  3107  000BBA  6F85               	movwf	??_sendPillRequests& (0+255),b
  3108  000BBC  0EAD               	movlw	173
  3109  000BBE                     u5417:
  3110  000BBE  2EE8               	decfsz	wreg,f,c
  3111  000BC0  D7FE               	bra	u5417
  3112  000BC2  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3113  000BC4  D7FC               	bra	u5417
  3114  000BC6  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3115  000BC8  D7FA               	bra	u5417
  3116  000BCA  D000               	nop2	
  3117                           
  3118                           ;operation.c: 380: printf("received 6");
  3119  000BCC  0E5A               	movlw	low STR_46
  3120  000BCE  0100               	movlb	0	; () banked
  3121  000BD0  6F80               	movwf	printf@f& (0+255),b
  3122  000BD2  0EFF               	movlw	high STR_46
  3123  000BD4  6F81               	movwf	(printf@f+1)& (0+255),b
  3124  000BD6  ECAB  F00E         	call	_printf	;wreg free
  3125                           
  3126                           ;operation.c: 381: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3127  000BDA  0E33               	movlw	51
  3128  000BDC  0100               	movlb	0	; () banked
  3129  000BDE  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3130  000BE0  0EBB               	movlw	187
  3131  000BE2  6F85               	movwf	??_sendPillRequests& (0+255),b
  3132  000BE4  0EDF               	movlw	223
  3133  000BE6                     u5427:
  3134  000BE6  2EE8               	decfsz	wreg,f,c
  3135  000BE8  D7FE               	bra	u5427
  3136  000BEA  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3137  000BEC  D7FC               	bra	u5427
  3138  000BEE  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3139  000BF0  D7FA               	bra	u5427
  3140  000BF2  D0CD               	goto	L4
  3141  000BF4                     l520:
  3142  000BF4  0E32               	movlw	50
  3143  000BF6  183F               	xorwf	_num_pills_L_data,w,c
  3144  000BF8  A4D8               	btfss	status,2,c
  3145  000BFA  D063               	goto	l526
  3146                           
  3147                           ;operation.c: 386: arr[0] = ('G');
  3148  000BFC  0E47               	movlw	71
  3149  000BFE  0100               	movlb	0	; () banked
  3150  000C00  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;operation.c: 387: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3154  000C02  0E33               	movlw	51
  3155  000C04  0100               	movlb	0	; () banked
  3156  000C06  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3157  000C08  0EBB               	movlw	187
  3158  000C0A  6F85               	movwf	??_sendPillRequests& (0+255),b
  3159  000C0C  0EDF               	movlw	223
  3160  000C0E                     u5437:
  3161  000C0E  2EE8               	decfsz	wreg,f,c
  3162  000C10  D7FE               	bra	u5437
  3163  000C12  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3164  000C14  D7FC               	bra	u5437
  3165  000C16  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3166  000C18  D7FA               	bra	u5437
  3167  000C1A  D000               	nop2	
  3168                           
  3169                           ;operation.c: 388: uartTransmitBlocking(arr, 1);
  3170  000C1C  0E8B               	movlw	low sendPillRequests@arr
  3171  000C1E  6E22               	movwf	uartTransmitBlocking@data,c
  3172  000C20  0E00               	movlw	high sendPillRequests@arr
  3173  000C22  6E23               	movwf	uartTransmitBlocking@data+1,c
  3174  000C24  0E01               	movlw	1
  3175  000C26  6E24               	movwf	uartTransmitBlocking@numBytes,c
  3176  000C28  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  3177                           
  3178                           ;operation.c: 389: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3179  000C2C  0E33               	movlw	51
  3180  000C2E  0100               	movlb	0	; () banked
  3181  000C30  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3182  000C32  0EBB               	movlw	187
  3183  000C34  6F85               	movwf	??_sendPillRequests& (0+255),b
  3184  000C36  0EDF               	movlw	223
  3185  000C38                     u5447:
  3186  000C38  2EE8               	decfsz	wreg,f,c
  3187  000C3A  D7FE               	bra	u5447
  3188  000C3C  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3189  000C3E  D7FC               	bra	u5447
  3190  000C40  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3191  000C42  D7FA               	bra	u5447
  3192  000C44  D000               	nop2	
  3193  000C46                     
  3194                           ;operation.c: 391: _delay((unsigned long)((100)*(40000000/4000.0)));
  3195  000C46  0E06               	movlw	6
  3196  000C48  0100               	movlb	0	; () banked
  3197  000C4A  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3198  000C4C  0E13               	movlw	19
  3199  000C4E  6F85               	movwf	??_sendPillRequests& (0+255),b
  3200  000C50  0EAD               	movlw	173
  3201  000C52                     u5457:
  3202  000C52  2EE8               	decfsz	wreg,f,c
  3203  000C54  D7FE               	bra	u5457
  3204  000C56  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3205  000C58  D7FC               	bra	u5457
  3206  000C5A  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3207  000C5C  D7FA               	bra	u5457
  3208  000C5E  D000               	nop2	
  3209                           
  3210                           ;operation.c: 392: if(input == 1){
  3211  000C60  0100               	movlb	0	; () banked
  3212  000C62  0589               	decf	sendPillRequests@input& (0+255),w,b
  3213  000C64  118A               	iorwf	(sendPillRequests@input+1)& (0+255),w,b
  3214  000C66  A4D8               	btfss	status,2,c
  3215  000C68  D7EE               	goto	l527
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;operation.c: 393: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3219  000C6A  0E01               	movlw	1
  3220  000C6C  ECF0  F00E         	call	_lcdInst
  3221  000C70  0EC3               	movlw	195
  3222  000C72  0100               	movlb	0	; () banked
  3223  000C74  6F85               	movwf	??_sendPillRequests& (0+255),b
  3224  000C76  0ECD               	movlw	205
  3225  000C78                     u5467:
  3226  000C78  2EE8               	decfsz	wreg,f,c
  3227  000C7A  D7FE               	bra	u5467
  3228  000C7C  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3229  000C7E  D7FC               	bra	u5467
  3230                           
  3231                           ;operation.c: 394: _delay((unsigned long)((100)*(40000000/4000.0)));
  3232  000C80  0E06               	movlw	6
  3233  000C82  0100               	movlb	0	; () banked
  3234  000C84  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3235  000C86  0E13               	movlw	19
  3236  000C88  6F85               	movwf	??_sendPillRequests& (0+255),b
  3237  000C8A  0EAD               	movlw	173
  3238  000C8C                     u5477:
  3239  000C8C  2EE8               	decfsz	wreg,f,c
  3240  000C8E  D7FE               	bra	u5477
  3241  000C90  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3242  000C92  D7FC               	bra	u5477
  3243  000C94  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3244  000C96  D7FA               	bra	u5477
  3245  000C98  D000               	nop2	
  3246                           
  3247                           ;operation.c: 395: printf("received 7");
  3248  000C9A  0E65               	movlw	low STR_47
  3249  000C9C  0100               	movlb	0	; () banked
  3250  000C9E  6F80               	movwf	printf@f& (0+255),b
  3251  000CA0  0EFF               	movlw	high STR_47
  3252  000CA2  6F81               	movwf	(printf@f+1)& (0+255),b
  3253  000CA4  ECAB  F00E         	call	_printf	;wreg free
  3254                           
  3255                           ;operation.c: 396: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3256  000CA8  0E33               	movlw	51
  3257  000CAA  0100               	movlb	0	; () banked
  3258  000CAC  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3259  000CAE  0EBB               	movlw	187
  3260  000CB0  6F85               	movwf	??_sendPillRequests& (0+255),b
  3261  000CB2  0EDF               	movlw	223
  3262  000CB4                     u5487:
  3263  000CB4  2EE8               	decfsz	wreg,f,c
  3264  000CB6  D7FE               	bra	u5487
  3265  000CB8  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3266  000CBA  D7FC               	bra	u5487
  3267  000CBC  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3268  000CBE  D7FA               	bra	u5487
  3269  000CC0  D066               	goto	L4
  3270  000CC2                     l526:
  3271  000CC2  0E33               	movlw	51
  3272  000CC4  183F               	xorwf	_num_pills_L_data,w,c
  3273  000CC6  A4D8               	btfss	status,2,c
  3274  000CC8  D063               	goto	l535
  3275                           
  3276                           ;operation.c: 401: arr[0] = ('H');
  3277  000CCA  0E48               	movlw	72
  3278  000CCC  0100               	movlb	0	; () banked
  3279  000CCE  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;operation.c: 402: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3283  000CD0  0E33               	movlw	51
  3284  000CD2  0100               	movlb	0	; () banked
  3285  000CD4  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3286  000CD6  0EBB               	movlw	187
  3287  000CD8  6F85               	movwf	??_sendPillRequests& (0+255),b
  3288  000CDA  0EDF               	movlw	223
  3289  000CDC                     u5497:
  3290  000CDC  2EE8               	decfsz	wreg,f,c
  3291  000CDE  D7FE               	bra	u5497
  3292  000CE0  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3293  000CE2  D7FC               	bra	u5497
  3294  000CE4  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3295  000CE6  D7FA               	bra	u5497
  3296  000CE8  D000               	nop2	
  3297                           
  3298                           ;operation.c: 403: uartTransmitBlocking(arr, 1);
  3299  000CEA  0E8B               	movlw	low sendPillRequests@arr
  3300  000CEC  6E22               	movwf	uartTransmitBlocking@data,c
  3301  000CEE  0E00               	movlw	high sendPillRequests@arr
  3302  000CF0  6E23               	movwf	uartTransmitBlocking@data+1,c
  3303  000CF2  0E01               	movlw	1
  3304  000CF4  6E24               	movwf	uartTransmitBlocking@numBytes,c
  3305  000CF6  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  3306                           
  3307                           ;operation.c: 404: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3308  000CFA  0E33               	movlw	51
  3309  000CFC  0100               	movlb	0	; () banked
  3310  000CFE  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3311  000D00  0EBB               	movlw	187
  3312  000D02  6F85               	movwf	??_sendPillRequests& (0+255),b
  3313  000D04  0EDF               	movlw	223
  3314  000D06                     u5507:
  3315  000D06  2EE8               	decfsz	wreg,f,c
  3316  000D08  D7FE               	bra	u5507
  3317  000D0A  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3318  000D0C  D7FC               	bra	u5507
  3319  000D0E  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3320  000D10  D7FA               	bra	u5507
  3321  000D12  D000               	nop2	
  3322  000D14                     
  3323                           ;operation.c: 406: _delay((unsigned long)((100)*(40000000/4000.0)));
  3324  000D14  0E06               	movlw	6
  3325  000D16  0100               	movlb	0	; () banked
  3326  000D18  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3327  000D1A  0E13               	movlw	19
  3328  000D1C  6F85               	movwf	??_sendPillRequests& (0+255),b
  3329  000D1E  0EAD               	movlw	173
  3330  000D20                     u5517:
  3331  000D20  2EE8               	decfsz	wreg,f,c
  3332  000D22  D7FE               	bra	u5517
  3333  000D24  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3334  000D26  D7FC               	bra	u5517
  3335  000D28  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3336  000D2A  D7FA               	bra	u5517
  3337  000D2C  D000               	nop2	
  3338                           
  3339                           ;operation.c: 407: if(input == 1){
  3340  000D2E  0100               	movlb	0	; () banked
  3341  000D30  0589               	decf	sendPillRequests@input& (0+255),w,b
  3342  000D32  118A               	iorwf	(sendPillRequests@input+1)& (0+255),w,b
  3343  000D34  A4D8               	btfss	status,2,c
  3344  000D36  D7EE               	goto	l533
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;operation.c: 408: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  3348  000D38  0E01               	movlw	1
  3349  000D3A  ECF0  F00E         	call	_lcdInst
  3350  000D3E  0EC3               	movlw	195
  3351  000D40  0100               	movlb	0	; () banked
  3352  000D42  6F85               	movwf	??_sendPillRequests& (0+255),b
  3353  000D44  0ECD               	movlw	205
  3354  000D46                     u5527:
  3355  000D46  2EE8               	decfsz	wreg,f,c
  3356  000D48  D7FE               	bra	u5527
  3357  000D4A  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3358  000D4C  D7FC               	bra	u5527
  3359                           
  3360                           ;operation.c: 409: _delay((unsigned long)((100)*(40000000/4000.0)));
  3361  000D4E  0E06               	movlw	6
  3362  000D50  0100               	movlb	0	; () banked
  3363  000D52  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3364  000D54  0E13               	movlw	19
  3365  000D56  6F85               	movwf	??_sendPillRequests& (0+255),b
  3366  000D58  0EAD               	movlw	173
  3367  000D5A                     u5537:
  3368  000D5A  2EE8               	decfsz	wreg,f,c
  3369  000D5C  D7FE               	bra	u5537
  3370  000D5E  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3371  000D60  D7FC               	bra	u5537
  3372  000D62  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3373  000D64  D7FA               	bra	u5537
  3374  000D66  D000               	nop2	
  3375                           
  3376                           ;operation.c: 410: printf("received 8");
  3377  000D68  0E70               	movlw	low STR_48
  3378  000D6A  0100               	movlb	0	; () banked
  3379  000D6C  6F80               	movwf	printf@f& (0+255),b
  3380  000D6E  0EFF               	movlw	high STR_48
  3381  000D70  6F81               	movwf	(printf@f+1)& (0+255),b
  3382  000D72  ECAB  F00E         	call	_printf	;wreg free
  3383                           
  3384                           ;operation.c: 411: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3385  000D76  0E33               	movlw	51
  3386  000D78  0100               	movlb	0	; () banked
  3387  000D7A  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3388  000D7C  0EBB               	movlw	187
  3389  000D7E  6F85               	movwf	??_sendPillRequests& (0+255),b
  3390  000D80  0EDF               	movlw	223
  3391  000D82                     u5547:
  3392  000D82  2EE8               	decfsz	wreg,f,c
  3393  000D84  D7FE               	bra	u5547
  3394  000D86  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3395  000D88  D7FC               	bra	u5547
  3396  000D8A  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3397  000D8C  D7FA               	bra	u5547
  3398  000D8E                     L4:
  3399  000D8E  D000               	nop2	
  3400  000D90                     l535:
  3401  000D90  0100               	movlb	0	; () banked
  3402  000D92  4B87               	infsnz	sendPillRequests@i& (0+255),f,b
  3403  000D94  2B88               	incf	(sendPillRequests@i+1)& (0+255),f,b
  3404                           
  3405                           ; BSR set to: 0
  3406  000D96  5188               	movf	(sendPillRequests@i+1)& (0+255),w,b
  3407  000D98  E101               	bnz	l4342
  3408  000D9A  D51A               	goto	L5
  3409  000D9C                     u4560:
  3410  000D9C                     l4342:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;operation.c: 413: }
  3414                           ;operation.c: 414: }
  3415                           ;operation.c: 415: }
  3416                           ;operation.c: 416: } }
  3417                           ;operation.c: 418: arr[0] = ('e');
  3418  000D9C  0E65               	movlw	101
  3419  000D9E  6F8B               	movwf	sendPillRequests@arr& (0+255),b
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;operation.c: 419: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3423  000DA0  0E33               	movlw	51
  3424  000DA2  0100               	movlb	0	; () banked
  3425  000DA4  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3426  000DA6  0EBB               	movlw	187
  3427  000DA8  6F85               	movwf	??_sendPillRequests& (0+255),b
  3428  000DAA  0EDF               	movlw	223
  3429  000DAC                     u5557:
  3430  000DAC  2EE8               	decfsz	wreg,f,c
  3431  000DAE  D7FE               	bra	u5557
  3432  000DB0  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3433  000DB2  D7FC               	bra	u5557
  3434  000DB4  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3435  000DB6  D7FA               	bra	u5557
  3436  000DB8  D000               	nop2	
  3437                           
  3438                           ;operation.c: 420: uartTransmitBlocking(arr, 1);
  3439  000DBA  0E8B               	movlw	low sendPillRequests@arr
  3440  000DBC  6E22               	movwf	uartTransmitBlocking@data,c
  3441  000DBE  0E00               	movlw	high sendPillRequests@arr
  3442  000DC0  6E23               	movwf	uartTransmitBlocking@data+1,c
  3443  000DC2  0E01               	movlw	1
  3444  000DC4  6E24               	movwf	uartTransmitBlocking@numBytes,c
  3445  000DC6  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  3446                           
  3447                           ;operation.c: 421: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3448  000DCA  0E33               	movlw	51
  3449  000DCC  0100               	movlb	0	; () banked
  3450  000DCE  6F86               	movwf	(??_sendPillRequests+1)& (0+255),b
  3451  000DD0  0EBB               	movlw	187
  3452  000DD2  6F85               	movwf	??_sendPillRequests& (0+255),b
  3453  000DD4  0EDF               	movlw	223
  3454  000DD6                     u5567:
  3455  000DD6  2EE8               	decfsz	wreg,f,c
  3456  000DD8  D7FE               	bra	u5567
  3457  000DDA  2F85               	decfsz	??_sendPillRequests& (0+255),f,b
  3458  000DDC  D7FC               	bra	u5567
  3459  000DDE  2F86               	decfsz	(??_sendPillRequests+1)& (0+255),f,b
  3460  000DE0  D7FA               	bra	u5567
  3461  000DE2  D000               	nop2	
  3462  000DE4  0012               	return		;funcret
  3463  000DE6                     __end_of_sendPillRequests:
  3464                           	opt stack 0
  3465                           tblptru	equ	0xFF8
  3466                           tblptrh	equ	0xFF7
  3467                           tblptrl	equ	0xFF6
  3468                           tablat	equ	0xFF5
  3469                           intcon	equ	0xFF2
  3470                           intcon3	equ	0xFF0
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           postdec1	equ	0xFE5
  3474                           fsr1l	equ	0xFE1
  3475                           postinc2	equ	0xFDE
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _printf *****************
  3481 ;; Defined at:
  3482 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3485 ;;		 -> STR_48(11), STR_47(11), STR_46(11), STR_45(11), 
  3486 ;;		 -> STR_44(11), STR_43(11), STR_42(11), STR_41(14), 
  3487 ;;		 -> STR_40(14), STR_39(14), STR_38(14), STR_37(14), 
  3488 ;;		 -> STR_36(14), STR_35(14), STR_34(14), STR_33(11), 
  3489 ;;		 -> STR_32(8), STR_31(15), STR_30(20), STR_29(10), 
  3490 ;;		 -> STR_28(8), STR_27(18), STR_26(18), STR_25(9), 
  3491 ;;		 -> STR_24(10), STR_23(9), STR_22(10), STR_21(10), 
  3492 ;;		 -> STR_20(9), STR_19(10), STR_18(10), STR_17(9), 
  3493 ;;		 -> STR_16(10), STR_15(16), STR_14(17), STR_13(2), 
  3494 ;;		 -> STR_12(3), STR_11(3), STR_10(15), STR_9(15), 
  3495 ;;		 -> STR_8(15), STR_7(15), STR_6(16), STR_5(17), 
  3496 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(15), 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  tmpval          4    0        struct .
  3499 ;;  cp              3    0        PTR const unsigned char 
  3500 ;;  ap              2    2[BANK0 ] PTR void [1]
  3501 ;;		 -> ?i2_printf(2), ?_printf(2), 
  3502 ;;  len             2    0        unsigned int 
  3503 ;;  val             2    0        unsigned int 
  3504 ;;  c               1    4[BANK0 ] char 
  3505 ;;  flag            1    0        unsigned char 
  3506 ;;  prec            1    0        char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  2    0[BANK0 ] int 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3516 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;Total ram usage:        5 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    7
  3523 ;; This function calls:
  3524 ;;		_putch
  3525 ;; This function is called by:
  3526 ;;		_user_interface
  3527 ;;		_main
  3528 ;;		_sendPillRequests
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text4
  3533  001D56                     __ptext4:
  3534                           	opt stack 0
  3535  001D56                     _printf:
  3536                           	opt stack 22
  3537                           
  3538                           ;doprnt.c: 466: va_list ap;
  3539                           ;doprnt.c: 499: signed char c;
  3540                           ;doprnt.c: 506: signed char prec;
  3541                           ;doprnt.c: 508: unsigned char flag;
  3542                           ;doprnt.c: 523: union {
  3543                           ;doprnt.c: 524: unsigned long vd;
  3544                           ;doprnt.c: 525: double integ;
  3545                           ;doprnt.c: 526: } tmpval;
  3546                           ;doprnt.c: 528: unsigned int val;
  3547                           ;doprnt.c: 529: unsigned len;
  3548                           ;doprnt.c: 530: const char * cp;
  3549                           ;doprnt.c: 533: *ap = __va_start();
  3550                           
  3551                           ;incstack = 0
  3552  001D56  0E82               	movlw	low (?_printf+2)
  3553  001D58  0100               	movlb	0	; () banked
  3554  001D5A  6F82               	movwf	printf@ap& (0+255),b
  3555  001D5C  0E00               	movlw	high (?_printf+2)
  3556  001D5E  6F83               	movwf	(printf@ap+1)& (0+255),b
  3557                           
  3558                           ;doprnt.c: 536: while(c = *f++) {
  3559  001D60  D003               	goto	l625
  3560  001D62                     
  3561                           ; BSR set to: 0
  3562                           ;doprnt.c: 540: {
  3563                           ;doprnt.c: 541: (putch(c) );
  3564                           
  3565                           ; BSR set to: 0
  3566  001D62  5184               	movf	printf@c& (0+255),w,b
  3567  001D64  ECE6  F00E         	call	_putch
  3568  001D68                     l625:
  3569  001D68  C080  FFF6         	movff	printf@f,tblptrl
  3570  001D6C  C081  FFF7         	movff	printf@f+1,tblptrh
  3571  001D70  0100               	movlb	0	; () banked
  3572  001D72  4B80               	infsnz	printf@f& (0+255),f,b
  3573  001D74  2B81               	incf	(printf@f+1)& (0+255),f,b
  3574  001D76                     	if	0	;tblptru may be non-zero
  3575  001D76                     	endif
  3576  001D76                     	if	0	;tblptru may be non-zero
  3577  001D76                     	endif
  3578  001D76  0008               	tblrd		*
  3579  001D78  CFF5 F084          	movff	tablat,printf@c
  3580  001D7C  5184               	movf	printf@c& (0+255),w,b
  3581  001D7E  B4D8               	btfsc	status,2,c
  3582  001D80  0012               	return	
  3583  001D82  D7EF               	goto	l626
  3584  001D84                     __end_of_printf:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           intcon	equ	0xFF2
  3591                           intcon3	equ	0xFF0
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           postdec1	equ	0xFE5
  3595                           fsr1l	equ	0xFE1
  3596                           postinc2	equ	0xFDE
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _putch *****************
  3602 ;; Defined at:
  3603 ;;		line 27 in file "lcd.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  data            1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  data            1   35[COMRAM] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        1 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    6
  3624 ;; This function calls:
  3625 ;;		_lcdNibble
  3626 ;; This function is called by:
  3627 ;;		_printf
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text5
  3632  001DCC                     __ptext5:
  3633                           	opt stack 0
  3634  001DCC                     _putch:
  3635                           	opt stack 22
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;incstack = 0
  3639                           ;putch@data stored from wreg
  3640  001DCC  6E24               	movwf	putch@data,c
  3641                           
  3642                           ;lcd.c: 35: LATDbits.LATD2 = 1;
  3643  001DCE  848C               	bsf	3980,2,c	;volatile
  3644                           
  3645                           ;lcd.c: 36: lcdNibble(data);
  3646  001DD0  5024               	movf	putch@data,w,c
  3647  001DD2  ECAD  F00D         	call	_lcdNibble
  3648                           
  3649                           ;lcd.c: 37: _delay((unsigned long)((100)*(40000000/4000000.0)));
  3650  001DD6  0EC8               	movlw	200
  3651  001DD8                     u5577:
  3652  001DD8  D000               	nop2	
  3653  001DDA  2EE8               	decfsz	wreg,f,c
  3654  001DDC  D7FD               	bra	u5577
  3655  001DDE  0012               	return		;funcret
  3656  001DE0                     __end_of_putch:
  3657                           	opt stack 0
  3658                           tblptru	equ	0xFF8
  3659                           tblptrh	equ	0xFF7
  3660                           tblptrl	equ	0xFF6
  3661                           tablat	equ	0xFF5
  3662                           intcon	equ	0xFF2
  3663                           intcon3	equ	0xFF0
  3664                           postinc0	equ	0xFEE
  3665                           wreg	equ	0xFE8
  3666                           postdec1	equ	0xFE5
  3667                           fsr1l	equ	0xFE1
  3668                           postinc2	equ	0xFDE
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _lcdInst *****************
  3674 ;; Defined at:
  3675 ;;		line 14 in file "lcd.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  data            1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  data            1   35[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;Total ram usage:        1 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    6
  3696 ;; This function calls:
  3697 ;;		_lcdNibble
  3698 ;; This function is called by:
  3699 ;;		_user_interface
  3700 ;;		_main
  3701 ;;		_initLCD
  3702 ;;		_sendPillRequests
  3703 ;;		_lcd_set_cursor
  3704 ;;		_lcd_shift_cursor
  3705 ;;		_lcd_shift_display
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text6
  3710  001DE0                     __ptext6:
  3711                           	opt stack 0
  3712  001DE0                     _lcdInst:
  3713                           	opt stack 23
  3714                           
  3715                           ;incstack = 0
  3716                           ;lcdInst@data stored from wreg
  3717  001DE0  6E24               	movwf	lcdInst@data,c
  3718                           
  3719                           ;lcd.c: 22: LATDbits.LATD2 = 0;
  3720  001DE2  948C               	bcf	3980,2,c	;volatile
  3721                           
  3722                           ;lcd.c: 23: lcdNibble(data);
  3723  001DE4  5024               	movf	lcdInst@data,w,c
  3724  001DE6  ECAD  F00D         	call	_lcdNibble
  3725                           
  3726                           ;lcd.c: 24: _delay((unsigned long)((100)*(40000000/4000000.0)));
  3727  001DEA  0EC8               	movlw	200
  3728  001DEC                     u5587:
  3729  001DEC  D000               	nop2	
  3730  001DEE  2EE8               	decfsz	wreg,f,c
  3731  001DF0  D7FD               	bra	u5587
  3732  001DF2  0012               	return		;funcret
  3733  001DF4                     __end_of_lcdInst:
  3734                           	opt stack 0
  3735                           tblptru	equ	0xFF8
  3736                           tblptrh	equ	0xFF7
  3737                           tblptrl	equ	0xFF6
  3738                           tablat	equ	0xFF5
  3739                           intcon	equ	0xFF2
  3740                           intcon3	equ	0xFF0
  3741                           postinc0	equ	0xFEE
  3742                           wreg	equ	0xFE8
  3743                           postdec1	equ	0xFE5
  3744                           fsr1l	equ	0xFE1
  3745                           postinc2	equ	0xFDE
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8
  3749                           
  3750 ;; *************** function _lcdNibble *****************
  3751 ;; Defined at:
  3752 ;;		line 40 in file "lcd.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  data            1    wreg     unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  data            1   34[COMRAM] unsigned char 
  3757 ;;  temp            1   33[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    5
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_lcdInst
  3778 ;;		_putch
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text7
  3783  001B5A                     __ptext7:
  3784                           	opt stack 0
  3785  001B5A                     _lcdNibble:
  3786                           	opt stack 22
  3787                           
  3788                           ;incstack = 0
  3789                           ;lcdNibble@data stored from wreg
  3790  001B5A  6E23               	movwf	lcdNibble@data,c
  3791                           
  3792                           ;lcd.c: 48: char temp = (unsigned char) (data & 0xF0);
  3793  001B5C  5023               	movf	lcdNibble@data,w,c
  3794  001B5E  0BF0               	andlw	240
  3795  001B60  6E22               	movwf	lcdNibble@temp,c
  3796                           
  3797                           ;lcd.c: 49: LATD = (unsigned char) (LATD & 0x0F);
  3798  001B62  508C               	movf	3980,w,c	;volatile
  3799  001B64  0B0F               	andlw	15
  3800  001B66  6E8C               	movwf	3980,c	;volatile
  3801                           
  3802                           ;lcd.c: 50: LATD = (unsigned char) (temp | LATD);
  3803  001B68  5022               	movf	lcdNibble@temp,w,c
  3804  001B6A  108C               	iorwf	3980,w,c	;volatile
  3805  001B6C  6E8C               	movwf	3980,c	;volatile
  3806                           
  3807                           ;lcd.c: 52: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  3808  001B6E  0E00               	movlw	0
  3809  001B70  BEF2               	btfsc	intcon,7,c	;volatile
  3810  001B72  0E01               	movlw	1
  3811  001B74  6E4A               	movwf	_LCDinterruptState,c
  3812  001B76  9EF2               	bcf	intcon,7,c	;volatile
  3813  001B78  868C               	bsf	3980,3,c	;volatile
  3814  001B7A  0E53               	movlw	83
  3815  001B7C                     u5597:
  3816  001B7C  2EE8               	decfsz	wreg,f,c
  3817  001B7E  D7FE               	bra	u5597
  3818  001B80  F000               	nop	
  3819  001B82  968C               	bcf	3980,3,c	;volatile
  3820  001B84  0EC8               	movlw	200
  3821  001B86                     u5607:
  3822  001B86  D000               	nop2	
  3823  001B88  2EE8               	decfsz	wreg,f,c
  3824  001B8A  D7FD               	bra	u5607
  3825  001B8C  B04A               	btfsc	_LCDinterruptState,0,c
  3826  001B8E  D002               	bra	u3745
  3827  001B90  9EF2               	bcf	intcon,7,c	;volatile
  3828  001B92  D001               	bra	u3746
  3829  001B94                     u3745:
  3830  001B94  8EF2               	bsf	intcon,7,c	;volatile
  3831  001B96                     u3746:
  3832                           
  3833                           ;lcd.c: 55: data = (unsigned char) (data << 4);
  3834  001B96  3823               	swapf	lcdNibble@data,w,c
  3835  001B98  0BF0               	andlw	240
  3836  001B9A  6E23               	movwf	lcdNibble@data,c
  3837                           
  3838                           ;lcd.c: 56: temp = (unsigned char) (data & 0xF0);
  3839  001B9C  5023               	movf	lcdNibble@data,w,c
  3840  001B9E  0BF0               	andlw	240
  3841  001BA0  6E22               	movwf	lcdNibble@temp,c
  3842                           
  3843                           ;lcd.c: 57: LATD = (unsigned char) (LATD & 0x0F);
  3844  001BA2  508C               	movf	3980,w,c	;volatile
  3845  001BA4  0B0F               	andlw	15
  3846  001BA6  6E8C               	movwf	3980,c	;volatile
  3847                           
  3848                           ;lcd.c: 58: LATD = (unsigned char) (temp | LATD);
  3849  001BA8  5022               	movf	lcdNibble@temp,w,c
  3850  001BAA  108C               	iorwf	3980,w,c	;volatile
  3851  001BAC  6E8C               	movwf	3980,c	;volatile
  3852                           
  3853                           ;lcd.c: 60: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  3854  001BAE  0E00               	movlw	0
  3855  001BB0  BEF2               	btfsc	intcon,7,c	;volatile
  3856  001BB2  0E01               	movlw	1
  3857  001BB4  6E4A               	movwf	_LCDinterruptState,c
  3858  001BB6  9EF2               	bcf	intcon,7,c	;volatile
  3859  001BB8  868C               	bsf	3980,3,c	;volatile
  3860  001BBA  0E53               	movlw	83
  3861  001BBC                     u5617:
  3862  001BBC  2EE8               	decfsz	wreg,f,c
  3863  001BBE  D7FE               	bra	u5617
  3864  001BC0  F000               	nop	
  3865  001BC2  968C               	bcf	3980,3,c	;volatile
  3866  001BC4  0EC8               	movlw	200
  3867  001BC6                     u5627:
  3868  001BC6  D000               	nop2	
  3869  001BC8  2EE8               	decfsz	wreg,f,c
  3870  001BCA  D7FD               	bra	u5627
  3871  001BCC  B04A               	btfsc	_LCDinterruptState,0,c
  3872  001BCE  D002               	bra	u3755
  3873  001BD0  9EF2               	bcf	intcon,7,c	;volatile
  3874  001BD2  D001               	bra	u3756
  3875  001BD4                     u3755:
  3876  001BD4  8EF2               	bsf	intcon,7,c	;volatile
  3877  001BD6                     u3756:
  3878  001BD6  0012               	return		;funcret
  3879  001BD8                     __end_of_lcdNibble:
  3880                           	opt stack 0
  3881                           tblptru	equ	0xFF8
  3882                           tblptrh	equ	0xFF7
  3883                           tblptrl	equ	0xFF6
  3884                           tablat	equ	0xFF5
  3885                           intcon	equ	0xFF2
  3886                           intcon3	equ	0xFF0
  3887                           postinc0	equ	0xFEE
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1l	equ	0xFE1
  3891                           postinc2	equ	0xFDE
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           
  3896 ;; *************** function _placeMarkers *****************
  3897 ;; Defined at:
  3898 ;;		line 71 in file "operation.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  2   48[None  ] int 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    5
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text8
  3927  0011DC                     __ptext8:
  3928                           	opt stack 0
  3929  0011DC                     _placeMarkers:
  3930                           	opt stack 25
  3931                           
  3932                           ;operation.c: 75: switch(modeOfOperation){
  3933                           
  3934                           ;incstack = 0
  3935  0011DC  D18B               	goto	l432
  3936  0011DE                     
  3937                           ;operation.c: 80: if(repetition_data == '1'){
  3938  0011DE  0E31               	movlw	49
  3939  0011E0  184E               	xorwf	_repetition_data,w,c
  3940  0011E2  A4D8               	btfss	status,2,c
  3941  0011E4  D01C               	goto	l434
  3942                           
  3943                           ;operation.c: 81: if(frequency_data == '1'){
  3944  0011E6  0E31               	movlw	49
  3945  0011E8  184D               	xorwf	_frequency_data,w,c
  3946  0011EA  A4D8               	btfss	status,2,c
  3947  0011EC  D00F               	goto	l435
  3948                           
  3949                           ;operation.c: 84: pillBox[0] = 'y';
  3950  0011EE  0E79               	movlw	121
  3951  0011F0  6E26               	movwf	_pillBox,c
  3952                           
  3953                           ;operation.c: 85: pillBox[2] = 'y';
  3954  0011F2  0E79               	movlw	121
  3955  0011F4  6E28               	movwf	_pillBox+2,c
  3956                           
  3957                           ;operation.c: 86: pillBox[4] = 'y';
  3958  0011F6  0E79               	movlw	121
  3959  0011F8  6E2A               	movwf	_pillBox+4,c
  3960                           
  3961                           ;operation.c: 87: pillBox[6] = 'y';
  3962  0011FA  0E79               	movlw	121
  3963  0011FC  6E2C               	movwf	_pillBox+6,c
  3964                           
  3965                           ;operation.c: 88: pillBox[8] = 'y';
  3966  0011FE  0E79               	movlw	121
  3967  001200  6E2E               	movwf	_pillBox+8,c
  3968                           
  3969                           ;operation.c: 89: pillBox[10] = 'y';
  3970  001202  0E79               	movlw	121
  3971  001204  6E30               	movwf	_pillBox+10,c
  3972                           
  3973                           ;operation.c: 90: pillBox[12] = 'y'; }
  3974  001206  0E79               	movlw	121
  3975  001208  6E32               	movwf	_pillBox+12,c
  3976  00120A  D09C               	goto	l460
  3977  00120C                     l435:
  3978                           
  3979                           ;operation.c: 91: else if(frequency_data == '2'){
  3980  00120C  0E32               	movlw	50
  3981  00120E  184D               	xorwf	_frequency_data,w,c
  3982  001210  B4D8               	btfsc	status,2,c
  3983  001212  D054               	goto	L6
  3984                           
  3985                           ;operation.c: 96: }else if(frequency_data == '3'){
  3986                           
  3987                           ;operation.c: 95: pillBox[0] = 'y';
  3988                           
  3989                           ;operation.c: 94: pillBox[4] = 'y';
  3990                           
  3991                           ;operation.c: 93: pillBox[8] = 'y';
  3992                           
  3993                           ;operation.c: 92: pillBox[12] = 'y';
  3994  001214  0E33               	movlw	51
  3995  001216  184D               	xorwf	_frequency_data,w,c
  3996  001218  A4D8               	btfss	status,2,c
  3997  00121A  D094               	goto	l460
  3998  00121C  D060               	goto	L7
  3999  00121E                     l434:
  4000                           
  4001                           ;operation.c: 103: else if(repetition_data == '2'){
  4002  00121E  0E32               	movlw	50
  4003  001220  184E               	xorwf	_repetition_data,w,c
  4004  001222  A4D8               	btfss	status,2,c
  4005  001224  D01A               	goto	l441
  4006                           
  4007                           ;operation.c: 104: if(frequency_data == '1'){
  4008  001226  0E31               	movlw	49
  4009  001228  184D               	xorwf	_frequency_data,w,c
  4010  00122A  B4D8               	btfsc	status,2,c
  4011  00122C  D02C               	goto	L8
  4012                           
  4013                           ;operation.c: 112: else if(frequency_data == '2'){
  4014                           
  4015                           ;operation.c: 111: pillBox[13] = 'y'; }
  4016                           
  4017                           ;operation.c: 110: pillBox[11] = 'y';
  4018                           
  4019                           ;operation.c: 109: pillBox[9] = 'y';
  4020                           
  4021                           ;operation.c: 108: pillBox[7] = 'y';
  4022                           
  4023                           ;operation.c: 107: pillBox[5] = 'y';
  4024                           
  4025                           ;operation.c: 106: pillBox[3] = 'y';
  4026                           
  4027                           ;operation.c: 105: pillBox[1] = 'y';
  4028  00122E  0E32               	movlw	50
  4029  001230  184D               	xorwf	_frequency_data,w,c
  4030  001232  A4D8               	btfss	status,2,c
  4031  001234  D007               	goto	l444
  4032                           
  4033                           ;operation.c: 113: pillBox[13] = 'y';
  4034  001236  0E79               	movlw	121
  4035  001238  6E33               	movwf	_pillBox+13,c
  4036                           
  4037                           ;operation.c: 114: pillBox[9] = 'y';
  4038  00123A  0E79               	movlw	121
  4039  00123C  6E2F               	movwf	_pillBox+9,c
  4040                           
  4041                           ;operation.c: 115: pillBox[5] = 'y';
  4042  00123E  0E79               	movlw	121
  4043  001240  6E2B               	movwf	_pillBox+5,c
  4044  001242  D073               	goto	L9
  4045  001244                     l444:
  4046                           
  4047                           ;operation.c: 118: else if(frequency_data == '3'){
  4048  001244  0E33               	movlw	51
  4049  001246  184D               	xorwf	_frequency_data,w,c
  4050  001248  A4D8               	btfss	status,2,c
  4051  00124A  D07C               	goto	l460
  4052                           
  4053                           ;operation.c: 119: pillBox[11] = 'y';
  4054  00124C  0E79               	movlw	121
  4055  00124E  6E31               	movwf	_pillBox+11,c
  4056                           
  4057                           ;operation.c: 120: pillBox[7] = 'y';
  4058  001250  0E79               	movlw	121
  4059  001252  6E2D               	movwf	_pillBox+7,c
  4060                           
  4061                           ;operation.c: 121: pillBox[3] = 'y';
  4062  001254  0E79               	movlw	121
  4063  001256  6E29               	movwf	_pillBox+3,c
  4064                           
  4065                           ;operation.c: 122: }
  4066                           ;operation.c: 123: }
  4067  001258  D075               	goto	l460
  4068  00125A                     l441:
  4069                           
  4070                           ;operation.c: 125: else if(repetition_data == '3'){
  4071  00125A  0E33               	movlw	51
  4072  00125C  184E               	xorwf	_repetition_data,w,c
  4073  00125E  A4D8               	btfss	status,2,c
  4074  001260  D043               	goto	l448
  4075                           
  4076                           ;operation.c: 126: if(frequency_data == '1'){
  4077  001262  0E31               	movlw	49
  4078  001264  184D               	xorwf	_frequency_data,w,c
  4079  001266  A4D8               	btfss	status,2,c
  4080  001268  D01D               	goto	l449
  4081                           
  4082                           ;operation.c: 127: pillBox[0] = 'y';
  4083  00126A  0E79               	movlw	121
  4084  00126C  6E26               	movwf	_pillBox,c
  4085                           
  4086                           ;operation.c: 128: pillBox[2] = 'y';
  4087  00126E  0E79               	movlw	121
  4088  001270  6E28               	movwf	_pillBox+2,c
  4089                           
  4090                           ;operation.c: 129: pillBox[4] = 'y';
  4091  001272  0E79               	movlw	121
  4092  001274  6E2A               	movwf	_pillBox+4,c
  4093                           
  4094                           ;operation.c: 130: pillBox[6] = 'y';
  4095  001276  0E79               	movlw	121
  4096  001278  6E2C               	movwf	_pillBox+6,c
  4097                           
  4098                           ;operation.c: 131: pillBox[8] = 'y';
  4099  00127A  0E79               	movlw	121
  4100  00127C  6E2E               	movwf	_pillBox+8,c
  4101                           
  4102                           ;operation.c: 132: pillBox[10] = 'y';
  4103  00127E  0E79               	movlw	121
  4104  001280  6E30               	movwf	_pillBox+10,c
  4105                           
  4106                           ;operation.c: 133: pillBox[12] = 'y';
  4107  001282  0E79               	movlw	121
  4108  001284  6E32               	movwf	_pillBox+12,c
  4109  001286                     L8:
  4110                           
  4111                           ;operation.c: 134: pillBox[1] = 'y';
  4112  001286  0E79               	movlw	121
  4113  001288  6E27               	movwf	_pillBox+1,c
  4114                           
  4115                           ;operation.c: 135: pillBox[3] = 'y';
  4116  00128A  0E79               	movlw	121
  4117  00128C  6E29               	movwf	_pillBox+3,c
  4118                           
  4119                           ;operation.c: 136: pillBox[5] = 'y';
  4120  00128E  0E79               	movlw	121
  4121  001290  6E2B               	movwf	_pillBox+5,c
  4122                           
  4123                           ;operation.c: 137: pillBox[7] = 'y';
  4124  001292  0E79               	movlw	121
  4125  001294  6E2D               	movwf	_pillBox+7,c
  4126                           
  4127                           ;operation.c: 138: pillBox[9] = 'y';
  4128  001296  0E79               	movlw	121
  4129  001298  6E2F               	movwf	_pillBox+9,c
  4130                           
  4131                           ;operation.c: 139: pillBox[11] = 'y';
  4132  00129A  0E79               	movlw	121
  4133  00129C  6E31               	movwf	_pillBox+11,c
  4134                           
  4135                           ;operation.c: 140: pillBox[13] = 'y'; }
  4136  00129E  0E79               	movlw	121
  4137  0012A0  6E33               	movwf	_pillBox+13,c
  4138  0012A2  D050               	goto	l460
  4139  0012A4                     l449:
  4140                           
  4141                           ;operation.c: 141: else if(frequency_data == '2'){
  4142  0012A4  0E32               	movlw	50
  4143  0012A6  184D               	xorwf	_frequency_data,w,c
  4144  0012A8  A4D8               	btfss	status,2,c
  4145  0012AA  D00F               	goto	l451
  4146                           
  4147                           ;operation.c: 142: pillBox[13] = 'y';
  4148  0012AC  0E79               	movlw	121
  4149  0012AE  6E33               	movwf	_pillBox+13,c
  4150                           
  4151                           ;operation.c: 143: pillBox[9] = 'y';
  4152  0012B0  0E79               	movlw	121
  4153  0012B2  6E2F               	movwf	_pillBox+9,c
  4154                           
  4155                           ;operation.c: 144: pillBox[5] = 'y';
  4156  0012B4  0E79               	movlw	121
  4157  0012B6  6E2B               	movwf	_pillBox+5,c
  4158                           
  4159                           ;operation.c: 145: pillBox[1] = 'y';
  4160  0012B8  0E79               	movlw	121
  4161  0012BA  6E27               	movwf	_pillBox+1,c
  4162  0012BC                     L6:
  4163                           
  4164                           ;operation.c: 146: pillBox[12] = 'y';
  4165  0012BC  0E79               	movlw	121
  4166  0012BE  6E32               	movwf	_pillBox+12,c
  4167                           
  4168                           ;operation.c: 147: pillBox[8] = 'y';
  4169  0012C0  0E79               	movlw	121
  4170  0012C2  6E2E               	movwf	_pillBox+8,c
  4171                           
  4172                           ;operation.c: 148: pillBox[4] = 'y';
  4173  0012C4  0E79               	movlw	121
  4174  0012C6  6E2A               	movwf	_pillBox+4,c
  4175  0012C8  D023               	goto	L10
  4176  0012CA                     l451:
  4177                           
  4178                           ;operation.c: 151: else if(frequency_data == '3'){
  4179  0012CA  0E33               	movlw	51
  4180  0012CC  184D               	xorwf	_frequency_data,w,c
  4181  0012CE  A4D8               	btfss	status,2,c
  4182  0012D0  D039               	goto	l460
  4183                           
  4184                           ;operation.c: 152: pillBox[11] = 'y';
  4185  0012D2  0E79               	movlw	121
  4186  0012D4  6E31               	movwf	_pillBox+11,c
  4187                           
  4188                           ;operation.c: 153: pillBox[7] = 'y';
  4189  0012D6  0E79               	movlw	121
  4190  0012D8  6E2D               	movwf	_pillBox+7,c
  4191                           
  4192                           ;operation.c: 154: pillBox[3] = 'y';
  4193  0012DA  0E79               	movlw	121
  4194  0012DC  6E29               	movwf	_pillBox+3,c
  4195  0012DE                     L7:
  4196                           
  4197                           ;operation.c: 155: pillBox[10] = 'y';
  4198  0012DE  0E79               	movlw	121
  4199  0012E0  6E30               	movwf	_pillBox+10,c
  4200                           
  4201                           ;operation.c: 156: pillBox[6] = 'y';
  4202  0012E2  0E79               	movlw	121
  4203  0012E4  6E2C               	movwf	_pillBox+6,c
  4204  0012E6  D02C               	goto	L11
  4205  0012E8                     l448:
  4206                           
  4207                           ;operation.c: 160: else if(repetition_data == '4') {
  4208  0012E8  0E34               	movlw	52
  4209  0012EA  184E               	xorwf	_repetition_data,w,c
  4210  0012EC  A4D8               	btfss	status,2,c
  4211  0012EE  D02A               	goto	l460
  4212                           
  4213                           ;operation.c: 161: if(frequency_data == '1'){
  4214  0012F0  0E31               	movlw	49
  4215  0012F2  184D               	xorwf	_frequency_data,w,c
  4216  0012F4  A4D8               	btfss	status,2,c
  4217  0012F6  D00F               	goto	l456
  4218                           
  4219                           ;operation.c: 162: pillBox[12] = 'y';
  4220  0012F8  0E79               	movlw	121
  4221  0012FA  6E32               	movwf	_pillBox+12,c
  4222                           
  4223                           ;operation.c: 163: pillBox[11] = 'y';
  4224  0012FC  0E79               	movlw	121
  4225  0012FE  6E31               	movwf	_pillBox+11,c
  4226                           
  4227                           ;operation.c: 164: pillBox[8] = 'y';
  4228  001300  0E79               	movlw	121
  4229  001302  6E2E               	movwf	_pillBox+8,c
  4230                           
  4231                           ;operation.c: 165: pillBox[7] = 'y';
  4232  001304  0E79               	movlw	121
  4233  001306  6E2D               	movwf	_pillBox+7,c
  4234                           
  4235                           ;operation.c: 166: pillBox[4] = 'y';
  4236  001308  0E79               	movlw	121
  4237  00130A  6E2A               	movwf	_pillBox+4,c
  4238                           
  4239                           ;operation.c: 167: pillBox[3] = 'y';
  4240  00130C  0E79               	movlw	121
  4241  00130E  6E29               	movwf	_pillBox+3,c
  4242  001310                     L10:
  4243                           
  4244                           ;operation.c: 168: pillBox[0] = 'y';
  4245  001310  0E79               	movlw	121
  4246  001312  6E26               	movwf	_pillBox,c
  4247                           
  4248                           ;operation.c: 169: }
  4249  001314  D017               	goto	l460
  4250  001316                     l456:
  4251                           
  4252                           ;operation.c: 170: else if(frequency_data == '2'){
  4253  001316  0E32               	movlw	50
  4254  001318  184D               	xorwf	_frequency_data,w,c
  4255  00131A  A4D8               	btfss	status,2,c
  4256  00131C  D009               	goto	l458
  4257                           
  4258                           ;operation.c: 171: pillBox[12] = 'y';
  4259  00131E  0E79               	movlw	121
  4260  001320  6E32               	movwf	_pillBox+12,c
  4261                           
  4262                           ;operation.c: 172: pillBox[9] = 'y';
  4263  001322  0E79               	movlw	121
  4264  001324  6E2F               	movwf	_pillBox+9,c
  4265                           
  4266                           ;operation.c: 173: pillBox[4] = 'y';
  4267  001326  0E79               	movlw	121
  4268  001328  6E2A               	movwf	_pillBox+4,c
  4269  00132A                     L9:
  4270                           
  4271                           ;operation.c: 174: pillBox[1] = 'y';
  4272  00132A  0E79               	movlw	121
  4273  00132C  6E27               	movwf	_pillBox+1,c
  4274                           
  4275                           ;operation.c: 175: }
  4276  00132E  D00A               	goto	l460
  4277  001330                     l458:
  4278                           
  4279                           ;operation.c: 176: else if(frequency_data == '3'){
  4280  001330  0E33               	movlw	51
  4281  001332  184D               	xorwf	_frequency_data,w,c
  4282  001334  A4D8               	btfss	status,2,c
  4283  001336  D006               	goto	l460
  4284                           
  4285                           ;operation.c: 177: pillBox[10] = 'y';
  4286  001338  0E79               	movlw	121
  4287  00133A  6E30               	movwf	_pillBox+10,c
  4288                           
  4289                           ;operation.c: 178: pillBox[7] = 'y';
  4290  00133C  0E79               	movlw	121
  4291  00133E  6E2D               	movwf	_pillBox+7,c
  4292  001340                     L11:
  4293                           
  4294                           ;operation.c: 179: pillBox[2] = 'y';
  4295  001340  0E79               	movlw	121
  4296  001342  6E28               	movwf	_pillBox+2,c
  4297  001344                     l460:
  4298                           
  4299                           ;operation.c: 185: if(repetition_data == '1'){
  4300                           
  4301                           ;operation.c: 180: }
  4302                           ;operation.c: 181: }
  4303                           ;operation.c: 184: case '2':
  4304  001344  0E31               	movlw	49
  4305  001346  184E               	xorwf	_repetition_data,w,c
  4306  001348  A4D8               	btfss	status,2,c
  4307  00134A  D02B               	goto	l462
  4308                           
  4309                           ;operation.c: 186: if(frequency_data == '1'){
  4310  00134C  0E31               	movlw	49
  4311  00134E  184D               	xorwf	_frequency_data,w,c
  4312  001350  A4D8               	btfss	status,2,c
  4313  001352  D00F               	goto	l463
  4314                           
  4315                           ;operation.c: 187: pillBox[0] = 'y';
  4316  001354  0E79               	movlw	121
  4317  001356  6E26               	movwf	_pillBox,c
  4318                           
  4319                           ;operation.c: 188: pillBox[2] = 'y';
  4320  001358  0E79               	movlw	121
  4321  00135A  6E28               	movwf	_pillBox+2,c
  4322                           
  4323                           ;operation.c: 189: pillBox[4] = 'y';
  4324  00135C  0E79               	movlw	121
  4325  00135E  6E2A               	movwf	_pillBox+4,c
  4326                           
  4327                           ;operation.c: 190: pillBox[6] = 'y';
  4328  001360  0E79               	movlw	121
  4329  001362  6E2C               	movwf	_pillBox+6,c
  4330                           
  4331                           ;operation.c: 191: pillBox[8] = 'y';
  4332  001364  0E79               	movlw	121
  4333  001366  6E2E               	movwf	_pillBox+8,c
  4334                           
  4335                           ;operation.c: 192: pillBox[10] = 'y';
  4336  001368  0E79               	movlw	121
  4337  00136A  6E30               	movwf	_pillBox+10,c
  4338                           
  4339                           ;operation.c: 193: pillBox[12] = 'y'; }
  4340  00136C  0E79               	movlw	121
  4341  00136E  6E32               	movwf	_pillBox+12,c
  4342  001370  0012               	return	
  4343  001372                     l463:
  4344                           
  4345                           ;operation.c: 194: else if(frequency_data == '2'){
  4346  001372  0E32               	movlw	50
  4347  001374  184D               	xorwf	_frequency_data,w,c
  4348  001376  A4D8               	btfss	status,2,c
  4349  001378  D009               	goto	l465
  4350                           
  4351                           ;operation.c: 195: pillBox[12] = 'y';
  4352  00137A  0E79               	movlw	121
  4353  00137C  6E32               	movwf	_pillBox+12,c
  4354                           
  4355                           ;operation.c: 196: pillBox[8] = 'y';
  4356  00137E  0E79               	movlw	121
  4357  001380  6E2E               	movwf	_pillBox+8,c
  4358                           
  4359                           ;operation.c: 197: pillBox[4] = 'y';
  4360  001382  0E79               	movlw	121
  4361  001384  6E2A               	movwf	_pillBox+4,c
  4362                           
  4363                           ;operation.c: 198: pillBox[0] = 'y';
  4364  001386  0E79               	movlw	121
  4365  001388  6E26               	movwf	_pillBox,c
  4366                           
  4367                           ;operation.c: 199: }else if(frequency_data == '3'){
  4368  00138A  0012               	return	
  4369  00138C                     l465:
  4370  00138C  0E33               	movlw	51
  4371  00138E  184D               	xorwf	_frequency_data,w,c
  4372  001390  A4D8               	btfss	status,2,c
  4373  001392  0012               	return	
  4374                           
  4375                           ;operation.c: 200: pillBox[10] = 'y';
  4376  001394  0E79               	movlw	121
  4377  001396  6E30               	movwf	_pillBox+10,c
  4378                           
  4379                           ;operation.c: 201: pillBox[6] = 'y';
  4380  001398  0E79               	movlw	121
  4381  00139A  6E2C               	movwf	_pillBox+6,c
  4382                           
  4383                           ;operation.c: 202: pillBox[2] = 'y';
  4384  00139C  0E79               	movlw	121
  4385  00139E  6E28               	movwf	_pillBox+2,c
  4386                           
  4387                           ;operation.c: 203: }
  4388                           ;operation.c: 204: }
  4389  0013A0  0012               	return	
  4390  0013A2                     l462:
  4391                           
  4392                           ;operation.c: 206: else if(repetition_data == '2'){
  4393  0013A2  0E32               	movlw	50
  4394  0013A4  184E               	xorwf	_repetition_data,w,c
  4395  0013A6  A4D8               	btfss	status,2,c
  4396  0013A8  D02B               	goto	l469
  4397                           
  4398                           ;operation.c: 207: if(frequency_data == '1'){
  4399  0013AA  0E31               	movlw	49
  4400  0013AC  184D               	xorwf	_frequency_data,w,c
  4401  0013AE  A4D8               	btfss	status,2,c
  4402  0013B0  D00F               	goto	l470
  4403                           
  4404                           ;operation.c: 208: pillBox[1] = 'y';
  4405  0013B2  0E79               	movlw	121
  4406  0013B4  6E27               	movwf	_pillBox+1,c
  4407                           
  4408                           ;operation.c: 209: pillBox[3] = 'y';
  4409  0013B6  0E79               	movlw	121
  4410  0013B8  6E29               	movwf	_pillBox+3,c
  4411                           
  4412                           ;operation.c: 210: pillBox[5] = 'y';
  4413  0013BA  0E79               	movlw	121
  4414  0013BC  6E2B               	movwf	_pillBox+5,c
  4415                           
  4416                           ;operation.c: 211: pillBox[7] = 'y';
  4417  0013BE  0E79               	movlw	121
  4418  0013C0  6E2D               	movwf	_pillBox+7,c
  4419                           
  4420                           ;operation.c: 212: pillBox[9] = 'y';
  4421  0013C2  0E79               	movlw	121
  4422  0013C4  6E2F               	movwf	_pillBox+9,c
  4423                           
  4424                           ;operation.c: 213: pillBox[11] = 'y';
  4425  0013C6  0E79               	movlw	121
  4426  0013C8  6E31               	movwf	_pillBox+11,c
  4427                           
  4428                           ;operation.c: 214: pillBox[13] = 'y'; }
  4429  0013CA  0E79               	movlw	121
  4430  0013CC  6E33               	movwf	_pillBox+13,c
  4431  0013CE  0012               	return	
  4432  0013D0                     l470:
  4433                           
  4434                           ;operation.c: 215: else if(frequency_data == '2'){
  4435  0013D0  0E32               	movlw	50
  4436  0013D2  184D               	xorwf	_frequency_data,w,c
  4437  0013D4  A4D8               	btfss	status,2,c
  4438  0013D6  D009               	goto	l472
  4439                           
  4440                           ;operation.c: 216: pillBox[13] = 'y';
  4441  0013D8  0E79               	movlw	121
  4442  0013DA  6E33               	movwf	_pillBox+13,c
  4443                           
  4444                           ;operation.c: 217: pillBox[9] = 'y';
  4445  0013DC  0E79               	movlw	121
  4446  0013DE  6E2F               	movwf	_pillBox+9,c
  4447                           
  4448                           ;operation.c: 218: pillBox[5] = 'y';
  4449  0013E0  0E79               	movlw	121
  4450  0013E2  6E2B               	movwf	_pillBox+5,c
  4451                           
  4452                           ;operation.c: 219: pillBox[1] = 'y';
  4453  0013E4  0E79               	movlw	121
  4454  0013E6  6E27               	movwf	_pillBox+1,c
  4455                           
  4456                           ;operation.c: 220: }
  4457  0013E8  0012               	return	
  4458  0013EA                     l472:
  4459                           
  4460                           ;operation.c: 221: else if(frequency_data == '3'){
  4461  0013EA  0E33               	movlw	51
  4462  0013EC  184D               	xorwf	_frequency_data,w,c
  4463  0013EE  A4D8               	btfss	status,2,c
  4464  0013F0  0012               	return	
  4465                           
  4466                           ;operation.c: 222: pillBox[11] = 'y';
  4467  0013F2  0E79               	movlw	121
  4468  0013F4  6E31               	movwf	_pillBox+11,c
  4469                           
  4470                           ;operation.c: 223: pillBox[7] = 'y';
  4471  0013F6  0E79               	movlw	121
  4472  0013F8  6E2D               	movwf	_pillBox+7,c
  4473                           
  4474                           ;operation.c: 224: pillBox[3] = 'y';
  4475  0013FA  0E79               	movlw	121
  4476  0013FC  6E29               	movwf	_pillBox+3,c
  4477                           
  4478                           ;operation.c: 225: }
  4479                           ;operation.c: 226: }
  4480  0013FE  0012               	return	
  4481  001400                     l469:
  4482                           
  4483                           ;operation.c: 228: else if(repetition_data == '3'){
  4484  001400  0E33               	movlw	51
  4485  001402  184E               	xorwf	_repetition_data,w,c
  4486  001404  A4D8               	btfss	status,2,c
  4487  001406  D047               	goto	l476
  4488                           
  4489                           ;operation.c: 229: if(frequency_data == '1'){
  4490  001408  0E31               	movlw	49
  4491  00140A  184D               	xorwf	_frequency_data,w,c
  4492  00140C  A4D8               	btfss	status,2,c
  4493  00140E  D01D               	goto	l477
  4494                           
  4495                           ;operation.c: 230: pillBox[0] = 'y';
  4496  001410  0E79               	movlw	121
  4497  001412  6E26               	movwf	_pillBox,c
  4498                           
  4499                           ;operation.c: 231: pillBox[2] = 'y';
  4500  001414  0E79               	movlw	121
  4501  001416  6E28               	movwf	_pillBox+2,c
  4502                           
  4503                           ;operation.c: 232: pillBox[4] = 'y';
  4504  001418  0E79               	movlw	121
  4505  00141A  6E2A               	movwf	_pillBox+4,c
  4506                           
  4507                           ;operation.c: 233: pillBox[6] = 'y';
  4508  00141C  0E79               	movlw	121
  4509  00141E  6E2C               	movwf	_pillBox+6,c
  4510                           
  4511                           ;operation.c: 234: pillBox[8] = 'y';
  4512  001420  0E79               	movlw	121
  4513  001422  6E2E               	movwf	_pillBox+8,c
  4514                           
  4515                           ;operation.c: 235: pillBox[10] = 'y';
  4516  001424  0E79               	movlw	121
  4517  001426  6E30               	movwf	_pillBox+10,c
  4518                           
  4519                           ;operation.c: 236: pillBox[12] = 'y';
  4520  001428  0E79               	movlw	121
  4521  00142A  6E32               	movwf	_pillBox+12,c
  4522                           
  4523                           ;operation.c: 237: pillBox[1] = 'y';
  4524  00142C  0E79               	movlw	121
  4525  00142E  6E27               	movwf	_pillBox+1,c
  4526                           
  4527                           ;operation.c: 238: pillBox[3] = 'y';
  4528  001430  0E79               	movlw	121
  4529  001432  6E29               	movwf	_pillBox+3,c
  4530                           
  4531                           ;operation.c: 239: pillBox[5] = 'y';
  4532  001434  0E79               	movlw	121
  4533  001436  6E2B               	movwf	_pillBox+5,c
  4534                           
  4535                           ;operation.c: 240: pillBox[7] = 'y';
  4536  001438  0E79               	movlw	121
  4537  00143A  6E2D               	movwf	_pillBox+7,c
  4538                           
  4539                           ;operation.c: 241: pillBox[9] = 'y';
  4540  00143C  0E79               	movlw	121
  4541  00143E  6E2F               	movwf	_pillBox+9,c
  4542                           
  4543                           ;operation.c: 242: pillBox[11] = 'y';
  4544  001440  0E79               	movlw	121
  4545  001442  6E31               	movwf	_pillBox+11,c
  4546                           
  4547                           ;operation.c: 243: pillBox[13] = 'y'; }
  4548  001444  0E79               	movlw	121
  4549  001446  6E33               	movwf	_pillBox+13,c
  4550  001448  0012               	return	
  4551  00144A                     l477:
  4552                           
  4553                           ;operation.c: 244: else if(frequency_data == '2'){
  4554  00144A  0E32               	movlw	50
  4555  00144C  184D               	xorwf	_frequency_data,w,c
  4556  00144E  A4D8               	btfss	status,2,c
  4557  001450  D011               	goto	l479
  4558                           
  4559                           ;operation.c: 245: pillBox[13] = 'y';
  4560  001452  0E79               	movlw	121
  4561  001454  6E33               	movwf	_pillBox+13,c
  4562                           
  4563                           ;operation.c: 246: pillBox[9] = 'y';
  4564  001456  0E79               	movlw	121
  4565  001458  6E2F               	movwf	_pillBox+9,c
  4566                           
  4567                           ;operation.c: 247: pillBox[5] = 'y';
  4568  00145A  0E79               	movlw	121
  4569  00145C  6E2B               	movwf	_pillBox+5,c
  4570                           
  4571                           ;operation.c: 248: pillBox[1] = 'y';
  4572  00145E  0E79               	movlw	121
  4573  001460  6E27               	movwf	_pillBox+1,c
  4574                           
  4575                           ;operation.c: 249: pillBox[12] = 'y';
  4576  001462  0E79               	movlw	121
  4577  001464  6E32               	movwf	_pillBox+12,c
  4578                           
  4579                           ;operation.c: 250: pillBox[8] = 'y';
  4580  001466  0E79               	movlw	121
  4581  001468  6E2E               	movwf	_pillBox+8,c
  4582                           
  4583                           ;operation.c: 251: pillBox[4] = 'y';
  4584  00146A  0E79               	movlw	121
  4585  00146C  6E2A               	movwf	_pillBox+4,c
  4586                           
  4587                           ;operation.c: 252: pillBox[0] = 'y';
  4588  00146E  0E79               	movlw	121
  4589  001470  6E26               	movwf	_pillBox,c
  4590                           
  4591                           ;operation.c: 253: }
  4592  001472  0012               	return	
  4593  001474                     l479:
  4594                           
  4595                           ;operation.c: 254: else if(frequency_data == '3'){
  4596  001474  0E33               	movlw	51
  4597  001476  184D               	xorwf	_frequency_data,w,c
  4598  001478  A4D8               	btfss	status,2,c
  4599  00147A  0012               	return	
  4600                           
  4601                           ;operation.c: 255: pillBox[11] = 'y';
  4602  00147C  0E79               	movlw	121
  4603  00147E  6E31               	movwf	_pillBox+11,c
  4604                           
  4605                           ;operation.c: 256: pillBox[7] = 'y';
  4606  001480  0E79               	movlw	121
  4607  001482  6E2D               	movwf	_pillBox+7,c
  4608                           
  4609                           ;operation.c: 257: pillBox[3] = 'y';
  4610  001484  0E79               	movlw	121
  4611  001486  6E29               	movwf	_pillBox+3,c
  4612                           
  4613                           ;operation.c: 258: pillBox[10] = 'y';
  4614  001488  0E79               	movlw	121
  4615  00148A  6E30               	movwf	_pillBox+10,c
  4616                           
  4617                           ;operation.c: 259: pillBox[6] = 'y';
  4618  00148C  0E79               	movlw	121
  4619  00148E  6E2C               	movwf	_pillBox+6,c
  4620                           
  4621                           ;operation.c: 260: pillBox[2] = 'y';
  4622  001490  0E79               	movlw	121
  4623  001492  6E28               	movwf	_pillBox+2,c
  4624                           
  4625                           ;operation.c: 261: }
  4626                           ;operation.c: 262: }
  4627  001494  0012               	return	
  4628  001496                     l476:
  4629                           
  4630                           ;operation.c: 263: else if(repetition_data == '4') {
  4631  001496  0E34               	movlw	52
  4632  001498  184E               	xorwf	_repetition_data,w,c
  4633  00149A  A4D8               	btfss	status,2,c
  4634  00149C  0012               	return	
  4635                           
  4636                           ;operation.c: 264: if(frequency_data == '1'){
  4637  00149E  0E31               	movlw	49
  4638  0014A0  184D               	xorwf	_frequency_data,w,c
  4639  0014A2  A4D8               	btfss	status,2,c
  4640  0014A4  D00F               	goto	l484
  4641                           
  4642                           ;operation.c: 265: pillBox[12] = 'y';
  4643  0014A6  0E79               	movlw	121
  4644  0014A8  6E32               	movwf	_pillBox+12,c
  4645                           
  4646                           ;operation.c: 266: pillBox[11] = 'y';
  4647  0014AA  0E79               	movlw	121
  4648  0014AC  6E31               	movwf	_pillBox+11,c
  4649                           
  4650                           ;operation.c: 267: pillBox[8] = 'y';
  4651  0014AE  0E79               	movlw	121
  4652  0014B0  6E2E               	movwf	_pillBox+8,c
  4653                           
  4654                           ;operation.c: 268: pillBox[7] = 'y';
  4655  0014B2  0E79               	movlw	121
  4656  0014B4  6E2D               	movwf	_pillBox+7,c
  4657                           
  4658                           ;operation.c: 269: pillBox[4] = 'y';
  4659  0014B6  0E79               	movlw	121
  4660  0014B8  6E2A               	movwf	_pillBox+4,c
  4661                           
  4662                           ;operation.c: 270: pillBox[3] = 'y';
  4663  0014BA  0E79               	movlw	121
  4664  0014BC  6E29               	movwf	_pillBox+3,c
  4665                           
  4666                           ;operation.c: 271: pillBox[0] = 'y';
  4667  0014BE  0E79               	movlw	121
  4668  0014C0  6E26               	movwf	_pillBox,c
  4669                           
  4670                           ;operation.c: 272: }
  4671  0014C2  0012               	return	
  4672  0014C4                     l484:
  4673                           
  4674                           ;operation.c: 273: else if(frequency_data == '2'){
  4675  0014C4  0E32               	movlw	50
  4676  0014C6  184D               	xorwf	_frequency_data,w,c
  4677  0014C8  A4D8               	btfss	status,2,c
  4678  0014CA  D009               	goto	l486
  4679                           
  4680                           ;operation.c: 274: pillBox[13] = 'y';
  4681  0014CC  0E79               	movlw	121
  4682  0014CE  6E33               	movwf	_pillBox+13,c
  4683                           
  4684                           ;operation.c: 275: pillBox[8] = 'y';
  4685  0014D0  0E79               	movlw	121
  4686  0014D2  6E2E               	movwf	_pillBox+8,c
  4687                           
  4688                           ;operation.c: 276: pillBox[5] = 'y';
  4689  0014D4  0E79               	movlw	121
  4690  0014D6  6E2B               	movwf	_pillBox+5,c
  4691                           
  4692                           ;operation.c: 277: pillBox[0] = 'y';
  4693  0014D8  0E79               	movlw	121
  4694  0014DA  6E26               	movwf	_pillBox,c
  4695                           
  4696                           ;operation.c: 278: }
  4697  0014DC  0012               	return	
  4698  0014DE                     l486:
  4699                           
  4700                           ;operation.c: 279: else if(frequency_data == '3'){
  4701  0014DE  0E33               	movlw	51
  4702  0014E0  184D               	xorwf	_frequency_data,w,c
  4703  0014E2  A4D8               	btfss	status,2,c
  4704  0014E4  0012               	return	
  4705                           
  4706                           ;operation.c: 280: pillBox[10] = 'y';
  4707  0014E6  0E79               	movlw	121
  4708  0014E8  6E30               	movwf	_pillBox+10,c
  4709                           
  4710                           ;operation.c: 281: pillBox[7] = 'y';
  4711  0014EA  0E79               	movlw	121
  4712  0014EC  6E2D               	movwf	_pillBox+7,c
  4713                           
  4714                           ;operation.c: 282: pillBox[2] = 'y';
  4715  0014EE  0E79               	movlw	121
  4716  0014F0  6E28               	movwf	_pillBox+2,c
  4717                           
  4718                           ;operation.c: 283: }
  4719                           ;operation.c: 288: }
  4720                           ;operation.c: 290: }
  4721  0014F2  0012               	return	
  4722  0014F4                     l432:
  4723  0014F4  5042               	movf	_modeOfOperation,w,c
  4724                           
  4725                           ; Switch size 1, requested type "space"
  4726                           ; Number of cases is 2, Range of values is 49 to 50
  4727                           ; switch strategies available:
  4728                           ; Name         Instructions Cycles
  4729                           ; simple_byte            7     4 (average)
  4730                           ;	Chosen strategy is simple_byte
  4731  0014F6  0A31               	xorlw	49	; case 49
  4732  0014F8  B4D8               	btfsc	status,2,c
  4733  0014FA  D671               	goto	l433
  4734  0014FC  0A03               	xorlw	3	; case 50
  4735  0014FE  A4D8               	btfss	status,2,c
  4736  001500  0012               	return	
  4737  001502  D720               	goto	l460
  4738  001504                     __end_of_placeMarkers:
  4739                           	opt stack 0
  4740                           tblptru	equ	0xFF8
  4741                           tblptrh	equ	0xFF7
  4742                           tblptrl	equ	0xFF6
  4743                           tablat	equ	0xFF5
  4744                           intcon	equ	0xFF2
  4745                           intcon3	equ	0xFF0
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1l	equ	0xFE1
  4750                           postinc2	equ	0xFDE
  4751                           fsr2h	equ	0xFDA
  4752                           fsr2l	equ	0xFD9
  4753                           status	equ	0xFD8
  4754                           
  4755 ;; *************** function _findMode *****************
  4756 ;; Defined at:
  4757 ;;		line 23 in file "operation.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  flag            2    5[BANK0 ] int 
  4762 ;;  input           2    3[BANK0 ] int 
  4763 ;;  arr             1    7[BANK0 ] unsigned char [1]
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;Total ram usage:        7 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    6
  4780 ;; This function calls:
  4781 ;;		_uartTransmitBlocking
  4782 ;; This function is called by:
  4783 ;;		_main
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text9
  4788  001C56                     __ptext9:
  4789                           	opt stack 0
  4790  001C56                     _findMode:
  4791                           	opt stack 24
  4792                           
  4793                           ;operation.c: 27: unsigned char arr[1] = {'Z'};
  4794                           
  4795                           ;incstack = 0
  4796  001C56  C03D  F087         	movff	findMode@F3044,findMode@arr
  4797                           
  4798                           ;operation.c: 28: _delay((unsigned long)((1000)*(40000000/4000.0)));
  4799  001C5A  0E33               	movlw	51
  4800  001C5C  0100               	movlb	0	; () banked
  4801  001C5E  6F82               	movwf	(??_findMode+1)& (0+255),b
  4802  001C60  0EBB               	movlw	187
  4803  001C62  6F81               	movwf	??_findMode& (0+255),b
  4804  001C64  0EDF               	movlw	223
  4805  001C66                     u5637:
  4806  001C66  2EE8               	decfsz	wreg,f,c
  4807  001C68  D7FE               	bra	u5637
  4808  001C6A  2F81               	decfsz	??_findMode& (0+255),f,b
  4809  001C6C  D7FC               	bra	u5637
  4810  001C6E  2F82               	decfsz	(??_findMode+1)& (0+255),f,b
  4811  001C70  D7FA               	bra	u5637
  4812  001C72  D000               	nop2	
  4813                           
  4814                           ;operation.c: 29: uartTransmitBlocking(arr, 1);
  4815  001C74  0E87               	movlw	low findMode@arr
  4816  001C76  6E22               	movwf	uartTransmitBlocking@data,c
  4817  001C78  0E00               	movlw	high findMode@arr
  4818  001C7A  6E23               	movwf	uartTransmitBlocking@data+1,c
  4819  001C7C  0E01               	movlw	1
  4820  001C7E  6E24               	movwf	uartTransmitBlocking@numBytes,c
  4821  001C80  EC19  F00D         	call	_uartTransmitBlocking	;wreg free
  4822                           
  4823                           ;operation.c: 30: LATCbits.LATC6 = 0;
  4824  001C84  9C8B               	bcf	3979,6,c	;volatile
  4825                           
  4826                           ;operation.c: 31: int input = PORTCbits.RC6;
  4827  001C86  AC82               	btfss	3970,6,c	;volatile
  4828  001C88  D004               	goto	u4040
  4829  001C8A  0100               	movlb	0	; () banked
  4830  001C8C  6B81               	clrf	??_findMode& (0+255),b
  4831  001C8E  2B81               	incf	??_findMode& (0+255),f,b
  4832  001C90  D002               	goto	u4048
  4833  001C92                     u4040:
  4834  001C92  0100               	movlb	0	; () banked
  4835  001C94  6B81               	clrf	??_findMode& (0+255),b
  4836  001C96                     u4048:
  4837  001C96  5181               	movf	??_findMode& (0+255),w,b
  4838  001C98  6F83               	movwf	findMode@input& (0+255),b
  4839  001C9A  6B84               	clrf	(findMode@input+1)& (0+255),b
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;operation.c: 32: int flag = 1;
  4843  001C9C  0E00               	movlw	0
  4844  001C9E  6F86               	movwf	(findMode@flag+1)& (0+255),b
  4845  001CA0  0E01               	movlw	1
  4846  001CA2  6F85               	movwf	findMode@flag& (0+255),b
  4847                           
  4848                           ;operation.c: 33: while(flag == 1){
  4849  001CA4  D00A               	goto	l409
  4850  001CA6                     
  4851                           ; BSR set to: 0
  4852                           ;operation.c: 34: if(input == 1){
  4853                           
  4854                           ; BSR set to: 0
  4855  001CA6  0583               	decf	findMode@input& (0+255),w,b
  4856  001CA8  1184               	iorwf	(findMode@input+1)& (0+255),w,b
  4857  001CAA  A4D8               	btfss	status,2,c
  4858  001CAC  D003               	goto	l407
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;operation.c: 35: modeOfOperation = '1';
  4862  001CAE  0E31               	movlw	49
  4863  001CB0  6E42               	movwf	_modeOfOperation,c
  4864                           
  4865                           ;operation.c: 36: break;
  4866  001CB2  0012               	return	
  4867  001CB4                     l407:
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;operation.c: 38: modeOfOperation = '0';
  4871                           
  4872                           ; BSR set to: 0
  4873  001CB4  0E30               	movlw	48
  4874  001CB6  6E42               	movwf	_modeOfOperation,c
  4875                           
  4876                           ;operation.c: 39: break;
  4877  001CB8  0012               	return	
  4878  001CBA                     l409:
  4879                           
  4880                           ; BSR set to: 0
  4881                           
  4882                           ; BSR set to: 0
  4883                           
  4884                           ; BSR set to: 0
  4885  001CBA  0585               	decf	findMode@flag& (0+255),w,b
  4886  001CBC  1186               	iorwf	(findMode@flag+1)& (0+255),w,b
  4887  001CBE  A4D8               	btfss	status,2,c
  4888  001CC0  0012               	return	
  4889  001CC2  D7F1               	goto	l406
  4890  001CC4                     __end_of_findMode:
  4891                           	opt stack 0
  4892                           tblptru	equ	0xFF8
  4893                           tblptrh	equ	0xFF7
  4894                           tblptrl	equ	0xFF6
  4895                           tablat	equ	0xFF5
  4896                           intcon	equ	0xFF2
  4897                           intcon3	equ	0xFF0
  4898                           postinc0	equ	0xFEE
  4899                           wreg	equ	0xFE8
  4900                           postdec1	equ	0xFE5
  4901                           fsr1l	equ	0xFE1
  4902                           postinc2	equ	0xFDE
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function _uartTransmitBlocking *****************
  4908 ;; Defined at:
  4909 ;;		line 22 in file "UART_PIC.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  data            2   33[COMRAM] PTR unsigned char 
  4912 ;;		 -> sendPillRequests@arr(1), findMode@arr(1), main@arr(1), 
  4913 ;;  numBytes        1   35[COMRAM] unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  numTransmits    1    0[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4925 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;Total ram usage:        5 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    5
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;;		_findMode
  4937 ;;		_sendPillRequests
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text10
  4942  001A32                     __ptext10:
  4943                           	opt stack 0
  4944  001A32                     _uartTransmitBlocking:
  4945                           	opt stack 25
  4946                           
  4947                           ;UART_PIC.c: 36: while(UART -> _stateTX == UART_STATE_BUSY){ continue; }
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;incstack = 0
  4951  001A32  EE20 F008          	lfsr	2,8
  4952  001A36  503A               	movf	_UART,w,c
  4953  001A38  26D9               	addwf	fsr2l,f,c
  4954  001A3A  503B               	movf	_UART+1,w,c
  4955  001A3C  22DA               	addwfc	fsr2h,f,c
  4956  001A3E  50DF               	movf	indf2,w,c
  4957  001A40  B4D8               	btfsc	status,2,c
  4958  001A42  D7F7               	goto	_uartTransmitBlocking
  4959                           
  4960                           ;UART_PIC.c: 39: UART -> _stateTX = UART_STATE_BUSY;
  4961  001A44  EE20 F008          	lfsr	2,8
  4962  001A48  503A               	movf	_UART,w,c
  4963  001A4A  26D9               	addwf	fsr2l,f,c
  4964  001A4C  503B               	movf	_UART+1,w,c
  4965  001A4E  22DA               	addwfc	fsr2h,f,c
  4966  001A50  0E00               	movlw	0
  4967  001A52  6EDF               	movwf	indf2,c
  4968                           
  4969                           ;UART_PIC.c: 42: unsigned char numTransmits = 0;
  4970  001A54  0E00               	movlw	0
  4971  001A56  0100               	movlb	0	; () banked
  4972  001A58  6F80               	movwf	uartTransmitBlocking@numTransmits& (0+255),b
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;UART_PIC.c: 45: TXSTAbits.TXEN = 1; _delay((unsigned long)((5)*(40000000/4000.0)));;
  4976  001A5A  8AAC               	bsf	4012,5,c	;volatile
  4977                           
  4978                           ; BSR set to: 0
  4979  001A5C  0E41               	movlw	65
  4980  001A5E  6E25               	movwf	??_uartTransmitBlocking& (0+255),c
  4981  001A60  0EEE               	movlw	238
  4982  001A62                     u5647:
  4983  001A62  2EE8               	decfsz	wreg,f,c
  4984  001A64  D7FE               	bra	u5647
  4985  001A66  2E25               	decfsz	??_uartTransmitBlocking& (0+255),f,c
  4986  001A68  D7FC               	bra	u5647
  4987  001A6A  D000               	nop2	
  4988                           
  4989                           ;UART_PIC.c: 48: while(numTransmits < numBytes){
  4990  001A6C  D025               	goto	l581
  4991  001A6E                     l3836:
  4992  001A6E  B2AC               	btfsc	4012,1,c	;volatile
  4993  001A70  D002               	goto	u3780
  4994  001A72  0E01               	movlw	1
  4995  001A74  D001               	goto	u3782
  4996  001A76                     u3780:
  4997  001A76  0E00               	movlw	0
  4998  001A78                     u3782:
  4999  001A78  6E25               	movwf	??_uartTransmitBlocking& (0+255),c
  5000  001A7A  B89E               	btfsc	3998,4,c	;volatile
  5001  001A7C  D002               	goto	u3790
  5002  001A7E  0E01               	movlw	1
  5003  001A80  D001               	goto	u3792
  5004  001A82                     u3790:
  5005  001A82  0E00               	movlw	0
  5006  001A84                     u3792:
  5007  001A84  1025               	iorwf	??_uartTransmitBlocking,w,c
  5008  001A86  E1F3               	bnz	l3836
  5009                           
  5010                           ;UART_PIC.c: 53: __nop();
  5011  001A88  F000               	nop	
  5012                           
  5013                           ;UART_PIC.c: 56: UARTinterruptState = INTCONbits.GIE;
  5014  001A8A  0E00               	movlw	0
  5015  001A8C  BEF2               	btfsc	intcon,7,c	;volatile
  5016  001A8E  0E01               	movlw	1
  5017  001A90  6E4B               	movwf	_UARTinterruptState,c	;volatile
  5018                           
  5019                           ;UART_PIC.c: 57: (INTCONbits.GIE = 0);
  5020  001A92  9EF2               	bcf	intcon,7,c	;volatile
  5021                           
  5022                           ;UART_PIC.c: 58: TXREG = data[numTransmits];
  5023  001A94  0100               	movlb	0	; () banked
  5024  001A96  5180               	movf	uartTransmitBlocking@numTransmits& (0+255),w,b
  5025  001A98  0D01               	mullw	1
  5026  001A9A  50F3               	movf	prodl,w,c
  5027  001A9C  2422               	addwf	uartTransmitBlocking@data,w,c
  5028  001A9E  6ED9               	movwf	fsr2l,c
  5029  001AA0  50F4               	movf	prodh,w,c
  5030  001AA2  2023               	addwfc	uartTransmitBlocking@data+1,w,c
  5031  001AA4  6EDA               	movwf	fsr2h,c
  5032  001AA6  50DF               	movf	indf2,w,c
  5033  001AA8  6EAD               	movwf	4013,c	;volatile
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;UART_PIC.c: 59: INTCONbits.GIE = UARTinterruptState;
  5037  001AAA  B04B               	btfsc	_UARTinterruptState,0,c	;volatile
  5038  001AAC  D002               	bra	u3805
  5039  001AAE  9EF2               	bcf	intcon,7,c	;volatile
  5040  001AB0  D001               	bra	u3806
  5041  001AB2                     u3805:
  5042  001AB2  8EF2               	bsf	intcon,7,c	;volatile
  5043  001AB4                     u3806:
  5044                           
  5045                           ;UART_PIC.c: 61: numTransmits++;
  5046  001AB4  0100               	movlb	0	; () banked
  5047  001AB6  2B80               	incf	uartTransmitBlocking@numTransmits& (0+255),f,b
  5048  001AB8                     l581:
  5049                           
  5050                           ; BSR set to: 0
  5051  001AB8  5024               	movf	uartTransmitBlocking@numBytes,w,c
  5052  001ABA  0100               	movlb	0	; () banked
  5053  001ABC  5D80               	subwf	uartTransmitBlocking@numTransmits& (0+255),w,b
  5054  001ABE  A0D8               	btfss	status,0,c
  5055  001AC0  D7D6               	goto	l582
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;UART_PIC.c: 65: }
  5059                           ;UART_PIC.c: 68: UART -> _stateTX = UART_STATE_READY;
  5060                           
  5061                           ; BSR set to: 0
  5062  001AC2  EE20 F008          	lfsr	2,8
  5063  001AC6  503A               	movf	_UART,w,c
  5064  001AC8  26D9               	addwf	fsr2l,f,c
  5065  001ACA  503B               	movf	_UART+1,w,c
  5066  001ACC  22DA               	addwfc	fsr2h,f,c
  5067  001ACE  0E01               	movlw	1
  5068  001AD0  6EDF               	movwf	indf2,c
  5069                           
  5070                           ; BSR set to: 0
  5071  001AD2  0012               	return		;funcret
  5072  001AD4                     __end_of_uartTransmitBlocking:
  5073                           	opt stack 0
  5074                           tblptru	equ	0xFF8
  5075                           tblptrh	equ	0xFF7
  5076                           tblptrl	equ	0xFF6
  5077                           tablat	equ	0xFF5
  5078                           prodh	equ	0xFF4
  5079                           prodl	equ	0xFF3
  5080                           intcon	equ	0xFF2
  5081                           intcon3	equ	0xFF0
  5082                           postinc0	equ	0xFEE
  5083                           wreg	equ	0xFE8
  5084                           postdec1	equ	0xFE5
  5085                           fsr1l	equ	0xFE1
  5086                           indf2	equ	0xFDF
  5087                           postinc2	equ	0xFDE
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           status	equ	0xFD8
  5091                           
  5092 ;; *************** function _UART_Init *****************
  5093 ;; Defined at:
  5094 ;;		line 200 in file "UART_PIC.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  baud            4   33[COMRAM] long 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        8 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    6
  5115 ;; This function calls:
  5116 ;;		___aldiv
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text11
  5123  001AD4                     __ptext11:
  5124                           	opt stack 0
  5125  001AD4                     _UART_Init:
  5126                           	opt stack 24
  5127                           
  5128                           ;UART_PIC.c: 213: SPBRG = (unsigned char)((40000000 / (64 * baud)) - 1);
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;incstack = 0
  5132  001AD4  0E00               	movlw	0
  5133  001AD6  0100               	movlb	0	; () banked
  5134  001AD8  6F80               	movwf	___aldiv@dividend& (0+255),b
  5135  001ADA  0E5A               	movlw	90
  5136  001ADC  6F81               	movwf	(___aldiv@dividend+1)& (0+255),b
  5137  001ADE  0E62               	movlw	98
  5138  001AE0  6F82               	movwf	(___aldiv@dividend+2)& (0+255),b
  5139  001AE2  0E02               	movlw	2
  5140  001AE4  6F83               	movwf	(___aldiv@dividend+3)& (0+255),b
  5141  001AE6  C022  F08E         	movff	UART_Init@baud,??_UART_Init
  5142  001AEA  C023  F08F         	movff	UART_Init@baud+1,??_UART_Init+1
  5143  001AEE  C024  F090         	movff	UART_Init@baud+2,??_UART_Init+2
  5144  001AF2  C025  F091         	movff	UART_Init@baud+3,??_UART_Init+3
  5145  001AF6  0E06               	movlw	6
  5146  001AF8                     u4035:
  5147  001AF8  90D8               	bcf	status,0,c
  5148  001AFA  378E               	rlcf	??_UART_Init& (0+255),f,b
  5149  001AFC  378F               	rlcf	(??_UART_Init+1)& (0+255),f,b
  5150  001AFE  3790               	rlcf	(??_UART_Init+2)& (0+255),f,b
  5151  001B00  3791               	rlcf	(??_UART_Init+3)& (0+255),f,b
  5152  001B02  2EE8               	decfsz	wreg,f,c
  5153  001B04  D7F9               	goto	u4035
  5154  001B06  C08E  F084         	movff	??_UART_Init,___aldiv@divisor
  5155  001B0A  C08F  F085         	movff	??_UART_Init+1,___aldiv@divisor+1
  5156  001B0E  C090  F086         	movff	??_UART_Init+2,___aldiv@divisor+2
  5157  001B12  C091  F087         	movff	??_UART_Init+3,___aldiv@divisor+3
  5158  001B16  ECB2  F00C         	call	___aldiv	;wreg free
  5159  001B1A  0100               	movlb	0	; () banked
  5160  001B1C  0580               	decf	?___aldiv& (0+255),w,b
  5161  001B1E  6EAF               	movwf	4015,c	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;UART_PIC.c: 216: TXSTAbits.TX9 = 0;
  5165  001B20  9CAC               	bcf	4012,6,c	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;UART_PIC.c: 217: TXSTAbits.SYNC = 0;
  5169  001B22  98AC               	bcf	4012,4,c	;volatile
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;UART_PIC.c: 218: TXSTAbits.TXEN = 1;
  5173  001B24  8AAC               	bsf	4012,5,c	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;UART_PIC.c: 221: RCSTAbits.RX9 = 0;
  5177  001B26  9CAB               	bcf	4011,6,c	;volatile
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;UART_PIC.c: 222: RCSTAbits.CREN = 1;
  5181  001B28  88AB               	bsf	4011,4,c	;volatile
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;UART_PIC.c: 225: UART -> _stateTX = UART_STATE_READY;
  5185  001B2A  EE20 F008          	lfsr	2,8
  5186  001B2E  503A               	movf	_UART,w,c
  5187  001B30  26D9               	addwf	fsr2l,f,c
  5188  001B32  503B               	movf	_UART+1,w,c
  5189  001B34  22DA               	addwfc	fsr2h,f,c
  5190  001B36  0E01               	movlw	1
  5191  001B38  6EDF               	movwf	indf2,c
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;UART_PIC.c: 226: UART -> _stateRX = UART_STATE_READY;
  5195  001B3A  EE20 F009          	lfsr	2,9
  5196  001B3E  503A               	movf	_UART,w,c
  5197  001B40  26D9               	addwf	fsr2l,f,c
  5198  001B42  503B               	movf	_UART+1,w,c
  5199  001B44  22DA               	addwfc	fsr2h,f,c
  5200  001B46  0E01               	movlw	1
  5201  001B48  6EDF               	movwf	indf2,c
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;UART_PIC.c: 229: uart._dataRX = arr_dataRX;
  5205  001B4A  0E99               	movlw	low _arr_dataRX
  5206  001B4C  6E56               	movwf	_uart+4,c	;volatile
  5207  001B4E  0E00               	movlw	high _arr_dataRX
  5208  001B50  6E57               	movwf	_uart+5,c	;volatile
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;UART_PIC.c: 232: TRISC6 = 0;
  5212  001B52  9C94               	bcf	3988,6,c	;volatile
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;UART_PIC.c: 233: TRISC7 = 1;
  5216  001B54  8E94               	bsf	3988,7,c	;volatile
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;UART_PIC.c: 236: RCSTAbits.SPEN = 1;
  5220  001B56  8EAB               	bsf	4011,7,c	;volatile
  5221                           
  5222                           ; BSR set to: 0
  5223  001B58  0012               	return		;funcret
  5224  001B5A                     __end_of_UART_Init:
  5225                           	opt stack 0
  5226                           tblptru	equ	0xFF8
  5227                           tblptrh	equ	0xFF7
  5228                           tblptrl	equ	0xFF6
  5229                           tablat	equ	0xFF5
  5230                           prodh	equ	0xFF4
  5231                           prodl	equ	0xFF3
  5232                           intcon	equ	0xFF2
  5233                           intcon3	equ	0xFF0
  5234                           postinc0	equ	0xFEE
  5235                           wreg	equ	0xFE8
  5236                           postdec1	equ	0xFE5
  5237                           fsr1l	equ	0xFE1
  5238                           indf2	equ	0xFDF
  5239                           postinc2	equ	0xFDE
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function ___aldiv *****************
  5245 ;; Defined at:
  5246 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  dividend        4    0[BANK0 ] long 
  5249 ;;  divisor         4    4[BANK0 ] long 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  quotient        4   10[BANK0 ] long 
  5252 ;;  sign            1    9[BANK0 ] unsigned char 
  5253 ;;  counter         1    8[BANK0 ] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  4    0[BANK0 ] long 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5263 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;Total ram usage:       14 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    5
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_UART_Init
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text12
  5278  001964                     __ptext12:
  5279                           	opt stack 0
  5280  001964                     ___aldiv:
  5281                           	opt stack 24
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;incstack = 0
  5285  001964  0E00               	movlw	0
  5286  001966  0100               	movlb	0	; () banked
  5287  001968  6F89               	movwf	___aldiv@sign& (0+255),b
  5288                           
  5289                           ; BSR set to: 0
  5290  00196A  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  5291  00196C  D00A               	goto	l684
  5292                           
  5293                           ; BSR set to: 0
  5294  00196E  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
  5295  001970  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
  5296  001972  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
  5297  001974  6D84               	negf	___aldiv@divisor& (0+255),b
  5298  001976  0E00               	movlw	0
  5299  001978  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  5300  00197A  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  5301  00197C  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  5302                           
  5303                           ; BSR set to: 0
  5304  00197E  0E01               	movlw	1
  5305  001980  6F89               	movwf	___aldiv@sign& (0+255),b
  5306  001982                     l684:
  5307                           
  5308                           ; BSR set to: 0
  5309                           
  5310                           ; BSR set to: 0
  5311  001982  AF83               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  5312  001984  D00A               	goto	l685
  5313                           
  5314                           ; BSR set to: 0
  5315  001986  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
  5316  001988  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
  5317  00198A  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
  5318  00198C  6D80               	negf	___aldiv@dividend& (0+255),b
  5319  00198E  0E00               	movlw	0
  5320  001990  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  5321  001992  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  5322  001994  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  5323                           
  5324                           ; BSR set to: 0
  5325  001996  0E01               	movlw	1
  5326  001998  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  5327  00199A                     l685:
  5328                           
  5329                           ; BSR set to: 0
  5330                           
  5331                           ; BSR set to: 0
  5332  00199A  0E00               	movlw	0
  5333  00199C  6F8A               	movwf	___aldiv@quotient& (0+255),b
  5334  00199E  0E00               	movlw	0
  5335  0019A0  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  5336  0019A2  0E00               	movlw	0
  5337  0019A4  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  5338  0019A6  0E00               	movlw	0
  5339  0019A8  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  5340                           
  5341                           ; BSR set to: 0
  5342  0019AA  5184               	movf	___aldiv@divisor& (0+255),w,b
  5343  0019AC  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  5344  0019AE  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  5345  0019B0  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  5346  0019B2  B4D8               	btfsc	status,2,c
  5347  0019B4  D02A               	goto	l692
  5348                           
  5349                           ; BSR set to: 0
  5350  0019B6  0E01               	movlw	1
  5351  0019B8  6F88               	movwf	___aldiv@counter& (0+255),b
  5352  0019BA  D006               	goto	l687
  5353  0019BC                     
  5354                           ; BSR set to: 0
  5355                           
  5356                           ; BSR set to: 0
  5357  0019BC  90D8               	bcf	status,0,c
  5358  0019BE  3784               	rlcf	___aldiv@divisor& (0+255),f,b
  5359  0019C0  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  5360  0019C2  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  5361  0019C4  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  5362  0019C6  2B88               	incf	___aldiv@counter& (0+255),f,b
  5363  0019C8                     l687:
  5364                           
  5365                           ; BSR set to: 0
  5366                           
  5367                           ; BSR set to: 0
  5368  0019C8  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  5369  0019CA  D7F8               	goto	l688
  5370  0019CC                     u3850:
  5371                           
  5372                           ; BSR set to: 0
  5373                           
  5374                           ; BSR set to: 0
  5375                           
  5376                           ; BSR set to: 0
  5377  0019CC  90D8               	bcf	status,0,c
  5378  0019CE  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  5379  0019D0  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  5380  0019D2  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  5381  0019D4  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  5382                           
  5383                           ; BSR set to: 0
  5384  0019D6  5184               	movf	___aldiv@divisor& (0+255),w,b
  5385  0019D8  5D80               	subwf	___aldiv@dividend& (0+255),w,b
  5386  0019DA  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  5387  0019DC  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  5388  0019DE  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  5389  0019E0  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  5390  0019E2  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  5391  0019E4  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  5392  0019E6  A0D8               	btfss	status,0,c
  5393  0019E8  D009               	goto	l691
  5394                           
  5395                           ; BSR set to: 0
  5396  0019EA  5184               	movf	___aldiv@divisor& (0+255),w,b
  5397  0019EC  5F80               	subwf	___aldiv@dividend& (0+255),f,b
  5398  0019EE  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  5399  0019F0  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  5400  0019F2  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  5401  0019F4  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  5402  0019F6  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  5403  0019F8  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  5404                           
  5405                           ; BSR set to: 0
  5406  0019FA  818A               	bsf	___aldiv@quotient& (0+255),0,b
  5407  0019FC                     l691:
  5408                           
  5409                           ; BSR set to: 0
  5410                           
  5411                           ; BSR set to: 0
  5412  0019FC  90D8               	bcf	status,0,c
  5413  0019FE  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  5414  001A00  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  5415  001A02  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  5416  001A04  3384               	rrcf	___aldiv@divisor& (0+255),f,b
  5417                           
  5418                           ; BSR set to: 0
  5419  001A06  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  5420  001A08  D7E1               	goto	u3850
  5421  001A0A                     l692:
  5422                           
  5423                           ; BSR set to: 0
  5424                           
  5425                           ; BSR set to: 0
  5426                           
  5427                           ; BSR set to: 0
  5428  001A0A  5189               	movf	___aldiv@sign& (0+255),w,b
  5429  001A0C  B4D8               	btfsc	status,2,c
  5430  001A0E  D008               	goto	l693
  5431                           
  5432                           ; BSR set to: 0
  5433  001A10  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  5434  001A12  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  5435  001A14  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  5436  001A16  6D8A               	negf	___aldiv@quotient& (0+255),b
  5437  001A18  0E00               	movlw	0
  5438  001A1A  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  5439  001A1C  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  5440  001A1E  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  5441  001A20                     l693:
  5442                           
  5443                           ; BSR set to: 0
  5444                           
  5445                           ; BSR set to: 0
  5446  001A20  C08A  F080         	movff	___aldiv@quotient,?___aldiv
  5447  001A24  C08B  F081         	movff	___aldiv@quotient+1,?___aldiv+1
  5448  001A28  C08C  F082         	movff	___aldiv@quotient+2,?___aldiv+2
  5449  001A2C  C08D  F083         	movff	___aldiv@quotient+3,?___aldiv+3
  5450  001A30  0012               	return	
  5451  001A32                     __end_of___aldiv:
  5452                           	opt stack 0
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           prodh	equ	0xFF4
  5458                           prodl	equ	0xFF3
  5459                           intcon	equ	0xFF2
  5460                           intcon3	equ	0xFF0
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           postdec1	equ	0xFE5
  5464                           fsr1l	equ	0xFE1
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _interruptHandler *****************
  5472 ;; Defined at:
  5473 ;;		line 319 in file "main.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  keypress        1   30[COMRAM] unsigned char 
  5478 ;;  k               1   29[COMRAM] unsigned char 
  5479 ;;  k               1   32[COMRAM] unsigned char 
  5480 ;;  keypress        1   31[COMRAM] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;Total ram usage:       24 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    4
  5497 ;; This function calls:
  5498 ;;		_resetSection
  5499 ;;		_savePrescriptionInfo
  5500 ;;		i2_lcdInst
  5501 ;;		i2_printf
  5502 ;;		i2_putch
  5503 ;; This function is called by:
  5504 ;;		Interrupt level 2
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	intcode
  5509  000008                     __pintcode:
  5510                           	opt stack 0
  5511  000008                     _interruptHandler:
  5512                           	opt stack 22
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;incstack = 0
  5516  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5517  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           intcon	equ	0xFF2
  5525                           intcon3	equ	0xFF0
  5526                           postinc0	equ	0xFEE
  5527                           wreg	equ	0xFE8
  5528                           postdec1	equ	0xFE5
  5529                           fsr1l	equ	0xFE1
  5530                           indf2	equ	0xFDF
  5531                           postinc2	equ	0xFDE
  5532                           fsr2h	equ	0xFDA
  5533                           fsr2l	equ	0xFD9
  5534                           status	equ	0xFD8
  5535                           
  5536                           	psect	intcode_body
  5537  000012                     __pintcode_body:
  5538                           	opt stack 22
  5539  000012                     int_func:
  5540                           	opt stack 22
  5541  000012  0006               	pop		; remove dummy address from shadow register refresh
  5542  000014  CFFA F00C          	movff	pclath,??_interruptHandler+2
  5543  000018  CFFB F00D          	movff	pclatu,??_interruptHandler+3
  5544  00001C  CFE9 F00E          	movff	fsr0l,??_interruptHandler+4
  5545  000020  CFEA F00F          	movff	fsr0h,??_interruptHandler+5
  5546  000024  CFE1 F010          	movff	fsr1l,??_interruptHandler+6
  5547  000028  CFE2 F011          	movff	fsr1h,??_interruptHandler+7
  5548  00002C  CFD9 F012          	movff	fsr2l,??_interruptHandler+8
  5549  000030  CFDA F013          	movff	fsr2h,??_interruptHandler+9
  5550  000034  CFF3 F014          	movff	prodl,??_interruptHandler+10
  5551  000038  CFF4 F015          	movff	prodh,??_interruptHandler+11
  5552  00003C  CFF6 F016          	movff	tblptrl,??_interruptHandler+12
  5553  000040  CFF7 F017          	movff	tblptrh,??_interruptHandler+13
  5554  000044  CFF8 F018          	movff	tblptru,??_interruptHandler+14
  5555  000048  CFF5 F019          	movff	tablat,??_interruptHandler+15
  5556  00004C  C05E  F01A         	movff	btemp,??_interruptHandler+16
  5557  000050  C05F  F01B         	movff	btemp+1,??_interruptHandler+17
  5558  000054  C060  F01C         	movff	btemp+2,??_interruptHandler+18
  5559  000058  C061  F01D         	movff	btemp+3,??_interruptHandler+19
  5560                           
  5561                           ;main.c: 330: if(INT1IF){
  5562  00005C  A0F0               	btfss	intcon3,0,c	;volatile
  5563  00005E  D37E               	goto	i2l199
  5564                           
  5565                           ;main.c: 337: unsigned char keypress = (PORTB & 0xF0) >> 4;
  5566  000060  3881               	swapf	3969,w,c	;volatile
  5567  000062  0B0F               	andlw	15
  5568  000064  0B0F               	andlw	15
  5569  000066  6E20               	movwf	interruptHandler@keypress,c
  5570                           
  5571                           ;main.c: 338: char k = keys[keypress];
  5572  000068  5020               	movf	interruptHandler@keypress,w,c
  5573  00006A  0D01               	mullw	1
  5574  00006C  0E47               	movlw	low _keys
  5575  00006E  24F3               	addwf	prodl,w,c
  5576  000070  6EF6               	movwf	tblptrl,c
  5577  000072  0EFE               	movlw	high _keys
  5578  000074  20F4               	addwfc	prodh,w,c
  5579  000076  6EF7               	movwf	tblptrh,c
  5580  000078                     	if	0	;There are less than 3 active tblptr bytes
  5581  000078                     	endif
  5582  000078  0008               	tblrd		*
  5583  00007A  CFF5 F021          	movff	tablat,interruptHandler@k
  5584                           
  5585                           ;main.c: 339: putch(keys[keypress]);
  5586  00007E  5020               	movf	interruptHandler@keypress,w,c
  5587  000080  0D01               	mullw	1
  5588  000082  0E47               	movlw	low _keys
  5589  000084  24F3               	addwf	prodl,w,c
  5590  000086  6EF6               	movwf	tblptrl,c
  5591  000088  0EFE               	movlw	high _keys
  5592  00008A  20F4               	addwfc	prodh,w,c
  5593  00008C  6EF7               	movwf	tblptrh,c
  5594  00008E                     	if	0	;There are less than 3 active tblptr bytes
  5595  00008E                     	endif
  5596  00008E  0008               	tblrd		*
  5597  000090  50F5               	movf	tablat,w,c
  5598  000092  ECFA  F00E         	call	i2_putch
  5599                           
  5600                           ;main.c: 342: if(x ==0){
  5601  000096  5051               	movf	_x,w,c
  5602  000098  A4D8               	btfss	status,2,c
  5603  00009A  D015               	goto	i2l200
  5604                           
  5605                           ;main.c: 344: if(k == 'R'){
  5606  00009C  0E52               	movlw	82
  5607  00009E  1821               	xorwf	interruptHandler@k,w,c
  5608  0000A0  A4D8               	btfss	status,2,c
  5609  0000A2  D003               	goto	i2l201
  5610                           
  5611                           ;main.c: 348: prescription[0] = 'R';
  5612  0000A4  0E52               	movlw	82
  5613  0000A6  6E34               	movwf	_prescription,c
  5614                           
  5615                           ;main.c: 351: } else if (k == 'F'){
  5616  0000A8  D2B5               	goto	i2l266
  5617  0000AA                     i2l201:
  5618  0000AA  0E46               	movlw	70
  5619  0000AC  1821               	xorwf	interruptHandler@k,w,c
  5620  0000AE  A4D8               	btfss	status,2,c
  5621  0000B0  D003               	goto	i2l203
  5622                           
  5623                           ;main.c: 353: prescription[1] = 'F';
  5624  0000B2  0E46               	movlw	70
  5625  0000B4  6E35               	movwf	_prescription+1,c
  5626                           
  5627                           ;main.c: 354: } else if (k == 'L'){
  5628  0000B6  D2AE               	goto	i2l266
  5629  0000B8                     i2l203:
  5630  0000B8  0E4C               	movlw	76
  5631  0000BA  1821               	xorwf	interruptHandler@k,w,c
  5632  0000BC  A4D8               	btfss	status,2,c
  5633  0000BE  D2AA               	goto	i2l266
  5634                           
  5635                           ;main.c: 356: prescription[2] = 'L';
  5636  0000C0  0E4C               	movlw	76
  5637  0000C2  6E36               	movwf	_prescription+2,c
  5638                           
  5639                           ;main.c: 357: }
  5640                           ;main.c: 359: }
  5641  0000C4  D2A7               	goto	i2l266
  5642  0000C6                     i2l200:
  5643                           
  5644                           ;main.c: 362: else if(x == 1) {
  5645  0000C6  0451               	decf	_x,w,c
  5646  0000C8  A4D8               	btfss	status,2,c
  5647  0000CA  D098               	goto	i2l207
  5648                           
  5649                           ;main.c: 363: if(k == '1'){
  5650  0000CC  0E31               	movlw	49
  5651  0000CE  1821               	xorwf	interruptHandler@k,w,c
  5652  0000D0  A4D8               	btfss	status,2,c
  5653  0000D2  D03F               	goto	i2l208
  5654                           
  5655                           ;main.c: 364: prevPills = numPills;
  5656  0000D4  C048  F046         	movff	_numPills,_prevPills
  5657  0000D8  C049  F047         	movff	_numPills+1,_prevPills+1
  5658                           
  5659                           ;main.c: 365: numPills++;
  5660  0000DC  4A48               	infsnz	_numPills,f,c
  5661  0000DE  2A49               	incf	_numPills+1,f,c
  5662                           
  5663                           ;main.c: 367: if(numPills < 5){
  5664  0000E0  BE49               	btfsc	_numPills+1,7,c
  5665  0000E2  D006               	goto	i2u296_40
  5666  0000E4  5049               	movf	_numPills+1,w,c
  5667  0000E6  E112               	bnz	i2l3378
  5668  0000E8  0E05               	movlw	5
  5669  0000EA  5C48               	subwf	_numPills,w,c
  5670  0000EC  B0D8               	btfsc	status,0,c
  5671  0000EE  D00E               	goto	i2l209
  5672  0000F0                     i2u296_40:
  5673                           
  5674                           ;main.c: 369: num_pills_R_data = k;
  5675  0000F0  C021  F041         	movff	interruptHandler@k,_num_pills_R_data
  5676                           
  5677                           ;main.c: 371: _delay((unsigned long)((1000)*(40000000/4000.0)));
  5678  0000F4  0E33               	movlw	51
  5679  0000F6  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5680  0000F8  0EBB               	movlw	187
  5681  0000FA  6E0A               	movwf	??_interruptHandler& (0+255),c
  5682  0000FC  0EE0               	movlw	224
  5683  0000FE                     i2u565_47:
  5684  0000FE  2EE8               	decfsz	wreg,f,c
  5685  000100  D7FE               	bra	i2u565_47
  5686  000102  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5687  000104  D7FC               	bra	i2u565_47
  5688  000106  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5689  000108  D7FA               	bra	i2u565_47
  5690                           
  5691                           ;main.c: 373: } else{
  5692  00010A  D284               	goto	i2l266
  5693  00010C                     i2l209:
  5694  00010C                     i2l3378:
  5695                           
  5696                           ;main.c: 374: lcdInst(0xC0);;
  5697  00010C  0EC0               	movlw	192
  5698  00010E  EC04  F00F         	call	i2_lcdInst
  5699                           
  5700                           ;main.c: 375: _delay((unsigned long)((100)*(40000000/4000.0)));
  5701  000112  0E06               	movlw	6
  5702  000114  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5703  000116  0E13               	movlw	19
  5704  000118  6E0A               	movwf	??_interruptHandler& (0+255),c
  5705  00011A  0EAE               	movlw	174
  5706  00011C                     i2u566_47:
  5707  00011C  2EE8               	decfsz	wreg,f,c
  5708  00011E  D7FE               	bra	i2u566_47
  5709  000120  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5710  000122  D7FC               	bra	i2u566_47
  5711  000124  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5712  000126  D7FA               	bra	i2u566_47
  5713                           
  5714                           ;main.c: 376: printf("Invalid input");
  5715  000128  0E20               	movlw	low STR_34
  5716  00012A  6E04               	movwf	i2printf@f,c
  5717  00012C  0EFF               	movlw	high STR_34
  5718  00012E  6E05               	movwf	i2printf@f+1,c
  5719  000130  ECC2  F00E         	call	i2_printf	;wreg free
  5720                           
  5721                           ;main.c: 377: _delay((unsigned long)((2000)*(40000000/4000.0)));
  5722  000134  0E66               	movlw	102
  5723  000136  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5724  000138  0E76               	movlw	118
  5725  00013A  6E0A               	movwf	??_interruptHandler& (0+255),c
  5726  00013C  0EC1               	movlw	193
  5727  00013E                     i2u567_47:
  5728  00013E  2EE8               	decfsz	wreg,f,c
  5729  000140  D7FE               	bra	i2u567_47
  5730  000142  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5731  000144  D7FC               	bra	i2u567_47
  5732  000146  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5733  000148  D7FA               	bra	i2u567_47
  5734  00014A  F000               	nop	
  5735                           
  5736                           ;main.c: 378: resetSection();
  5737  00014C  ECB7  F00B         	call	_resetSection	;wreg free
  5738                           
  5739                           ;main.c: 379: }
  5740                           ;main.c: 380: } else if (k == '2'){
  5741  000150  D261               	goto	i2l266
  5742  000152                     i2l208:
  5743  000152  0E32               	movlw	50
  5744  000154  1821               	xorwf	interruptHandler@k,w,c
  5745  000156  A4D8               	btfss	status,2,c
  5746  000158  D006               	goto	i2l212
  5747  00015A  D09B               	goto	i2u311_40
  5748  00015C                     i2l3392:
  5749                           
  5750                           ;main.c: 382: numPills += 2;
  5751  00015C  0E02               	movlw	2
  5752  00015E  2648               	addwf	_numPills,f,c
  5753  000160  0E00               	movlw	0
  5754  000162  2249               	addwfc	_numPills+1,f,c
  5755                           
  5756                           ;main.c: 384: } else if (k == '3' || k == 'E' || k == 'S' || k == 'M' || k == 'F' || k =
      +                          = 'O' || k == 'A' || k == 'B' || k == 'L' || k == 'N'){
  5757  000164  D257               	goto	i2l266
  5758  000166                     i2l212:
  5759  000166  0E33               	movlw	51
  5760  000168  1821               	xorwf	interruptHandler@k,w,c
  5761  00016A  B4D8               	btfsc	status,2,c
  5762  00016C  D024               	goto	i2u307_40
  5763  00016E  0E45               	movlw	69
  5764  000170  1821               	xorwf	interruptHandler@k,w,c
  5765  000172  B4D8               	btfsc	status,2,c
  5766  000174  D020               	goto	i2u307_40
  5767  000176  0E53               	movlw	83
  5768  000178  1821               	xorwf	interruptHandler@k,w,c
  5769  00017A  B4D8               	btfsc	status,2,c
  5770  00017C  D01C               	goto	i2u307_40
  5771  00017E  0E4D               	movlw	77
  5772  000180  1821               	xorwf	interruptHandler@k,w,c
  5773  000182  B4D8               	btfsc	status,2,c
  5774  000184  D018               	goto	i2u307_40
  5775  000186  0E46               	movlw	70
  5776  000188  1821               	xorwf	interruptHandler@k,w,c
  5777  00018A  B4D8               	btfsc	status,2,c
  5778  00018C  D014               	goto	i2u307_40
  5779  00018E  0E4F               	movlw	79
  5780  000190  1821               	xorwf	interruptHandler@k,w,c
  5781  000192  B4D8               	btfsc	status,2,c
  5782  000194  D010               	goto	i2u307_40
  5783  000196  0E41               	movlw	65
  5784  000198  1821               	xorwf	interruptHandler@k,w,c
  5785  00019A  B4D8               	btfsc	status,2,c
  5786  00019C  D00C               	goto	i2u307_40
  5787  00019E  0E42               	movlw	66
  5788  0001A0  1821               	xorwf	interruptHandler@k,w,c
  5789  0001A2  B4D8               	btfsc	status,2,c
  5790  0001A4  D008               	goto	i2u307_40
  5791  0001A6  0E4C               	movlw	76
  5792  0001A8  1821               	xorwf	interruptHandler@k,w,c
  5793  0001AA  B4D8               	btfsc	status,2,c
  5794  0001AC  D004               	goto	i2u307_40
  5795  0001AE  0E4E               	movlw	78
  5796  0001B0  1821               	xorwf	interruptHandler@k,w,c
  5797  0001B2  A4D8               	btfss	status,2,c
  5798  0001B4  D22F               	goto	i2l266
  5799  0001B6                     i2u307_40:
  5800                           
  5801                           ;main.c: 385: lcdInst(0xC0);;
  5802  0001B6  0EC0               	movlw	192
  5803  0001B8  EC04  F00F         	call	i2_lcdInst
  5804                           
  5805                           ;main.c: 386: _delay((unsigned long)((100)*(40000000/4000.0)));
  5806  0001BC  0E06               	movlw	6
  5807  0001BE  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5808  0001C0  0E13               	movlw	19
  5809  0001C2  6E0A               	movwf	??_interruptHandler& (0+255),c
  5810  0001C4  0EAE               	movlw	174
  5811  0001C6                     i2u568_47:
  5812  0001C6  2EE8               	decfsz	wreg,f,c
  5813  0001C8  D7FE               	bra	i2u568_47
  5814  0001CA  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5815  0001CC  D7FC               	bra	i2u568_47
  5816  0001CE  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5817  0001D0  D7FA               	bra	i2u568_47
  5818                           
  5819                           ;main.c: 387: printf("Invalid input");
  5820  0001D2  0E20               	movlw	low STR_34
  5821  0001D4  6E04               	movwf	i2printf@f,c
  5822  0001D6  0EFF               	movlw	high STR_34
  5823  0001D8  6E05               	movwf	i2printf@f+1,c
  5824  0001DA  ECC2  F00E         	call	i2_printf	;wreg free
  5825                           
  5826                           ;main.c: 388: _delay((unsigned long)((2000)*(40000000/4000.0)));
  5827  0001DE  0E66               	movlw	102
  5828  0001E0  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5829  0001E2  0E76               	movlw	118
  5830  0001E4  6E0A               	movwf	??_interruptHandler& (0+255),c
  5831  0001E6  0EC1               	movlw	193
  5832  0001E8                     i2u569_47:
  5833  0001E8  2EE8               	decfsz	wreg,f,c
  5834  0001EA  D7FE               	bra	i2u569_47
  5835  0001EC  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5836  0001EE  D7FC               	bra	i2u569_47
  5837  0001F0  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5838  0001F2  D7FA               	bra	i2u569_47
  5839  0001F4  F000               	nop	
  5840                           
  5841                           ;main.c: 389: resetSection();
  5842  0001F6  ECB7  F00B         	call	_resetSection	;wreg free
  5843                           
  5844                           ;main.c: 390: }
  5845                           ;main.c: 393: }
  5846  0001FA  D20C               	goto	i2l266
  5847  0001FC                     i2l207:
  5848                           
  5849                           ;main.c: 395: else if(x == 2) {
  5850  0001FC  0E02               	movlw	2
  5851  0001FE  1851               	xorwf	_x,w,c
  5852  000200  A4D8               	btfss	status,2,c
  5853  000202  D097               	goto	i2l218
  5854                           
  5855                           ;main.c: 396: if(k == '1'){
  5856  000204  0E31               	movlw	49
  5857  000206  1821               	xorwf	interruptHandler@k,w,c
  5858  000208  A4D8               	btfss	status,2,c
  5859  00020A  D03F               	goto	i2l219
  5860                           
  5861                           ;main.c: 397: prevPills = numPills;
  5862  00020C  C048  F046         	movff	_numPills,_prevPills
  5863  000210  C049  F047         	movff	_numPills+1,_prevPills+1
  5864                           
  5865                           ;main.c: 398: numPills++;
  5866  000214  4A48               	infsnz	_numPills,f,c
  5867  000216  2A49               	incf	_numPills+1,f,c
  5868                           
  5869                           ;main.c: 400: if(numPills < 5){
  5870  000218  BE49               	btfsc	_numPills+1,7,c
  5871  00021A  D006               	goto	i2u310_40
  5872  00021C  5049               	movf	_numPills+1,w,c
  5873  00021E  E112               	bnz	i2l3438
  5874  000220  0E05               	movlw	5
  5875  000222  5C48               	subwf	_numPills,w,c
  5876  000224  B0D8               	btfsc	status,0,c
  5877  000226  D00E               	goto	i2l220
  5878  000228                     i2u310_40:
  5879                           
  5880                           ;main.c: 401: num_pills_F_data = k;
  5881  000228  C021  F040         	movff	interruptHandler@k,_num_pills_F_data
  5882                           
  5883                           ;main.c: 403: _delay((unsigned long)((1000)*(40000000/4000.0)));
  5884  00022C  0E33               	movlw	51
  5885  00022E  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5886  000230  0EBB               	movlw	187
  5887  000232  6E0A               	movwf	??_interruptHandler& (0+255),c
  5888  000234  0EE0               	movlw	224
  5889  000236                     i2u570_47:
  5890  000236  2EE8               	decfsz	wreg,f,c
  5891  000238  D7FE               	bra	i2u570_47
  5892  00023A  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5893  00023C  D7FC               	bra	i2u570_47
  5894  00023E  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5895  000240  D7FA               	bra	i2u570_47
  5896                           
  5897                           ;main.c: 405: } else{
  5898  000242  D1E8               	goto	i2l266
  5899  000244                     i2l220:
  5900  000244                     i2l3438:
  5901                           
  5902                           ;main.c: 406: lcdInst(0xC0);;
  5903  000244  0EC0               	movlw	192
  5904  000246  EC04  F00F         	call	i2_lcdInst
  5905                           
  5906                           ;main.c: 407: _delay((unsigned long)((100)*(40000000/4000.0)));
  5907  00024A  0E06               	movlw	6
  5908  00024C  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5909  00024E  0E13               	movlw	19
  5910  000250  6E0A               	movwf	??_interruptHandler& (0+255),c
  5911  000252  0EAE               	movlw	174
  5912  000254                     i2u571_47:
  5913  000254  2EE8               	decfsz	wreg,f,c
  5914  000256  D7FE               	bra	i2u571_47
  5915  000258  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5916  00025A  D7FC               	bra	i2u571_47
  5917  00025C  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5918  00025E  D7FA               	bra	i2u571_47
  5919                           
  5920                           ;main.c: 408: printf("Invalid input");
  5921  000260  0E20               	movlw	low STR_34
  5922  000262  6E04               	movwf	i2printf@f,c
  5923  000264  0EFF               	movlw	high STR_34
  5924  000266  6E05               	movwf	i2printf@f+1,c
  5925  000268  ECC2  F00E         	call	i2_printf	;wreg free
  5926                           
  5927                           ;main.c: 409: _delay((unsigned long)((2000)*(40000000/4000.0)));
  5928  00026C  0E66               	movlw	102
  5929  00026E  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  5930  000270  0E76               	movlw	118
  5931  000272  6E0A               	movwf	??_interruptHandler& (0+255),c
  5932  000274  0EC1               	movlw	193
  5933  000276                     i2u572_47:
  5934  000276  2EE8               	decfsz	wreg,f,c
  5935  000278  D7FE               	bra	i2u572_47
  5936  00027A  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  5937  00027C  D7FC               	bra	i2u572_47
  5938  00027E  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5939  000280  D7FA               	bra	i2u572_47
  5940  000282  F000               	nop	
  5941                           
  5942                           ;main.c: 410: resetSection();
  5943  000284  ECB7  F00B         	call	_resetSection	;wreg free
  5944                           
  5945                           ;main.c: 411: }
  5946                           ;main.c: 413: } else if (k == '2'){
  5947  000288  D1C5               	goto	i2l266
  5948  00028A                     i2l219:
  5949  00028A  0E32               	movlw	50
  5950  00028C  1821               	xorwf	interruptHandler@k,w,c
  5951  00028E  A4D8               	btfss	status,2,c
  5952  000290  D005               	goto	i2l223
  5953  000292                     i2u311_40:
  5954                           
  5955                           ;main.c: 414: prevPills = numPills;
  5956  000292  C048  F046         	movff	_numPills,_prevPills
  5957  000296  C049  F047         	movff	_numPills+1,_prevPills+1
  5958  00029A  D760               	goto	i2l3392
  5959  00029C                     i2l223:
  5960  00029C  0E33               	movlw	51
  5961  00029E  1821               	xorwf	interruptHandler@k,w,c
  5962  0002A0  B4D8               	btfsc	status,2,c
  5963  0002A2  D024               	goto	i2u321_40
  5964  0002A4  0E45               	movlw	69
  5965  0002A6  1821               	xorwf	interruptHandler@k,w,c
  5966  0002A8  B4D8               	btfsc	status,2,c
  5967  0002AA  D020               	goto	i2u321_40
  5968  0002AC  0E53               	movlw	83
  5969  0002AE  1821               	xorwf	interruptHandler@k,w,c
  5970  0002B0  B4D8               	btfsc	status,2,c
  5971  0002B2  D01C               	goto	i2u321_40
  5972  0002B4  0E4D               	movlw	77
  5973  0002B6  1821               	xorwf	interruptHandler@k,w,c
  5974  0002B8  B4D8               	btfsc	status,2,c
  5975  0002BA  D018               	goto	i2u321_40
  5976  0002BC  0E46               	movlw	70
  5977  0002BE  1821               	xorwf	interruptHandler@k,w,c
  5978  0002C0  B4D8               	btfsc	status,2,c
  5979  0002C2  D014               	goto	i2u321_40
  5980  0002C4  0E4F               	movlw	79
  5981  0002C6  1821               	xorwf	interruptHandler@k,w,c
  5982  0002C8  B4D8               	btfsc	status,2,c
  5983  0002CA  D010               	goto	i2u321_40
  5984  0002CC  0E41               	movlw	65
  5985  0002CE  1821               	xorwf	interruptHandler@k,w,c
  5986  0002D0  B4D8               	btfsc	status,2,c
  5987  0002D2  D00C               	goto	i2u321_40
  5988  0002D4  0E42               	movlw	66
  5989  0002D6  1821               	xorwf	interruptHandler@k,w,c
  5990  0002D8  B4D8               	btfsc	status,2,c
  5991  0002DA  D008               	goto	i2u321_40
  5992  0002DC  0E4C               	movlw	76
  5993  0002DE  1821               	xorwf	interruptHandler@k,w,c
  5994  0002E0  B4D8               	btfsc	status,2,c
  5995  0002E2  D004               	goto	i2u321_40
  5996  0002E4  0E4E               	movlw	78
  5997  0002E6  1821               	xorwf	interruptHandler@k,w,c
  5998  0002E8  A4D8               	btfss	status,2,c
  5999  0002EA  D194               	goto	i2l266
  6000  0002EC                     i2u321_40:
  6001                           
  6002                           ;main.c: 418: lcdInst(0xC0);;
  6003  0002EC  0EC0               	movlw	192
  6004  0002EE  EC04  F00F         	call	i2_lcdInst
  6005                           
  6006                           ;main.c: 419: _delay((unsigned long)((100)*(40000000/4000.0)));
  6007  0002F2  0E06               	movlw	6
  6008  0002F4  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6009  0002F6  0E13               	movlw	19
  6010  0002F8  6E0A               	movwf	??_interruptHandler& (0+255),c
  6011  0002FA  0EAE               	movlw	174
  6012  0002FC                     i2u573_47:
  6013  0002FC  2EE8               	decfsz	wreg,f,c
  6014  0002FE  D7FE               	bra	i2u573_47
  6015  000300  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6016  000302  D7FC               	bra	i2u573_47
  6017  000304  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6018  000306  D7FA               	bra	i2u573_47
  6019                           
  6020                           ;main.c: 420: printf("Invalid input");
  6021  000308  0E20               	movlw	low STR_34
  6022  00030A  6E04               	movwf	i2printf@f,c
  6023  00030C  0EFF               	movlw	high STR_34
  6024  00030E  6E05               	movwf	i2printf@f+1,c
  6025  000310  ECC2  F00E         	call	i2_printf	;wreg free
  6026                           
  6027                           ;main.c: 421: _delay((unsigned long)((2000)*(40000000/4000.0)));
  6028  000314  0E66               	movlw	102
  6029  000316  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6030  000318  0E76               	movlw	118
  6031  00031A  6E0A               	movwf	??_interruptHandler& (0+255),c
  6032  00031C  0EC1               	movlw	193
  6033  00031E                     i2u574_47:
  6034  00031E  2EE8               	decfsz	wreg,f,c
  6035  000320  D7FE               	bra	i2u574_47
  6036  000322  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6037  000324  D7FC               	bra	i2u574_47
  6038  000326  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6039  000328  D7FA               	bra	i2u574_47
  6040  00032A  F000               	nop	
  6041                           
  6042                           ;main.c: 422: resetSection();
  6043  00032C  ECB7  F00B         	call	_resetSection	;wreg free
  6044                           
  6045                           ;main.c: 423: }
  6046                           ;main.c: 424: }
  6047  000330  D171               	goto	i2l266
  6048  000332                     i2l218:
  6049                           
  6050                           ;main.c: 425: else if (x == 3){
  6051  000332  0E03               	movlw	3
  6052  000334  1851               	xorwf	_x,w,c
  6053  000336  A4D8               	btfss	status,2,c
  6054  000338  D0A8               	goto	i2l229
  6055                           
  6056                           ;main.c: 426: prevPills = numPills;
  6057  00033A  C048  F046         	movff	_numPills,_prevPills
  6058  00033E  C049  F047         	movff	_numPills+1,_prevPills+1
  6059                           
  6060                           ;main.c: 427: if(k == '1' || k == '2' || k == '3'){
  6061  000342  0E31               	movlw	49
  6062  000344  1821               	xorwf	interruptHandler@k,w,c
  6063  000346  B4D8               	btfsc	status,2,c
  6064  000348  D059               	goto	i2l237
  6065  00034A  0E32               	movlw	50
  6066  00034C  1821               	xorwf	interruptHandler@k,w,c
  6067  00034E  B4D8               	btfsc	status,2,c
  6068  000350  D055               	goto	i2l237
  6069  000352  0E33               	movlw	51
  6070  000354  1821               	xorwf	interruptHandler@k,w,c
  6071  000356  B4D8               	btfsc	status,2,c
  6072  000358  D051               	goto	i2l237
  6073                           
  6074                           ;main.c: 429: } else if (k == 'E' || k == 'S' || k == 'M' || k == 'F' || k == 'O' || k =
      +                          = 'A' || k == 'B' || k == 'L' || k == 'N'){
  6075  00035A  0E45               	movlw	69
  6076  00035C  1821               	xorwf	interruptHandler@k,w,c
  6077  00035E  B4D8               	btfsc	status,2,c
  6078  000360  D020               	goto	i2u334_40
  6079  000362  0E53               	movlw	83
  6080  000364  1821               	xorwf	interruptHandler@k,w,c
  6081  000366  B4D8               	btfsc	status,2,c
  6082  000368  D01C               	goto	i2u334_40
  6083  00036A  0E4D               	movlw	77
  6084  00036C  1821               	xorwf	interruptHandler@k,w,c
  6085  00036E  B4D8               	btfsc	status,2,c
  6086  000370  D018               	goto	i2u334_40
  6087  000372  0E46               	movlw	70
  6088  000374  1821               	xorwf	interruptHandler@k,w,c
  6089  000376  B4D8               	btfsc	status,2,c
  6090  000378  D014               	goto	i2u334_40
  6091  00037A  0E4F               	movlw	79
  6092  00037C  1821               	xorwf	interruptHandler@k,w,c
  6093  00037E  B4D8               	btfsc	status,2,c
  6094  000380  D010               	goto	i2u334_40
  6095  000382  0E41               	movlw	65
  6096  000384  1821               	xorwf	interruptHandler@k,w,c
  6097  000386  B4D8               	btfsc	status,2,c
  6098  000388  D00C               	goto	i2u334_40
  6099  00038A  0E42               	movlw	66
  6100  00038C  1821               	xorwf	interruptHandler@k,w,c
  6101  00038E  B4D8               	btfsc	status,2,c
  6102  000390  D008               	goto	i2u334_40
  6103  000392  0E4C               	movlw	76
  6104  000394  1821               	xorwf	interruptHandler@k,w,c
  6105  000396  B4D8               	btfsc	status,2,c
  6106  000398  D004               	goto	i2u334_40
  6107  00039A  0E4E               	movlw	78
  6108  00039C  1821               	xorwf	interruptHandler@k,w,c
  6109  00039E  A4D8               	btfss	status,2,c
  6110  0003A0  D02D               	goto	i2l237
  6111  0003A2                     i2u334_40:
  6112                           
  6113                           ;main.c: 430: lcdInst(0xC0);;
  6114  0003A2  0EC0               	movlw	192
  6115  0003A4  EC04  F00F         	call	i2_lcdInst
  6116                           
  6117                           ;main.c: 431: _delay((unsigned long)((100)*(40000000/4000.0)));
  6118  0003A8  0E06               	movlw	6
  6119  0003AA  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6120  0003AC  0E13               	movlw	19
  6121  0003AE  6E0A               	movwf	??_interruptHandler& (0+255),c
  6122  0003B0  0EAE               	movlw	174
  6123  0003B2                     i2u575_47:
  6124  0003B2  2EE8               	decfsz	wreg,f,c
  6125  0003B4  D7FE               	bra	i2u575_47
  6126  0003B6  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6127  0003B8  D7FC               	bra	i2u575_47
  6128  0003BA  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6129  0003BC  D7FA               	bra	i2u575_47
  6130                           
  6131                           ;main.c: 432: printf("Invalid input");
  6132  0003BE  0E20               	movlw	low STR_34
  6133  0003C0  6E04               	movwf	i2printf@f,c
  6134  0003C2  0EFF               	movlw	high STR_34
  6135  0003C4  6E05               	movwf	i2printf@f+1,c
  6136  0003C6  ECC2  F00E         	call	i2_printf	;wreg free
  6137                           
  6138                           ;main.c: 433: _delay((unsigned long)((2000)*(40000000/4000.0)));
  6139  0003CA  0E66               	movlw	102
  6140  0003CC  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6141  0003CE  0E76               	movlw	118
  6142  0003D0  6E0A               	movwf	??_interruptHandler& (0+255),c
  6143  0003D2  0EC1               	movlw	193
  6144  0003D4                     i2u576_47:
  6145  0003D4  2EE8               	decfsz	wreg,f,c
  6146  0003D6  D7FE               	bra	i2u576_47
  6147  0003D8  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6148  0003DA  D7FC               	bra	i2u576_47
  6149  0003DC  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6150  0003DE  D7FA               	bra	i2u576_47
  6151  0003E0  F000               	nop	
  6152                           
  6153                           ;main.c: 434: resetSection();
  6154  0003E2  ECB7  F00B         	call	_resetSection	;wreg free
  6155                           
  6156                           ;main.c: 435: }
  6157                           ;main.c: 436: switch(k){
  6158  0003E6  D00A               	goto	i2l237
  6159  0003E8                     
  6160                           ;main.c: 438: numPills++;
  6161  0003E8  4A48               	infsnz	_numPills,f,c
  6162  0003EA  2A49               	incf	_numPills+1,f,c
  6163                           
  6164                           ;main.c: 439: break;
  6165  0003EC  D011               	goto	i2l239
  6166  0003EE                     
  6167                           ;main.c: 441: numPills+=2;
  6168  0003EE  0E02               	movlw	2
  6169  0003F0  D001               	goto	L12
  6170  0003F2                     
  6171                           ;main.c: 444: numPills+=3;
  6172  0003F2  0E03               	movlw	3
  6173  0003F4                     L12:
  6174  0003F4  2648               	addwf	_numPills,f,c
  6175  0003F6  0E00               	movlw	0
  6176  0003F8  2249               	addwfc	_numPills+1,f,c
  6177                           
  6178                           ;main.c: 446: }
  6179                           
  6180                           ;main.c: 445: break;
  6181  0003FA  D00A               	goto	i2l239
  6182  0003FC                     i2l237:
  6183  0003FC  5021               	movf	interruptHandler@k,w,c
  6184                           
  6185                           ; Switch size 1, requested type "space"
  6186                           ; Number of cases is 3, Range of values is 49 to 51
  6187                           ; switch strategies available:
  6188                           ; Name         Instructions Cycles
  6189                           ; simple_byte           10     6 (average)
  6190                           ;	Chosen strategy is simple_byte
  6191  0003FE  0A31               	xorlw	49	; case 49
  6192  000400  B4D8               	btfsc	status,2,c
  6193  000402  D7F2               	goto	i2l238
  6194  000404  0A03               	xorlw	3	; case 50
  6195  000406  B4D8               	btfsc	status,2,c
  6196  000408  D7F2               	goto	i2l240
  6197  00040A  0A01               	xorlw	1	; case 51
  6198  00040C  B4D8               	btfsc	status,2,c
  6199  00040E  D7F1               	goto	i2l241
  6200  000410                     i2l239:
  6201                           
  6202                           ;main.c: 447: if(numPills < 5){
  6203  000410  BE49               	btfsc	_numPills+1,7,c
  6204  000412  D006               	goto	i2u335_40
  6205  000414  5049               	movf	_numPills+1,w,c
  6206  000416  E116               	bnz	i2l3540
  6207  000418  0E05               	movlw	5
  6208  00041A  5C48               	subwf	_numPills,w,c
  6209  00041C  B0D8               	btfsc	status,0,c
  6210  00041E  D012               	goto	i2l242
  6211  000420                     i2u335_40:
  6212                           
  6213                           ;main.c: 448: num_pills_L_data = k;
  6214  000420  C021  F03F         	movff	interruptHandler@k,_num_pills_L_data
  6215                           
  6216                           ;main.c: 449: if(num_pills_L_data == '1'){
  6217  000424  0E31               	movlw	49
  6218  000426  183F               	xorwf	_num_pills_L_data,w,c
  6219  000428  A4D8               	btfss	status,2,c
  6220  00042A  D0F4               	goto	i2l266
  6221                           
  6222                           ;main.c: 451: _delay((unsigned long)((1000)*(40000000/4000.0)));
  6223  00042C  0E33               	movlw	51
  6224  00042E  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6225  000430  0EBB               	movlw	187
  6226  000432  6E0A               	movwf	??_interruptHandler& (0+255),c
  6227  000434  0EE0               	movlw	224
  6228  000436                     i2u577_47:
  6229  000436  2EE8               	decfsz	wreg,f,c
  6230  000438  D7FE               	bra	i2u577_47
  6231  00043A  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6232  00043C  D7FC               	bra	i2u577_47
  6233  00043E  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6234  000440  D7FA               	bra	i2u577_47
  6235                           
  6236                           ;main.c: 452: }
  6237                           ;main.c: 454: } else{
  6238  000442  D0E8               	goto	i2l266
  6239  000444                     i2l242:
  6240  000444                     i2l3540:
  6241                           
  6242                           ;main.c: 455: lcdInst(0xC0);;
  6243  000444  0EC0               	movlw	192
  6244  000446  EC04  F00F         	call	i2_lcdInst
  6245                           
  6246                           ;main.c: 456: _delay((unsigned long)((100)*(40000000/4000.0)));
  6247  00044A  0E06               	movlw	6
  6248  00044C  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6249  00044E  0E13               	movlw	19
  6250  000450  6E0A               	movwf	??_interruptHandler& (0+255),c
  6251  000452  0EAE               	movlw	174
  6252  000454                     i2u578_47:
  6253  000454  2EE8               	decfsz	wreg,f,c
  6254  000456  D7FE               	bra	i2u578_47
  6255  000458  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6256  00045A  D7FC               	bra	i2u578_47
  6257  00045C  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6258  00045E  D7FA               	bra	i2u578_47
  6259                           
  6260                           ;main.c: 457: printf("Invalid input");
  6261  000460  0E20               	movlw	low STR_34
  6262  000462  6E04               	movwf	i2printf@f,c
  6263  000464  0EFF               	movlw	high STR_34
  6264  000466  6E05               	movwf	i2printf@f+1,c
  6265  000468  ECC2  F00E         	call	i2_printf	;wreg free
  6266                           
  6267                           ;main.c: 458: _delay((unsigned long)((2000)*(40000000/4000.0)));
  6268  00046C  0E66               	movlw	102
  6269  00046E  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6270  000470  0E76               	movlw	118
  6271  000472  6E0A               	movwf	??_interruptHandler& (0+255),c
  6272  000474  0EC1               	movlw	193
  6273  000476                     i2u579_47:
  6274  000476  2EE8               	decfsz	wreg,f,c
  6275  000478  D7FE               	bra	i2u579_47
  6276  00047A  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6277  00047C  D7FC               	bra	i2u579_47
  6278  00047E  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6279  000480  D7FA               	bra	i2u579_47
  6280  000482  F000               	nop	
  6281                           
  6282                           ;main.c: 459: resetSection();
  6283  000484  ECB7  F00B         	call	_resetSection	;wreg free
  6284                           
  6285                           ;main.c: 460: }
  6286                           ;main.c: 461: }
  6287  000488  D0C5               	goto	i2l266
  6288  00048A                     i2l229:
  6289                           
  6290                           ;main.c: 462: else if (x == 4){
  6291  00048A  0E04               	movlw	4
  6292  00048C  1851               	xorwf	_x,w,c
  6293  00048E  A4D8               	btfss	status,2,c
  6294  000490  D060               	goto	i2l246
  6295                           
  6296                           ;main.c: 464: if(k == 'O'){
  6297  000492  0E4F               	movlw	79
  6298  000494  1821               	xorwf	interruptHandler@k,w,c
  6299  000496  A4D8               	btfss	status,2,c
  6300  000498  D002               	goto	i2l247
  6301                           
  6302                           ;main.c: 465: repetition_data = '1';
  6303  00049A  0E31               	movlw	49
  6304  00049C  D011               	goto	L15
  6305  00049E                     i2l247:
  6306  00049E  0E41               	movlw	65
  6307  0004A0  1821               	xorwf	interruptHandler@k,w,c
  6308  0004A2  A4D8               	btfss	status,2,c
  6309  0004A4  D002               	goto	i2l249
  6310                           
  6311                           ;main.c: 467: repetition_data = '2';
  6312  0004A6  0E32               	movlw	50
  6313  0004A8  D00B               	goto	L15
  6314  0004AA                     i2l249:
  6315  0004AA  0E42               	movlw	66
  6316  0004AC  1821               	xorwf	interruptHandler@k,w,c
  6317  0004AE  A4D8               	btfss	status,2,c
  6318  0004B0  D002               	goto	i2l251
  6319                           
  6320                           ;main.c: 469: repetition_data = '3';
  6321  0004B2  0E33               	movlw	51
  6322  0004B4  D005               	goto	L15
  6323  0004B6                     i2l251:
  6324  0004B6  0E4E               	movlw	78
  6325  0004B8  1821               	xorwf	interruptHandler@k,w,c
  6326  0004BA  A4D8               	btfss	status,2,c
  6327  0004BC  D003               	goto	i2l253
  6328                           
  6329                           ;main.c: 471: repetition_data = '4';
  6330  0004BE  0E34               	movlw	52
  6331  0004C0                     L15:
  6332  0004C0  6E4E               	movwf	_repetition_data,c
  6333                           
  6334                           ;main.c: 472: } else if(k == '1' || k == '2' || k == '3' || k == 'E' || k == 'S' || k ==
      +                           'M' || k == 'F' || k == 'L'|| k == 'R'){
  6335  0004C2  D0A8               	goto	i2l266
  6336  0004C4                     i2l253:
  6337  0004C4  0E31               	movlw	49
  6338  0004C6  1821               	xorwf	interruptHandler@k,w,c
  6339  0004C8  B4D8               	btfsc	status,2,c
  6340  0004CA  D020               	goto	i2u350_40
  6341  0004CC  0E32               	movlw	50
  6342  0004CE  1821               	xorwf	interruptHandler@k,w,c
  6343  0004D0  B4D8               	btfsc	status,2,c
  6344  0004D2  D01C               	goto	i2u350_40
  6345  0004D4  0E33               	movlw	51
  6346  0004D6  1821               	xorwf	interruptHandler@k,w,c
  6347  0004D8  B4D8               	btfsc	status,2,c
  6348  0004DA  D018               	goto	i2u350_40
  6349  0004DC  0E45               	movlw	69
  6350  0004DE  1821               	xorwf	interruptHandler@k,w,c
  6351  0004E0  B4D8               	btfsc	status,2,c
  6352  0004E2  D014               	goto	i2u350_40
  6353  0004E4  0E53               	movlw	83
  6354  0004E6  1821               	xorwf	interruptHandler@k,w,c
  6355  0004E8  B4D8               	btfsc	status,2,c
  6356  0004EA  D010               	goto	i2u350_40
  6357  0004EC  0E4D               	movlw	77
  6358  0004EE  1821               	xorwf	interruptHandler@k,w,c
  6359  0004F0  B4D8               	btfsc	status,2,c
  6360  0004F2  D00C               	goto	i2u350_40
  6361  0004F4  0E46               	movlw	70
  6362  0004F6  1821               	xorwf	interruptHandler@k,w,c
  6363  0004F8  B4D8               	btfsc	status,2,c
  6364  0004FA  D008               	goto	i2u350_40
  6365  0004FC  0E4C               	movlw	76
  6366  0004FE  1821               	xorwf	interruptHandler@k,w,c
  6367  000500  B4D8               	btfsc	status,2,c
  6368  000502  D004               	goto	i2u350_40
  6369  000504  0E52               	movlw	82
  6370  000506  1821               	xorwf	interruptHandler@k,w,c
  6371  000508  A4D8               	btfss	status,2,c
  6372  00050A  D084               	goto	i2l266
  6373  00050C                     i2u350_40:
  6374                           
  6375                           ;main.c: 473: lcdInst(0xC0);;
  6376  00050C  0EC0               	movlw	192
  6377  00050E  EC04  F00F         	call	i2_lcdInst
  6378                           
  6379                           ;main.c: 474: _delay((unsigned long)((100)*(40000000/4000.0)));
  6380  000512  0E06               	movlw	6
  6381  000514  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6382  000516  0E13               	movlw	19
  6383  000518  6E0A               	movwf	??_interruptHandler& (0+255),c
  6384  00051A  0EAE               	movlw	174
  6385  00051C                     i2u580_47:
  6386  00051C  2EE8               	decfsz	wreg,f,c
  6387  00051E  D7FE               	bra	i2u580_47
  6388  000520  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6389  000522  D7FC               	bra	i2u580_47
  6390  000524  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6391  000526  D7FA               	bra	i2u580_47
  6392                           
  6393                           ;main.c: 475: printf("Invalid input");
  6394  000528  0E20               	movlw	low STR_34
  6395  00052A  6E04               	movwf	i2printf@f,c
  6396  00052C  0EFF               	movlw	high STR_34
  6397  00052E  6E05               	movwf	i2printf@f+1,c
  6398  000530  ECC2  F00E         	call	i2_printf	;wreg free
  6399                           
  6400                           ;main.c: 476: _delay((unsigned long)((2000)*(40000000/4000.0)));
  6401  000534  0E66               	movlw	102
  6402  000536  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6403  000538  0E76               	movlw	118
  6404  00053A  6E0A               	movwf	??_interruptHandler& (0+255),c
  6405  00053C  0EC1               	movlw	193
  6406  00053E                     i2u581_47:
  6407  00053E  2EE8               	decfsz	wreg,f,c
  6408  000540  D7FE               	bra	i2u581_47
  6409  000542  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6410  000544  D7FC               	bra	i2u581_47
  6411  000546  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6412  000548  D7FA               	bra	i2u581_47
  6413  00054A  F000               	nop	
  6414                           
  6415                           ;main.c: 477: resetSection();
  6416  00054C  ECB7  F00B         	call	_resetSection	;wreg free
  6417                           
  6418                           ;main.c: 478: }
  6419                           ;main.c: 481: } else if (x == 5){
  6420  000550  D061               	goto	i2l266
  6421  000552                     i2l246:
  6422  000552  0E05               	movlw	5
  6423  000554  1851               	xorwf	_x,w,c
  6424  000556  A4D8               	btfss	status,2,c
  6425  000558  D05D               	goto	i2l266
  6426                           
  6427                           ;main.c: 483: if(k == 'E'){
  6428  00055A  0E45               	movlw	69
  6429  00055C  1821               	xorwf	interruptHandler@k,w,c
  6430  00055E  A4D8               	btfss	status,2,c
  6431  000560  D002               	goto	i2l260
  6432                           
  6433                           ;main.c: 484: frequency_data = '1';
  6434  000562  0E31               	movlw	49
  6435  000564  D00B               	goto	L17
  6436  000566                     i2l260:
  6437  000566  0E53               	movlw	83
  6438  000568  1821               	xorwf	interruptHandler@k,w,c
  6439  00056A  A4D8               	btfss	status,2,c
  6440  00056C  D002               	goto	i2l262
  6441                           
  6442                           ;main.c: 486: frequency_data = '2';
  6443  00056E  0E32               	movlw	50
  6444  000570  D005               	goto	L17
  6445  000572                     i2l262:
  6446  000572  0E4D               	movlw	77
  6447  000574  1821               	xorwf	interruptHandler@k,w,c
  6448  000576  A4D8               	btfss	status,2,c
  6449  000578  D003               	goto	i2l264
  6450                           
  6451                           ;main.c: 488: frequency_data = '3';
  6452  00057A  0E33               	movlw	51
  6453  00057C                     L17:
  6454  00057C  6E4D               	movwf	_frequency_data,c
  6455                           
  6456                           ;main.c: 489: } else if(k == '3' || k == '1' || k == '2' || k == 'R' || k == 'F' || k ==
      +                           'O' || k == 'A' || k == 'B' || k == 'L' || k == 'N'){
  6457  00057E  D04A               	goto	i2l266
  6458  000580                     i2l264:
  6459  000580  0E33               	movlw	51
  6460  000582  1821               	xorwf	interruptHandler@k,w,c
  6461  000584  B4D8               	btfsc	status,2,c
  6462  000586  D024               	goto	i2u364_40
  6463  000588  0E31               	movlw	49
  6464  00058A  1821               	xorwf	interruptHandler@k,w,c
  6465  00058C  B4D8               	btfsc	status,2,c
  6466  00058E  D020               	goto	i2u364_40
  6467  000590  0E32               	movlw	50
  6468  000592  1821               	xorwf	interruptHandler@k,w,c
  6469  000594  B4D8               	btfsc	status,2,c
  6470  000596  D01C               	goto	i2u364_40
  6471  000598  0E52               	movlw	82
  6472  00059A  1821               	xorwf	interruptHandler@k,w,c
  6473  00059C  B4D8               	btfsc	status,2,c
  6474  00059E  D018               	goto	i2u364_40
  6475  0005A0  0E46               	movlw	70
  6476  0005A2  1821               	xorwf	interruptHandler@k,w,c
  6477  0005A4  B4D8               	btfsc	status,2,c
  6478  0005A6  D014               	goto	i2u364_40
  6479  0005A8  0E4F               	movlw	79
  6480  0005AA  1821               	xorwf	interruptHandler@k,w,c
  6481  0005AC  B4D8               	btfsc	status,2,c
  6482  0005AE  D010               	goto	i2u364_40
  6483  0005B0  0E41               	movlw	65
  6484  0005B2  1821               	xorwf	interruptHandler@k,w,c
  6485  0005B4  B4D8               	btfsc	status,2,c
  6486  0005B6  D00C               	goto	i2u364_40
  6487  0005B8  0E42               	movlw	66
  6488  0005BA  1821               	xorwf	interruptHandler@k,w,c
  6489  0005BC  B4D8               	btfsc	status,2,c
  6490  0005BE  D008               	goto	i2u364_40
  6491  0005C0  0E4C               	movlw	76
  6492  0005C2  1821               	xorwf	interruptHandler@k,w,c
  6493  0005C4  B4D8               	btfsc	status,2,c
  6494  0005C6  D004               	goto	i2u364_40
  6495  0005C8  0E4E               	movlw	78
  6496  0005CA  1821               	xorwf	interruptHandler@k,w,c
  6497  0005CC  A4D8               	btfss	status,2,c
  6498  0005CE  D022               	goto	i2l266
  6499  0005D0                     i2u364_40:
  6500                           
  6501                           ;main.c: 490: lcdInst(0xC0);;
  6502  0005D0  0EC0               	movlw	192
  6503  0005D2  EC04  F00F         	call	i2_lcdInst
  6504                           
  6505                           ;main.c: 491: _delay((unsigned long)((100)*(40000000/4000.0)));
  6506  0005D6  0E06               	movlw	6
  6507  0005D8  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6508  0005DA  0E13               	movlw	19
  6509  0005DC  6E0A               	movwf	??_interruptHandler& (0+255),c
  6510  0005DE  0EAE               	movlw	174
  6511  0005E0                     i2u582_47:
  6512  0005E0  2EE8               	decfsz	wreg,f,c
  6513  0005E2  D7FE               	bra	i2u582_47
  6514  0005E4  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6515  0005E6  D7FC               	bra	i2u582_47
  6516  0005E8  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6517  0005EA  D7FA               	bra	i2u582_47
  6518                           
  6519                           ;main.c: 492: printf("Invalid input");
  6520  0005EC  0E20               	movlw	low STR_34
  6521  0005EE  6E04               	movwf	i2printf@f,c
  6522  0005F0  0EFF               	movlw	high STR_34
  6523  0005F2  6E05               	movwf	i2printf@f+1,c
  6524  0005F4  ECC2  F00E         	call	i2_printf	;wreg free
  6525                           
  6526                           ;main.c: 493: _delay((unsigned long)((2000)*(40000000/4000.0)));
  6527  0005F8  0E66               	movlw	102
  6528  0005FA  6E0B               	movwf	(??_interruptHandler+1)& (0+255),c
  6529  0005FC  0E76               	movlw	118
  6530  0005FE  6E0A               	movwf	??_interruptHandler& (0+255),c
  6531  000600  0EC1               	movlw	193
  6532  000602                     i2u583_47:
  6533  000602  2EE8               	decfsz	wreg,f,c
  6534  000604  D7FE               	bra	i2u583_47
  6535  000606  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6536  000608  D7FC               	bra	i2u583_47
  6537  00060A  2E0B               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  6538  00060C  D7FA               	bra	i2u583_47
  6539  00060E  F000               	nop	
  6540                           
  6541                           ;main.c: 494: resetSection();
  6542  000610  ECB7  F00B         	call	_resetSection	;wreg free
  6543  000614                     i2l266:
  6544                           
  6545                           ;main.c: 495: }
  6546                           ;main.c: 496: }
  6547                           ;main.c: 499: if(keypress == 0x0F) {
  6548  000614  0E0F               	movlw	15
  6549  000616  1820               	xorwf	interruptHandler@keypress,w,c
  6550  000618  A4D8               	btfss	status,2,c
  6551  00061A  D085               	goto	i2l269
  6552                           
  6553                           ;main.c: 502: unsigned char keypress = (PORTB & 0xF0) >> 4;
  6554  00061C  3881               	swapf	3969,w,c	;volatile
  6555  00061E  0B0F               	andlw	15
  6556  000620  0B0F               	andlw	15
  6557  000622  6E1F               	movwf	interruptHandler@keypress_374,c
  6558                           
  6559                           ;main.c: 503: char k = keys[keypress];
  6560  000624  501F               	movf	interruptHandler@keypress_374,w,c
  6561  000626  0D01               	mullw	1
  6562  000628  0E47               	movlw	low _keys
  6563  00062A  24F3               	addwf	prodl,w,c
  6564  00062C  6EF6               	movwf	tblptrl,c
  6565  00062E  0EFE               	movlw	high _keys
  6566  000630  20F4               	addwfc	prodh,w,c
  6567  000632  6EF7               	movwf	tblptrh,c
  6568  000634                     	if	0	;There are less than 3 active tblptr bytes
  6569  000634                     	endif
  6570  000634  0008               	tblrd		*
  6571  000636  CFF5 F01E          	movff	tablat,interruptHandler@k_375
  6572                           
  6573                           ;main.c: 504: switch(x){
  6574  00063A  D061               	goto	i2l270
  6575  00063C                     
  6576                           ;main.c: 506: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6577  00063C  0E01               	movlw	1
  6578  00063E  EC04  F00F         	call	i2_lcdInst
  6579  000642  0EC3               	movlw	195
  6580  000644  6E0A               	movwf	??_interruptHandler& (0+255),c
  6581  000646  0ECD               	movlw	205
  6582  000648                     i2u584_47:
  6583  000648  2EE8               	decfsz	wreg,f,c
  6584  00064A  D7FE               	bra	i2u584_47
  6585  00064C  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6586  00064E  D7FC               	bra	i2u584_47
  6587  000650  F000               	nop	
  6588                           
  6589                           ;main.c: 508: savePrescriptionInfo();
  6590  000652  EC49  F00C         	call	_savePrescriptionInfo	;wreg free
  6591                           
  6592                           ;main.c: 509: x = 1;
  6593  000656  0E01               	movlw	1
  6594  000658  D044               	goto	L22
  6595  00065A                     
  6596                           ;main.c: 515: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6597  00065A  0E01               	movlw	1
  6598  00065C  EC04  F00F         	call	i2_lcdInst
  6599  000660  0EC3               	movlw	195
  6600  000662  6E0A               	movwf	??_interruptHandler& (0+255),c
  6601  000664  0ECD               	movlw	205
  6602  000666                     i2u585_47:
  6603  000666  2EE8               	decfsz	wreg,f,c
  6604  000668  D7FE               	bra	i2u585_47
  6605  00066A  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6606  00066C  D7FC               	bra	i2u585_47
  6607  00066E  F000               	nop	
  6608                           
  6609                           ;main.c: 517: x = 2;
  6610  000670  0E02               	movlw	2
  6611  000672  D037               	goto	L22
  6612  000674                     
  6613                           ;main.c: 526: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6614  000674  0E01               	movlw	1
  6615  000676  EC04  F00F         	call	i2_lcdInst
  6616  00067A  0EC3               	movlw	195
  6617  00067C  6E0A               	movwf	??_interruptHandler& (0+255),c
  6618  00067E  0ECD               	movlw	205
  6619  000680                     i2u586_47:
  6620  000680  2EE8               	decfsz	wreg,f,c
  6621  000682  D7FE               	bra	i2u586_47
  6622  000684  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6623  000686  D7FC               	bra	i2u586_47
  6624  000688  F000               	nop	
  6625                           
  6626                           ;main.c: 528: x = 2;
  6627  00068A  0E02               	movlw	2
  6628  00068C  6E51               	movwf	_x,c
  6629                           
  6630                           ;main.c: 533: x = 3;
  6631  00068E  0E03               	movlw	3
  6632  000690  D028               	goto	L22
  6633  000692                     
  6634                           ;main.c: 537: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6635  000692  0E01               	movlw	1
  6636  000694  EC04  F00F         	call	i2_lcdInst
  6637  000698  0EC3               	movlw	195
  6638  00069A  6E0A               	movwf	??_interruptHandler& (0+255),c
  6639  00069C  0ECD               	movlw	205
  6640  00069E                     i2u587_47:
  6641  00069E  2EE8               	decfsz	wreg,f,c
  6642  0006A0  D7FE               	bra	i2u587_47
  6643  0006A2  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6644  0006A4  D7FC               	bra	i2u587_47
  6645  0006A6  F000               	nop	
  6646                           
  6647                           ;main.c: 540: x = 2;
  6648  0006A8  0E02               	movlw	2
  6649  0006AA  6E51               	movwf	_x,c
  6650                           
  6651                           ;main.c: 545: x=4;
  6652  0006AC  0E04               	movlw	4
  6653  0006AE  D019               	goto	L22
  6654  0006B0                     
  6655                           ;main.c: 549: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6656  0006B0  0E01               	movlw	1
  6657  0006B2  EC04  F00F         	call	i2_lcdInst
  6658  0006B6  0EC3               	movlw	195
  6659  0006B8  6E0A               	movwf	??_interruptHandler& (0+255),c
  6660  0006BA  0ECD               	movlw	205
  6661  0006BC                     i2u588_47:
  6662  0006BC  2EE8               	decfsz	wreg,f,c
  6663  0006BE  D7FE               	bra	i2u588_47
  6664  0006C0  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6665  0006C2  D7FC               	bra	i2u588_47
  6666  0006C4  F000               	nop	
  6667                           
  6668                           ;main.c: 550: x = 5;
  6669  0006C6  0E05               	movlw	5
  6670  0006C8  D00C               	goto	L22
  6671  0006CA                     
  6672                           ;main.c: 553: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6673  0006CA  0E01               	movlw	1
  6674  0006CC  EC04  F00F         	call	i2_lcdInst
  6675  0006D0  0EC3               	movlw	195
  6676  0006D2  6E0A               	movwf	??_interruptHandler& (0+255),c
  6677  0006D4  0ECD               	movlw	205
  6678  0006D6                     i2u589_47:
  6679  0006D6  2EE8               	decfsz	wreg,f,c
  6680  0006D8  D7FE               	bra	i2u589_47
  6681  0006DA  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6682  0006DC  D7FC               	bra	i2u589_47
  6683  0006DE  D00D               	goto	L23
  6684  0006E0                     i2l3686:
  6685                           
  6686                           ;main.c: 554: x = 6;
  6687  0006E0  0E06               	movlw	6
  6688  0006E2                     L22:
  6689  0006E2  6E51               	movwf	_x,c
  6690                           
  6691                           ;main.c: 555: break;
  6692  0006E4  D03A               	goto	i2l282
  6693  0006E6                     
  6694                           ;main.c: 557: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6695  0006E6  0E01               	movlw	1
  6696  0006E8  EC04  F00F         	call	i2_lcdInst
  6697  0006EC  0EC3               	movlw	195
  6698  0006EE  6E0A               	movwf	??_interruptHandler& (0+255),c
  6699  0006F0  0ECD               	movlw	205
  6700  0006F2                     i2u590_47:
  6701  0006F2  2EE8               	decfsz	wreg,f,c
  6702  0006F4  D7FE               	bra	i2u590_47
  6703  0006F6  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6704  0006F8  D7FC               	bra	i2u590_47
  6705  0006FA                     L23:
  6706  0006FA  F000               	nop	
  6707  0006FC  D7F1               	goto	i2l3686
  6708  0006FE                     i2l270:
  6709  0006FE  5051               	movf	_x,w,c
  6710                           
  6711                           ; Switch size 1, requested type "space"
  6712                           ; Number of cases is 6, Range of values is 0 to 5
  6713                           ; switch strategies available:
  6714                           ; Name         Instructions Cycles
  6715                           ; simple_byte           19    10 (average)
  6716                           ;	Chosen strategy is simple_byte
  6717  000700  0A00               	xorlw	0	; case 0
  6718  000702  B4D8               	btfsc	status,2,c
  6719  000704  D79B               	goto	i2l271
  6720  000706  0A01               	xorlw	1	; case 1
  6721  000708  B4D8               	btfsc	status,2,c
  6722  00070A  D7A7               	goto	i2l273
  6723  00070C  0A03               	xorlw	3	; case 2
  6724  00070E  B4D8               	btfsc	status,2,c
  6725  000710  D7B1               	goto	i2l274
  6726  000712  0A01               	xorlw	1	; case 3
  6727  000714  B4D8               	btfsc	status,2,c
  6728  000716  D7BD               	goto	i2l275
  6729  000718  0A07               	xorlw	7	; case 4
  6730  00071A  B4D8               	btfsc	status,2,c
  6731  00071C  D7C9               	goto	i2l276
  6732  00071E  0A01               	xorlw	1	; case 5
  6733  000720  B4D8               	btfsc	status,2,c
  6734  000722  D7D3               	goto	i2l277
  6735  000724  D7E0               	goto	i2l278
  6736  000726                     i2l269:
  6737                           
  6738                           ;main.c: 561: else if (keypress == 0x0E){
  6739  000726  0E0E               	movlw	14
  6740  000728  1820               	xorwf	interruptHandler@keypress,w,c
  6741  00072A  A4D8               	btfss	status,2,c
  6742  00072C  D003               	goto	i2l280
  6743                           
  6744                           ;main.c: 564: resetSection();
  6745  00072E  ECB7  F00B         	call	_resetSection	;wreg free
  6746                           
  6747                           ;main.c: 565: }
  6748  000732  D013               	goto	i2l282
  6749  000734                     i2l280:
  6750                           
  6751                           ;main.c: 567: else if (keypress == 0x0C){
  6752  000734  0E0C               	movlw	12
  6753  000736  1820               	xorwf	interruptHandler@keypress,w,c
  6754  000738  A4D8               	btfss	status,2,c
  6755  00073A  D00F               	goto	i2l282
  6756                           
  6757                           ;main.c: 569: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  6758  00073C  0E01               	movlw	1
  6759  00073E  EC04  F00F         	call	i2_lcdInst
  6760  000742  0EC3               	movlw	195
  6761  000744  6E0A               	movwf	??_interruptHandler& (0+255),c
  6762  000746  0ECD               	movlw	205
  6763  000748                     i2u591_47:
  6764  000748  2EE8               	decfsz	wreg,f,c
  6765  00074A  D7FE               	bra	i2u591_47
  6766  00074C  2E0A               	decfsz	??_interruptHandler& (0+255),f,c
  6767  00074E  D7FC               	bra	i2u591_47
  6768  000750  F000               	nop	
  6769                           
  6770                           ;main.c: 570: x = 9;
  6771  000752  0E09               	movlw	9
  6772  000754  6E51               	movwf	_x,c
  6773                           
  6774                           ;main.c: 571: reset = 1;
  6775  000756  0E01               	movlw	1
  6776  000758  6E50               	movwf	_reset,c
  6777  00075A                     i2l282:
  6778                           
  6779                           ;main.c: 573: }
  6780                           ;main.c: 577: INT1IF = 0;
  6781  00075A  90F0               	bcf	intcon3,0,c	;volatile
  6782  00075C                     i2l199:
  6783  00075C  C01D  F061         	movff	??_interruptHandler+19,btemp+3
  6784  000760  C01C  F060         	movff	??_interruptHandler+18,btemp+2
  6785  000764  C01B  F05F         	movff	??_interruptHandler+17,btemp+1
  6786  000768  C01A  F05E         	movff	??_interruptHandler+16,btemp
  6787  00076C  C019  FFF5         	movff	??_interruptHandler+15,tablat
  6788  000770  C018  FFF8         	movff	??_interruptHandler+14,tblptru
  6789  000774  C017  FFF7         	movff	??_interruptHandler+13,tblptrh
  6790  000778  C016  FFF6         	movff	??_interruptHandler+12,tblptrl
  6791  00077C  C015  FFF4         	movff	??_interruptHandler+11,prodh
  6792  000780  C014  FFF3         	movff	??_interruptHandler+10,prodl
  6793  000784  C013  FFDA         	movff	??_interruptHandler+9,fsr2h
  6794  000788  C012  FFD9         	movff	??_interruptHandler+8,fsr2l
  6795  00078C  C011  FFE2         	movff	??_interruptHandler+7,fsr1h
  6796  000790  C010  FFE1         	movff	??_interruptHandler+6,fsr1l
  6797  000794  C00F  FFEA         	movff	??_interruptHandler+5,fsr0h
  6798  000798  C00E  FFE9         	movff	??_interruptHandler+4,fsr0l
  6799  00079C  C00D  FFFB         	movff	??_interruptHandler+3,pclatu
  6800  0007A0  C00C  FFFA         	movff	??_interruptHandler+2,pclath
  6801  0007A4  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6802  0007A6  0011               	retfie		f
  6803  0007A8                     __end_of_interruptHandler:
  6804                           	opt stack 0
  6805                           pclatu	equ	0xFFB
  6806                           pclath	equ	0xFFA
  6807                           tblptru	equ	0xFF8
  6808                           tblptrh	equ	0xFF7
  6809                           tblptrl	equ	0xFF6
  6810                           tablat	equ	0xFF5
  6811                           prodh	equ	0xFF4
  6812                           prodl	equ	0xFF3
  6813                           intcon	equ	0xFF2
  6814                           intcon3	equ	0xFF0
  6815                           postinc0	equ	0xFEE
  6816                           fsr0h	equ	0xFEA
  6817                           fsr0l	equ	0xFE9
  6818                           wreg	equ	0xFE8
  6819                           postdec1	equ	0xFE5
  6820                           fsr1h	equ	0xFE2
  6821                           fsr1l	equ	0xFE1
  6822                           indf2	equ	0xFDF
  6823                           postinc2	equ	0xFDE
  6824                           fsr2h	equ	0xFDA
  6825                           fsr2l	equ	0xFD9
  6826                           status	equ	0xFD8
  6827                           
  6828 ;; *************** function _savePrescriptionInfo *****************
  6829 ;; Defined at:
  6830 ;;		line 47 in file "operation.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_interruptHandler
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text14
  6858  001892                     __ptext14:
  6859                           	opt stack 0
  6860  001892                     _savePrescriptionInfo:
  6861                           	opt stack 25
  6862                           
  6863                           ;operation.c: 49: if(prescription[0] == 'R' && prescription[1] == 'x' && prescription[2]
      +                           == 'x'){
  6864                           
  6865                           ;incstack = 0
  6866  001892  0E52               	movlw	82
  6867  001894  1834               	xorwf	_prescription,w,c
  6868  001896  A4D8               	btfss	status,2,c
  6869  001898  D00B               	goto	i2l413
  6870  00189A  0E78               	movlw	120
  6871  00189C  1835               	xorwf	_prescription+1,w,c
  6872  00189E  A4D8               	btfss	status,2,c
  6873  0018A0  D007               	goto	i2l413
  6874  0018A2  0E78               	movlw	120
  6875  0018A4  1836               	xorwf	_prescription+2,w,c
  6876  0018A6  A4D8               	btfss	status,2,c
  6877  0018A8  D003               	goto	i2l413
  6878                           
  6879                           ;operation.c: 51: prescription_data = '1';
  6880  0018AA  0E31               	movlw	49
  6881  0018AC  6E4F               	movwf	_prescription_data,c
  6882                           
  6883                           ;operation.c: 52: } else if(prescription[0] == 'x' && prescription[1] == 'F' && prescrip
      +                          tion[2] == 'x'){
  6884  0018AE  0012               	return	
  6885  0018B0                     i2l413:
  6886  0018B0  0E78               	movlw	120
  6887  0018B2  1834               	xorwf	_prescription,w,c
  6888  0018B4  A4D8               	btfss	status,2,c
  6889  0018B6  D00B               	goto	i2l415
  6890  0018B8  0E46               	movlw	70
  6891  0018BA  1835               	xorwf	_prescription+1,w,c
  6892  0018BC  A4D8               	btfss	status,2,c
  6893  0018BE  D007               	goto	i2l415
  6894  0018C0  0E78               	movlw	120
  6895  0018C2  1836               	xorwf	_prescription+2,w,c
  6896  0018C4  A4D8               	btfss	status,2,c
  6897  0018C6  D003               	goto	i2l415
  6898                           
  6899                           ;operation.c: 53: prescription_data = '2';
  6900  0018C8  0E32               	movlw	50
  6901  0018CA  6E4F               	movwf	_prescription_data,c
  6902                           
  6903                           ;operation.c: 54: } else if(prescription[0] == 'x' && prescription[1] == 'x' && prescrip
      +                          tion[2] == 'L'){
  6904  0018CC  0012               	return	
  6905  0018CE                     i2l415:
  6906  0018CE  0E78               	movlw	120
  6907  0018D0  1834               	xorwf	_prescription,w,c
  6908  0018D2  A4D8               	btfss	status,2,c
  6909  0018D4  D00B               	goto	i2l417
  6910  0018D6  0E78               	movlw	120
  6911  0018D8  1835               	xorwf	_prescription+1,w,c
  6912  0018DA  A4D8               	btfss	status,2,c
  6913  0018DC  D007               	goto	i2l417
  6914  0018DE  0E4C               	movlw	76
  6915  0018E0  1836               	xorwf	_prescription+2,w,c
  6916  0018E2  A4D8               	btfss	status,2,c
  6917  0018E4  D003               	goto	i2l417
  6918                           
  6919                           ;operation.c: 55: prescription_data = '3';
  6920  0018E6  0E33               	movlw	51
  6921  0018E8  6E4F               	movwf	_prescription_data,c
  6922                           
  6923                           ;operation.c: 56: } else if(prescription[0] == 'R' && prescription[1] == 'F' && prescrip
      +                          tion[2] == 'x'){
  6924  0018EA  0012               	return	
  6925  0018EC                     i2l417:
  6926  0018EC  0E52               	movlw	82
  6927  0018EE  1834               	xorwf	_prescription,w,c
  6928  0018F0  A4D8               	btfss	status,2,c
  6929  0018F2  D00B               	goto	i2l419
  6930  0018F4  0E46               	movlw	70
  6931  0018F6  1835               	xorwf	_prescription+1,w,c
  6932  0018F8  A4D8               	btfss	status,2,c
  6933  0018FA  D007               	goto	i2l419
  6934  0018FC  0E78               	movlw	120
  6935  0018FE  1836               	xorwf	_prescription+2,w,c
  6936  001900  A4D8               	btfss	status,2,c
  6937  001902  D003               	goto	i2l419
  6938                           
  6939                           ;operation.c: 57: prescription_data = '4';
  6940  001904  0E34               	movlw	52
  6941  001906  6E4F               	movwf	_prescription_data,c
  6942                           
  6943                           ;operation.c: 58: } else if(prescription[0] == 'R' && prescription[1] == 'L' && prescrip
      +                          tion[2] == 'x'){
  6944  001908  0012               	return	
  6945  00190A                     i2l419:
  6946  00190A  0E52               	movlw	82
  6947  00190C  1834               	xorwf	_prescription,w,c
  6948  00190E  A4D8               	btfss	status,2,c
  6949  001910  D00B               	goto	i2l421
  6950  001912  0E4C               	movlw	76
  6951  001914  1835               	xorwf	_prescription+1,w,c
  6952  001916  A4D8               	btfss	status,2,c
  6953  001918  D007               	goto	i2l421
  6954  00191A  0E78               	movlw	120
  6955  00191C  1836               	xorwf	_prescription+2,w,c
  6956  00191E  A4D8               	btfss	status,2,c
  6957  001920  D003               	goto	i2l421
  6958                           
  6959                           ;operation.c: 59: prescription_data = '5';
  6960  001922  0E35               	movlw	53
  6961  001924  6E4F               	movwf	_prescription_data,c
  6962                           
  6963                           ;operation.c: 60: } else if(prescription[0] == 'x' && prescription[1] == 'F' && prescrip
      +                          tion[2] == 'L'){
  6964  001926  0012               	return	
  6965  001928                     i2l421:
  6966  001928  0E78               	movlw	120
  6967  00192A  1834               	xorwf	_prescription,w,c
  6968  00192C  A4D8               	btfss	status,2,c
  6969  00192E  D00B               	goto	i2l423
  6970  001930  0E46               	movlw	70
  6971  001932  1835               	xorwf	_prescription+1,w,c
  6972  001934  A4D8               	btfss	status,2,c
  6973  001936  D007               	goto	i2l423
  6974  001938  0E4C               	movlw	76
  6975  00193A  1836               	xorwf	_prescription+2,w,c
  6976  00193C  A4D8               	btfss	status,2,c
  6977  00193E  D003               	goto	i2l423
  6978                           
  6979                           ;operation.c: 61: prescription_data = '6';
  6980  001940  0E36               	movlw	54
  6981  001942  6E4F               	movwf	_prescription_data,c
  6982                           
  6983                           ;operation.c: 62: } else if(prescription[0] == 'R' && prescription[1] == 'F' && prescrip
      +                          tion[2] == 'L'){
  6984  001944  0012               	return	
  6985  001946                     i2l423:
  6986  001946  0E52               	movlw	82
  6987  001948  1834               	xorwf	_prescription,w,c
  6988  00194A  A4D8               	btfss	status,2,c
  6989  00194C  0012               	return	
  6990  00194E  0E46               	movlw	70
  6991  001950  1835               	xorwf	_prescription+1,w,c
  6992  001952  A4D8               	btfss	status,2,c
  6993  001954  0012               	return	
  6994  001956  0E4C               	movlw	76
  6995  001958  1836               	xorwf	_prescription+2,w,c
  6996  00195A  A4D8               	btfss	status,2,c
  6997  00195C  0012               	return	
  6998                           
  6999                           ;operation.c: 63: prescription_data = '7';
  7000  00195E  0E37               	movlw	55
  7001  001960  6E4F               	movwf	_prescription_data,c
  7002  001962  0012               	return	
  7003  001964                     __end_of_savePrescriptionInfo:
  7004                           	opt stack 0
  7005                           pclatu	equ	0xFFB
  7006                           pclath	equ	0xFFA
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           intcon3	equ	0xFF0
  7015                           postinc0	equ	0xFEE
  7016                           fsr0h	equ	0xFEA
  7017                           fsr0l	equ	0xFE9
  7018                           wreg	equ	0xFE8
  7019                           postdec1	equ	0xFE5
  7020                           fsr1h	equ	0xFE2
  7021                           fsr1l	equ	0xFE1
  7022                           indf2	equ	0xFDF
  7023                           postinc2	equ	0xFDE
  7024                           fsr2h	equ	0xFDA
  7025                           fsr2l	equ	0xFD9
  7026                           status	equ	0xFD8
  7027                           
  7028 ;; *************** function _resetSection *****************
  7029 ;; Defined at:
  7030 ;;		line 24 in file "main.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;		None
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      void 
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;Total ram usage:        1 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:    3
  7051 ;; This function calls:
  7052 ;;		i2_lcdInst
  7053 ;;		i2_printf
  7054 ;; This function is called by:
  7055 ;;		_interruptHandler
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text15
  7060  00176E                     __ptext15:
  7061                           	opt stack 0
  7062  00176E                     _resetSection:
  7063                           	opt stack 22
  7064                           
  7065                           ;main.c: 26: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  7066                           
  7067                           ;incstack = 0
  7068  00176E  0E01               	movlw	1
  7069  001770  EC04  F00F         	call	i2_lcdInst
  7070  001774  0EC3               	movlw	195
  7071  001776  6E09               	movwf	??_resetSection& (0+255),c
  7072  001778  0ECD               	movlw	205
  7073  00177A                     i2u592_47:
  7074  00177A  2EE8               	decfsz	wreg,f,c
  7075  00177C  D7FE               	bra	i2u592_47
  7076  00177E  2E09               	decfsz	??_resetSection& (0+255),f,c
  7077  001780  D7FC               	bra	i2u592_47
  7078  001782  F000               	nop	
  7079                           
  7080                           ;main.c: 30: switch(x){
  7081  001784  D072               	goto	i2l115
  7082  001786                     
  7083                           ;main.c: 32: prescription[0] = 'x';
  7084  001786  0E78               	movlw	120
  7085  001788  6E34               	movwf	_prescription,c
  7086                           
  7087                           ;main.c: 33: prescription[1] = 'x';
  7088  00178A  0E78               	movlw	120
  7089  00178C  6E35               	movwf	_prescription+1,c
  7090                           
  7091                           ;main.c: 34: prescription[2] = 'x';
  7092  00178E  0E78               	movlw	120
  7093  001790  6E36               	movwf	_prescription+2,c
  7094                           
  7095                           ;main.c: 35: printf("Prescription: ");
  7096  001792  0EB7               	movlw	low STR_1
  7097  001794  6E04               	movwf	i2printf@f,c
  7098  001796  0EFE               	movlw	high STR_1
  7099  001798  6E05               	movwf	i2printf@f+1,c
  7100  00179A  ECC2  F00E         	call	i2_printf	;wreg free
  7101                           
  7102                           ;main.c: 36: lcdInst(0xC0);;
  7103  00179E  0EC0               	movlw	192
  7104  0017A0  EC04  F00F         	call	i2_lcdInst
  7105                           
  7106                           ;main.c: 37: break;
  7107  0017A4  0012               	return	
  7108  0017A6                     
  7109                           ;main.c: 39: numPills -= prevPills;
  7110  0017A6  5046               	movf	_prevPills,w,c
  7111  0017A8  5E48               	subwf	_numPills,f,c
  7112  0017AA  5047               	movf	_prevPills+1,w,c
  7113  0017AC  5A49               	subwfb	_numPills+1,f,c
  7114                           
  7115                           ;main.c: 40: num_pills_R_data = '0';
  7116  0017AE  0E30               	movlw	48
  7117  0017B0  6E41               	movwf	_num_pills_R_data,c
  7118                           
  7119                           ;main.c: 41: printf("# of R pills: ");
  7120  0017B2  0E02               	movlw	low STR_2
  7121  0017B4  6E04               	movwf	i2printf@f,c
  7122  0017B6  0EFF               	movlw	high STR_2
  7123  0017B8  6E05               	movwf	i2printf@f+1,c
  7124  0017BA  ECC2  F00E         	call	i2_printf	;wreg free
  7125                           
  7126                           ;main.c: 42: lcdInst(0xC0);;
  7127  0017BE  0EC0               	movlw	192
  7128  0017C0  EC04  F00F         	call	i2_lcdInst
  7129                           
  7130                           ;main.c: 43: break;
  7131  0017C4  0012               	return	
  7132  0017C6                     
  7133                           ;main.c: 45: numPills -= prevPills;
  7134  0017C6  5046               	movf	_prevPills,w,c
  7135  0017C8  5E48               	subwf	_numPills,f,c
  7136  0017CA  5047               	movf	_prevPills+1,w,c
  7137  0017CC  5A49               	subwfb	_numPills+1,f,c
  7138                           
  7139                           ;main.c: 46: num_pills_F_data = '0';
  7140  0017CE  0E30               	movlw	48
  7141  0017D0  6E40               	movwf	_num_pills_F_data,c
  7142                           
  7143                           ;main.c: 47: printf("# of F pills: ");
  7144  0017D2  0EE4               	movlw	low STR_3
  7145  0017D4  6E04               	movwf	i2printf@f,c
  7146  0017D6  0EFE               	movlw	high STR_3
  7147  0017D8  6E05               	movwf	i2printf@f+1,c
  7148  0017DA  ECC2  F00E         	call	i2_printf	;wreg free
  7149                           
  7150                           ;main.c: 48: lcdInst(0xC0);;
  7151  0017DE  0EC0               	movlw	192
  7152  0017E0  EC04  F00F         	call	i2_lcdInst
  7153                           
  7154                           ;main.c: 49: break;
  7155  0017E4  0012               	return	
  7156  0017E6                     
  7157                           ;main.c: 51: num_pills_L_data = '0';
  7158  0017E6  0E30               	movlw	48
  7159  0017E8  6E3F               	movwf	_num_pills_L_data,c
  7160                           
  7161                           ;main.c: 52: numPills -= prevPills;
  7162  0017EA  5046               	movf	_prevPills,w,c
  7163  0017EC  5E48               	subwf	_numPills,f,c
  7164  0017EE  5047               	movf	_prevPills+1,w,c
  7165  0017F0  5A49               	subwfb	_numPills+1,f,c
  7166                           
  7167                           ;main.c: 54: printf("# of L pills: ");
  7168  0017F2  0EF3               	movlw	low STR_4
  7169  0017F4  6E04               	movwf	i2printf@f,c
  7170  0017F6  0EFE               	movlw	high STR_4
  7171  0017F8  6E05               	movwf	i2printf@f+1,c
  7172  0017FA  ECC2  F00E         	call	i2_printf	;wreg free
  7173                           
  7174                           ;main.c: 56: lcdInst(0xC0);;
  7175  0017FE  0EC0               	movlw	192
  7176  001800  EC04  F00F         	call	i2_lcdInst
  7177                           
  7178                           ;main.c: 58: lcdInst(0xC0);;
  7179  001804  0EC0               	movlw	192
  7180  001806  EC04  F00F         	call	i2_lcdInst
  7181                           
  7182                           ;main.c: 60: break;
  7183  00180A  0012               	return	
  7184  00180C                     
  7185                           ;main.c: 62: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  7186  00180C  0E01               	movlw	1
  7187  00180E  EC04  F00F         	call	i2_lcdInst
  7188  001812  0EC3               	movlw	195
  7189  001814  6E09               	movwf	??_resetSection& (0+255),c
  7190  001816  0ECD               	movlw	205
  7191  001818                     i2u593_47:
  7192  001818  2EE8               	decfsz	wreg,f,c
  7193  00181A  D7FE               	bra	i2u593_47
  7194  00181C  2E09               	decfsz	??_resetSection& (0+255),f,c
  7195  00181E  D7FC               	bra	i2u593_47
  7196  001820  F000               	nop	
  7197                           
  7198                           ;main.c: 63: frequency_data = '0';
  7199  001822  0E30               	movlw	48
  7200  001824  6E4D               	movwf	_frequency_data,c
  7201                           
  7202                           ;main.c: 66: printf("Repetition/Day: ");
  7203  001826  0E96               	movlw	low STR_5
  7204  001828  6E04               	movwf	i2printf@f,c
  7205  00182A  0EFE               	movlw	high STR_5
  7206  00182C  6E05               	movwf	i2printf@f+1,c
  7207  00182E  ECC2  F00E         	call	i2_printf	;wreg free
  7208                           
  7209                           ;main.c: 67: lcdInst(0xC0);;
  7210  001832  0EC0               	movlw	192
  7211  001834  EC04  F00F         	call	i2_lcdInst
  7212                           
  7213                           ;main.c: 68: break;
  7214  001838  0012               	return	
  7215  00183A                     
  7216                           ;main.c: 70: repetition_data = '0';
  7217  00183A  0E30               	movlw	48
  7218  00183C  6E4E               	movwf	_repetition_data,c
  7219                           
  7220                           ;main.c: 71: printf("Day Frequency: ");
  7221  00183E  0EA7               	movlw	low STR_6
  7222  001840  6E04               	movwf	i2printf@f,c
  7223  001842  0EFE               	movlw	high STR_6
  7224  001844  6E05               	movwf	i2printf@f+1,c
  7225  001846  ECC2  F00E         	call	i2_printf	;wreg free
  7226                           
  7227                           ;main.c: 72: lcdInst(0xC0);;
  7228  00184A  0EC0               	movlw	192
  7229  00184C  EC04  F00F         	call	i2_lcdInst
  7230                           
  7231                           ;main.c: 73: break;
  7232  001850  0012               	return	
  7233  001852                     
  7234                           ;main.c: 75: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  7235  001852  0E01               	movlw	1
  7236  001854  EC04  F00F         	call	i2_lcdInst
  7237  001858  0EC3               	movlw	195
  7238  00185A  6E09               	movwf	??_resetSection& (0+255),c
  7239  00185C  0ECD               	movlw	205
  7240  00185E                     i2u594_47:
  7241  00185E  2EE8               	decfsz	wreg,f,c
  7242  001860  D7FE               	bra	i2u594_47
  7243  001862  2E09               	decfsz	??_resetSection& (0+255),f,c
  7244  001864  D7FC               	bra	i2u594_47
  7245  001866  F000               	nop	
  7246                           
  7247                           ;main.c: 76: }
  7248  001868  0012               	return	
  7249  00186A                     i2l115:
  7250  00186A  5051               	movf	_x,w,c
  7251                           
  7252                           ; Switch size 1, requested type "space"
  7253                           ; Number of cases is 6, Range of values is 0 to 5
  7254                           ; switch strategies available:
  7255                           ; Name         Instructions Cycles
  7256                           ; simple_byte           19    10 (average)
  7257                           ;	Chosen strategy is simple_byte
  7258  00186C  0A00               	xorlw	0	; case 0
  7259  00186E  B4D8               	btfsc	status,2,c
  7260  001870  D78A               	goto	i2l116
  7261  001872  0A01               	xorlw	1	; case 1
  7262  001874  B4D8               	btfsc	status,2,c
  7263  001876  D797               	goto	i2l118
  7264  001878  0A03               	xorlw	3	; case 2
  7265  00187A  B4D8               	btfsc	status,2,c
  7266  00187C  D7A4               	goto	i2l119
  7267  00187E  0A01               	xorlw	1	; case 3
  7268  001880  B4D8               	btfsc	status,2,c
  7269  001882  D7B1               	goto	i2l120
  7270  001884  0A07               	xorlw	7	; case 4
  7271  001886  B4D8               	btfsc	status,2,c
  7272  001888  D7C1               	goto	i2l121
  7273  00188A  0A01               	xorlw	1	; case 5
  7274  00188C  B4D8               	btfsc	status,2,c
  7275  00188E  D7D5               	goto	i2l122
  7276  001890  D7E0               	goto	i2l123
  7277  001892                     __end_of_resetSection:
  7278                           	opt stack 0
  7279                           pclatu	equ	0xFFB
  7280                           pclath	equ	0xFFA
  7281                           tblptru	equ	0xFF8
  7282                           tblptrh	equ	0xFF7
  7283                           tblptrl	equ	0xFF6
  7284                           tablat	equ	0xFF5
  7285                           prodh	equ	0xFF4
  7286                           prodl	equ	0xFF3
  7287                           intcon	equ	0xFF2
  7288                           intcon3	equ	0xFF0
  7289                           postinc0	equ	0xFEE
  7290                           fsr0h	equ	0xFEA
  7291                           fsr0l	equ	0xFE9
  7292                           wreg	equ	0xFE8
  7293                           postdec1	equ	0xFE5
  7294                           fsr1h	equ	0xFE2
  7295                           fsr1l	equ	0xFE1
  7296                           indf2	equ	0xFDF
  7297                           postinc2	equ	0xFDE
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function i2_printf *****************
  7303 ;; Defined at:
  7304 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  f               2    3[COMRAM] PTR const unsigned char 
  7307 ;;		 -> STR_48(11), STR_47(11), STR_46(11), STR_45(11), 
  7308 ;;		 -> STR_44(11), STR_43(11), STR_42(11), STR_41(14), 
  7309 ;;		 -> STR_40(14), STR_39(14), STR_38(14), STR_37(14), 
  7310 ;;		 -> STR_36(14), STR_35(14), STR_34(14), STR_33(11), 
  7311 ;;		 -> STR_32(8), STR_31(15), STR_30(20), STR_29(10), 
  7312 ;;		 -> STR_28(8), STR_27(18), STR_26(18), STR_25(9), 
  7313 ;;		 -> STR_24(10), STR_23(9), STR_22(10), STR_21(10), 
  7314 ;;		 -> STR_20(9), STR_19(10), STR_18(10), STR_17(9), 
  7315 ;;		 -> STR_16(10), STR_15(16), STR_14(17), STR_13(2), 
  7316 ;;		 -> STR_12(3), STR_11(3), STR_10(15), STR_9(15), 
  7317 ;;		 -> STR_8(15), STR_7(15), STR_6(16), STR_5(17), 
  7318 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(15), 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  printf          4    0        struct .
  7321 ;;  printf          3    0        PTR const unsigned char 
  7322 ;;  printf          2    5[COMRAM] PTR void [1]
  7323 ;;		 -> ?i2_printf(2), ?_printf(2), 
  7324 ;;  printf          2    0        unsigned int 
  7325 ;;  printf          2    0        unsigned int 
  7326 ;;  printf          1    7[COMRAM] char 
  7327 ;;  printf          1    0        unsigned char 
  7328 ;;  printf          1    0        char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    3[COMRAM] int 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;Total ram usage:        5 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    2
  7345 ;; This function calls:
  7346 ;;		i2_putch
  7347 ;; This function is called by:
  7348 ;;		_resetSection
  7349 ;;		_interruptHandler
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text16
  7354  001D84                     __ptext16:
  7355                           	opt stack 0
  7356  001D84                     i2_printf:
  7357                           	opt stack 23
  7358                           
  7359                           ;doprnt.c: 466: va_list ap;
  7360                           ;doprnt.c: 499: signed char c;
  7361                           ;doprnt.c: 506: signed char prec;
  7362                           ;doprnt.c: 508: unsigned char flag;
  7363                           ;doprnt.c: 523: union {
  7364                           ;doprnt.c: 524: unsigned long vd;
  7365                           ;doprnt.c: 525: double integ;
  7366                           ;doprnt.c: 526: } tmpval;
  7367                           ;doprnt.c: 528: unsigned int val;
  7368                           ;doprnt.c: 529: unsigned len;
  7369                           ;doprnt.c: 530: const char * cp;
  7370                           ;doprnt.c: 533: *ap = __va_start();
  7371                           
  7372                           ;incstack = 0
  7373  001D84  0E06               	movlw	low (?i2_printf+2)
  7374  001D86  6E06               	movwf	i2printf@ap,c
  7375  001D88  0E00               	movlw	high (?i2_printf+2)
  7376  001D8A  6E07               	movwf	i2printf@ap+1,c
  7377                           
  7378                           ;doprnt.c: 536: while(c = *f++) {
  7379  001D8C  D003               	goto	i2l625
  7380  001D8E                     
  7381                           ;doprnt.c: 540: {
  7382                           ;doprnt.c: 541: (putch(c) );
  7383  001D8E  5008               	movf	i2printf@c,w,c
  7384  001D90  ECFA  F00E         	call	i2_putch
  7385  001D94                     i2l625:
  7386  001D94  C004  FFF6         	movff	i2printf@f,tblptrl
  7387  001D98  C005  FFF7         	movff	i2printf@f+1,tblptrh
  7388  001D9C  4A04               	infsnz	i2printf@f,f,c
  7389  001D9E  2A05               	incf	i2printf@f+1,f,c
  7390  001DA0                     	if	0	;tblptru may be non-zero
  7391  001DA0                     	endif
  7392  001DA0                     	if	0	;tblptru may be non-zero
  7393  001DA0                     	endif
  7394  001DA0  0008               	tblrd		*
  7395  001DA2  CFF5 F008          	movff	tablat,i2printf@c
  7396  001DA6  5008               	movf	i2printf@c,w,c
  7397  001DA8  B4D8               	btfsc	status,2,c
  7398  001DAA  0012               	return	
  7399  001DAC  D7F0               	goto	i2l626
  7400  001DAE                     __end_ofi2_printf:
  7401                           	opt stack 0
  7402                           pclatu	equ	0xFFB
  7403                           pclath	equ	0xFFA
  7404                           tblptru	equ	0xFF8
  7405                           tblptrh	equ	0xFF7
  7406                           tblptrl	equ	0xFF6
  7407                           tablat	equ	0xFF5
  7408                           prodh	equ	0xFF4
  7409                           prodl	equ	0xFF3
  7410                           intcon	equ	0xFF2
  7411                           intcon3	equ	0xFF0
  7412                           postinc0	equ	0xFEE
  7413                           fsr0h	equ	0xFEA
  7414                           fsr0l	equ	0xFE9
  7415                           wreg	equ	0xFE8
  7416                           postdec1	equ	0xFE5
  7417                           fsr1h	equ	0xFE2
  7418                           fsr1l	equ	0xFE1
  7419                           indf2	equ	0xFDF
  7420                           postinc2	equ	0xFDE
  7421                           fsr2h	equ	0xFDA
  7422                           fsr2l	equ	0xFD9
  7423                           status	equ	0xFD8
  7424                           
  7425 ;; *************** function i2_putch *****************
  7426 ;; Defined at:
  7427 ;;		line 27 in file "lcd.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  data            1    wreg     unsigned char 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  data            1    2[COMRAM] unsigned char 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;Total ram usage:        1 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    1
  7448 ;; This function calls:
  7449 ;;		i2_lcdNibble
  7450 ;; This function is called by:
  7451 ;;		_interruptHandler
  7452 ;;		i2_printf
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text17
  7457  001DF4                     __ptext17:
  7458                           	opt stack 0
  7459  001DF4                     i2_putch:
  7460                           	opt stack 24
  7461                           
  7462                           ;incstack = 0
  7463                           ;i2putch@data stored from wreg
  7464  001DF4  6E03               	movwf	i2putch@data,c
  7465                           
  7466                           ;lcd.c: 35: LATDbits.LATD2 = 1;
  7467  001DF6  848C               	bsf	3980,2,c	;volatile
  7468                           
  7469                           ;lcd.c: 36: lcdNibble(data);
  7470  001DF8  5003               	movf	i2putch@data,w,c
  7471  001DFA  ECEC  F00D         	call	i2_lcdNibble
  7472                           
  7473                           ;lcd.c: 37: _delay((unsigned long)((100)*(40000000/4000000.0)));
  7474  001DFE  0EC8               	movlw	200
  7475  001E00                     i2u595_47:
  7476  001E00  D000               	nop2	
  7477  001E02  2EE8               	decfsz	wreg,f,c
  7478  001E04  D7FD               	bra	i2u595_47
  7479  001E06  0012               	return		;funcret
  7480  001E08                     __end_ofi2_putch:
  7481                           	opt stack 0
  7482                           pclatu	equ	0xFFB
  7483                           pclath	equ	0xFFA
  7484                           tblptru	equ	0xFF8
  7485                           tblptrh	equ	0xFF7
  7486                           tblptrl	equ	0xFF6
  7487                           tablat	equ	0xFF5
  7488                           prodh	equ	0xFF4
  7489                           prodl	equ	0xFF3
  7490                           intcon	equ	0xFF2
  7491                           intcon3	equ	0xFF0
  7492                           postinc0	equ	0xFEE
  7493                           fsr0h	equ	0xFEA
  7494                           fsr0l	equ	0xFE9
  7495                           wreg	equ	0xFE8
  7496                           postdec1	equ	0xFE5
  7497                           fsr1h	equ	0xFE2
  7498                           fsr1l	equ	0xFE1
  7499                           indf2	equ	0xFDF
  7500                           postinc2	equ	0xFDE
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8
  7504                           
  7505 ;; *************** function i2_lcdInst *****************
  7506 ;; Defined at:
  7507 ;;		line 14 in file "lcd.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  data            1    wreg     unsigned char 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  data            1    2[COMRAM] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;Total ram usage:        1 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    1
  7528 ;; This function calls:
  7529 ;;		i2_lcdNibble
  7530 ;; This function is called by:
  7531 ;;		_resetSection
  7532 ;;		_interruptHandler
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text18
  7537  001E08                     __ptext18:
  7538                           	opt stack 0
  7539  001E08                     i2_lcdInst:
  7540                           	opt stack 24
  7541                           
  7542                           ;incstack = 0
  7543                           ;i2lcdInst@data stored from wreg
  7544  001E08  6E03               	movwf	i2lcdInst@data,c
  7545                           
  7546                           ;lcd.c: 22: LATDbits.LATD2 = 0;
  7547  001E0A  948C               	bcf	3980,2,c	;volatile
  7548                           
  7549                           ;lcd.c: 23: lcdNibble(data);
  7550  001E0C  5003               	movf	i2lcdInst@data,w,c
  7551  001E0E  ECEC  F00D         	call	i2_lcdNibble
  7552                           
  7553                           ;lcd.c: 24: _delay((unsigned long)((100)*(40000000/4000000.0)));
  7554  001E12  0EC8               	movlw	200
  7555  001E14                     i2u596_47:
  7556  001E14  D000               	nop2	
  7557  001E16  2EE8               	decfsz	wreg,f,c
  7558  001E18  D7FD               	bra	i2u596_47
  7559  001E1A  0012               	return		;funcret
  7560  001E1C                     __end_ofi2_lcdInst:
  7561                           	opt stack 0
  7562                           pclatu	equ	0xFFB
  7563                           pclath	equ	0xFFA
  7564                           tblptru	equ	0xFF8
  7565                           tblptrh	equ	0xFF7
  7566                           tblptrl	equ	0xFF6
  7567                           tablat	equ	0xFF5
  7568                           prodh	equ	0xFF4
  7569                           prodl	equ	0xFF3
  7570                           intcon	equ	0xFF2
  7571                           intcon3	equ	0xFF0
  7572                           postinc0	equ	0xFEE
  7573                           fsr0h	equ	0xFEA
  7574                           fsr0l	equ	0xFE9
  7575                           wreg	equ	0xFE8
  7576                           postdec1	equ	0xFE5
  7577                           fsr1h	equ	0xFE2
  7578                           fsr1l	equ	0xFE1
  7579                           indf2	equ	0xFDF
  7580                           postinc2	equ	0xFDE
  7581                           fsr2h	equ	0xFDA
  7582                           fsr2l	equ	0xFD9
  7583                           status	equ	0xFD8
  7584                           
  7585 ;; *************** function i2_lcdNibble *****************
  7586 ;; Defined at:
  7587 ;;		line 40 in file "lcd.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  data            1    wreg     unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  data            1    1[COMRAM] unsigned char 
  7592 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;Total ram usage:        2 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		i2_lcdInst
  7612 ;;		i2_putch
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text19
  7617  001BD8                     __ptext19:
  7618                           	opt stack 0
  7619  001BD8                     i2_lcdNibble:
  7620                           	opt stack 24
  7621                           
  7622                           ;incstack = 0
  7623                           ;i2lcdNibble@data stored from wreg
  7624  001BD8  6E02               	movwf	i2lcdNibble@data,c
  7625                           
  7626                           ;lcd.c: 48: char temp = (unsigned char) (data & 0xF0);
  7627  001BDA  5002               	movf	i2lcdNibble@data,w,c
  7628  001BDC  0BF0               	andlw	240
  7629  001BDE  6E01               	movwf	i2lcdNibble@temp,c
  7630                           
  7631                           ;lcd.c: 49: LATD = (unsigned char) (LATD & 0x0F);
  7632  001BE0  508C               	movf	3980,w,c	;volatile
  7633  001BE2  0B0F               	andlw	15
  7634  001BE4  6E8C               	movwf	3980,c	;volatile
  7635                           
  7636                           ;lcd.c: 50: LATD = (unsigned char) (temp | LATD);
  7637  001BE6  5001               	movf	i2lcdNibble@temp,w,c
  7638  001BE8  108C               	iorwf	3980,w,c	;volatile
  7639  001BEA  6E8C               	movwf	3980,c	;volatile
  7640                           
  7641                           ;lcd.c: 52: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  7642  001BEC  0E00               	movlw	0
  7643  001BEE  BEF2               	btfsc	intcon,7,c	;volatile
  7644  001BF0  0E01               	movlw	1
  7645  001BF2  6E4A               	movwf	_LCDinterruptState,c
  7646  001BF4  9EF2               	bcf	intcon,7,c	;volatile
  7647  001BF6  868C               	bsf	3980,3,c	;volatile
  7648  001BF8  0E53               	movlw	83
  7649  001BFA                     i2u597_47:
  7650  001BFA  2EE8               	decfsz	wreg,f,c
  7651  001BFC  D7FE               	bra	i2u597_47
  7652  001BFE  F000               	nop	
  7653  001C00  968C               	bcf	3980,3,c	;volatile
  7654  001C02  0EC8               	movlw	200
  7655  001C04                     i2u598_47:
  7656  001C04  D000               	nop2	
  7657  001C06  2EE8               	decfsz	wreg,f,c
  7658  001C08  D7FD               	bra	i2u598_47
  7659  001C0A  B04A               	btfsc	_LCDinterruptState,0,c
  7660  001C0C  D002               	bra	i2u219_45
  7661  001C0E  9EF2               	bcf	intcon,7,c	;volatile
  7662  001C10  D001               	bra	i2u219_46
  7663  001C12                     i2u219_45:
  7664  001C12  8EF2               	bsf	intcon,7,c	;volatile
  7665  001C14                     i2u219_46:
  7666                           
  7667                           ;lcd.c: 55: data = (unsigned char) (data << 4);
  7668  001C14  3802               	swapf	i2lcdNibble@data,w,c
  7669  001C16  0BF0               	andlw	240
  7670  001C18  6E02               	movwf	i2lcdNibble@data,c
  7671                           
  7672                           ;lcd.c: 56: temp = (unsigned char) (data & 0xF0);
  7673  001C1A  5002               	movf	i2lcdNibble@data,w,c
  7674  001C1C  0BF0               	andlw	240
  7675  001C1E  6E01               	movwf	i2lcdNibble@temp,c
  7676                           
  7677                           ;lcd.c: 57: LATD = (unsigned char) (LATD & 0x0F);
  7678  001C20  508C               	movf	3980,w,c	;volatile
  7679  001C22  0B0F               	andlw	15
  7680  001C24  6E8C               	movwf	3980,c	;volatile
  7681                           
  7682                           ;lcd.c: 58: LATD = (unsigned char) (temp | LATD);
  7683  001C26  5001               	movf	i2lcdNibble@temp,w,c
  7684  001C28  108C               	iorwf	3980,w,c	;volatile
  7685  001C2A  6E8C               	movwf	3980,c	;volatile
  7686                           
  7687                           ;lcd.c: 60: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  7688  001C2C  0E00               	movlw	0
  7689  001C2E  BEF2               	btfsc	intcon,7,c	;volatile
  7690  001C30  0E01               	movlw	1
  7691  001C32  6E4A               	movwf	_LCDinterruptState,c
  7692  001C34  9EF2               	bcf	intcon,7,c	;volatile
  7693  001C36  868C               	bsf	3980,3,c	;volatile
  7694  001C38  0E53               	movlw	83
  7695  001C3A                     i2u599_47:
  7696  001C3A  2EE8               	decfsz	wreg,f,c
  7697  001C3C  D7FE               	bra	i2u599_47
  7698  001C3E  F000               	nop	
  7699  001C40  968C               	bcf	3980,3,c	;volatile
  7700  001C42  0EC8               	movlw	200
  7701  001C44                     i2u600_47:
  7702  001C44  D000               	nop2	
  7703  001C46  2EE8               	decfsz	wreg,f,c
  7704  001C48  D7FD               	bra	i2u600_47
  7705  001C4A  B04A               	btfsc	_LCDinterruptState,0,c
  7706  001C4C  D002               	bra	i2u220_45
  7707  001C4E  9EF2               	bcf	intcon,7,c	;volatile
  7708  001C50  D001               	bra	i2u220_46
  7709  001C52                     i2u220_45:
  7710  001C52  8EF2               	bsf	intcon,7,c	;volatile
  7711  001C54                     i2u220_46:
  7712  001C54  0012               	return		;funcret
  7713  001C56                     __end_ofi2_lcdNibble:
  7714                           	opt stack 0
  7715                           pclatu	equ	0xFFB
  7716                           pclath	equ	0xFFA
  7717                           tblptru	equ	0xFF8
  7718                           tblptrh	equ	0xFF7
  7719                           tblptrl	equ	0xFF6
  7720                           tablat	equ	0xFF5
  7721                           prodh	equ	0xFF4
  7722                           prodl	equ	0xFF3
  7723                           intcon	equ	0xFF2
  7724                           intcon3	equ	0xFF0
  7725                           postinc0	equ	0xFEE
  7726                           fsr0h	equ	0xFEA
  7727                           fsr0l	equ	0xFE9
  7728                           wreg	equ	0xFE8
  7729                           postdec1	equ	0xFE5
  7730                           fsr1h	equ	0xFE2
  7731                           fsr1l	equ	0xFE1
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           fsr2h	equ	0xFDA
  7735                           fsr2l	equ	0xFD9
  7736                           status	equ	0xFD8
  7737                           pclatu	equ	0xFFB
  7738                           pclath	equ	0xFFA
  7739                           tblptru	equ	0xFF8
  7740                           tblptrh	equ	0xFF7
  7741                           tblptrl	equ	0xFF6
  7742                           tablat	equ	0xFF5
  7743                           prodh	equ	0xFF4
  7744                           prodl	equ	0xFF3
  7745                           intcon	equ	0xFF2
  7746                           intcon3	equ	0xFF0
  7747                           postinc0	equ	0xFEE
  7748                           fsr0h	equ	0xFEA
  7749                           fsr0l	equ	0xFE9
  7750                           wreg	equ	0xFE8
  7751                           postdec1	equ	0xFE5
  7752                           fsr1h	equ	0xFE2
  7753                           fsr1l	equ	0xFE1
  7754                           indf2	equ	0xFDF
  7755                           postinc2	equ	0xFDE
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760                           	psect	rparam
  7761  0000                     pclatu	equ	0xFFB
  7762                           pclath	equ	0xFFA
  7763                           tblptru	equ	0xFF8
  7764                           tblptrh	equ	0xFF7
  7765                           tblptrl	equ	0xFF6
  7766                           tablat	equ	0xFF5
  7767                           prodh	equ	0xFF4
  7768                           prodl	equ	0xFF3
  7769                           intcon	equ	0xFF2
  7770                           intcon3	equ	0xFF0
  7771                           postinc0	equ	0xFEE
  7772                           fsr0h	equ	0xFEA
  7773                           fsr0l	equ	0xFE9
  7774                           wreg	equ	0xFE8
  7775                           postdec1	equ	0xFE5
  7776                           fsr1h	equ	0xFE2
  7777                           fsr1l	equ	0xFE1
  7778                           indf2	equ	0xFDF
  7779                           postinc2	equ	0xFDE
  7780                           fsr2h	equ	0xFDA
  7781                           fsr2l	equ	0xFD9
  7782                           status	equ	0xFD8
  7783                           
  7784                           	psect	temp
  7785  00005E                     btemp:
  7786                           	opt stack 0
  7787  00005E                     	ds	1
  7788  0000                     int$flags	set	btemp
  7789  0000                     wtemp6	set	btemp+1
  7790                           pclatu	equ	0xFFB
  7791                           pclath	equ	0xFFA
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           intcon	equ	0xFF2
  7799                           intcon3	equ	0xFF0
  7800                           postinc0	equ	0xFEE
  7801                           fsr0h	equ	0xFEA
  7802                           fsr0l	equ	0xFE9
  7803                           wreg	equ	0xFE8
  7804                           postdec1	equ	0xFE5
  7805                           fsr1h	equ	0xFE2
  7806                           fsr1l	equ	0xFE1
  7807                           indf2	equ	0xFDF
  7808                           postinc2	equ	0xFDE
  7809                           fsr2h	equ	0xFDA
  7810                           fsr2l	equ	0xFD9
  7811                           status	equ	0xFD8


Data Sizes:
    Strings     416
    Constant    23
    Data        30
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     37      93
    BANK0           128     25      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_48(CODE[11]), STR_47(CODE[11]), STR_46(CODE[11]), STR_45(CODE[11]), 
		 -> STR_44(CODE[11]), STR_43(CODE[11]), STR_42(CODE[11]), STR_41(CODE[14]), 
		 -> STR_40(CODE[14]), STR_39(CODE[14]), STR_38(CODE[14]), STR_37(CODE[14]), 
		 -> STR_36(CODE[14]), STR_35(CODE[14]), STR_34(CODE[14]), STR_33(CODE[11]), 
		 -> STR_32(CODE[8]), STR_31(CODE[15]), STR_30(CODE[20]), STR_29(CODE[10]), 
		 -> STR_28(CODE[8]), STR_27(CODE[18]), STR_26(CODE[18]), STR_25(CODE[9]), 
		 -> STR_24(CODE[10]), STR_23(CODE[9]), STR_22(CODE[10]), STR_21(CODE[10]), 
		 -> STR_20(CODE[9]), STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[16]), STR_14(CODE[17]), STR_13(CODE[2]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[15]), STR_7(CODE[15]), STR_6(CODE[16]), STR_5(CODE[17]), 
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 

    uartTransmitBlocking@data	PTR unsigned char  size(2) Largest target is 1
		 -> sendPillRequests@arr(BANK0[1]), findMode@arr(BANK0[1]), main@arr(BANK0[1]), 

    UART._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK0[16]), 

    UART._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    UART	PTR volatile struct . size(2) Largest target is 14
		 -> uart(COMRAM[12]), 

    S21$_dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK0[16]), 

    uart._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(BANK0[16]), 

    S21$_dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _main->_uartTransmitBlocking
    _user_interface->_initLCD
    _initLCD->_lcdInst
    _sendPillRequests->_uartTransmitBlocking
    _printf->_putch
    _putch->_lcdNibble
    _lcdInst->_lcdNibble
    _findMode->_uartTransmitBlocking

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_resetSection
    _resetSection->i2_printf
    i2_printf->i2_putch
    i2_putch->i2_lcdNibble
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    _main->_UART_Init
    _user_interface->_printf
    _sendPillRequests->_printf
    _findMode->_uartTransmitBlocking
    _UART_Init->___aldiv

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   19951
                                             18 BANK0      7     7      0
                          _UART_Init
                           _findMode
                            _lcdInst
                       _placeMarkers
                             _printf
                   _sendPillRequests
               _uartTransmitBlocking
                     _user_interface
 ---------------------------------------------------------------------------------
 (1) _user_interface                                       4     2      2    4303
                                              5 BANK0      4     2      2
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     135
                                             36 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _sendPillRequests                                     7     7      0    6695
                                              5 BANK0      7     7      0
                            _lcdInst
                             _printf
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (2) _printf                                              18    16      2    4033
                                              0 BANK0      5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     135
                                             35 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     135
                                             35 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0     113
                                             33 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _placeMarkers                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _findMode                                             7     7      0    2035
                                              1 BANK0      7     7      0
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (1) _uartTransmitBlocking                                 5     2      3    1930
                                             33 COMRAM     4     1      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            8     4      4     746
                                             33 COMRAM     4     0      4
                                             14 BANK0      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptHandler                                    24    24      0    3149
                                              9 COMRAM    24    24      0
                       _resetSection
               _savePrescriptionInfo
                          i2_lcdInst
                           i2_printf
                            i2_putch
 ---------------------------------------------------------------------------------
 (6) _savePrescriptionInfo                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _resetSection                                         1     1      0     680
                                              8 COMRAM     1     1      0
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) i2_printf                                            18    16      2     545
                                              3 COMRAM     5     3      2
                            i2_putch
 ---------------------------------------------------------------------------------
 (6) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (6) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _findMode
     _uartTransmitBlocking
   _lcdInst
     _lcdNibble
   _placeMarkers
   _printf
     _putch
       _lcdNibble
   _sendPillRequests
     _lcdInst
       _lcdNibble
     _printf
       _putch
         _lcdNibble
     _uartTransmitBlocking
   _uartTransmitBlocking
   _user_interface
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       _putch
         _lcdNibble

 _interruptHandler (ROOT)
   _resetSection
     i2_lcdInst
       i2_lcdNibble
     i2_printf
       i2_putch
         i2_lcdNibble
   _savePrescriptionInfo
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2_putch
       i2_lcdNibble
   i2_putch
     i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     19      29       5       32.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     25      5D       1       73.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86      34        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 02 15:14:59 2018

              ??_sendPillRequests 0085                                 _x 0051  
                     __CFG_CPD$ON 000000                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l141 15F2                               l133 1578  
                             l142 15D8                               l134 155E  
                             l127 150C                               l152 174E  
                             l144 1644                               l128 153C  
                             l153 1734                               l145 1696  
                             l137 15B4                               l129 1522  
                             l138 159A                               l162 0E4E  
                             l147 16E0                               l171 0EF8  
                             l156 1762                               l148 1710  
                             l172 0F46                               l164 0E66  
                             l149 16F6                               l181 0FF0  
                             l406 1CA6                               l510 09DC  
                             l182 103E                               l174 0F5E  
                             l166 0E7C                               l407 1CB4  
                             l191 113C                               l167 0ECA  
                             l432 14F4                               l520 0BF4  
                             l192 10FC                               l184 1056  
                             l176 0F74                               l409 1CBA  
                             l441 125A                               l433 11DE  
                             l521 0B78                               l505 090E  
                             l177 0FC2                               l169 0EE2  
                             l434 121E                               l186 106E  
                             l451 12CA                               l435 120C  
                             l507 098A                               l179 0FDA  
                             l460 1344                               l444 1244  
                             l516 0AAA                               l188 1084  
                             l533 0D14                               l509 0A58  
                             l470 13D0                               l462 13A2  
                             l526 0CC2                               l518 0B26  
                             l463 1372                               l535 0D90  
                             l527 0C46                               l472 13EA  
                             l456 1316                               l448 12E8  
                             l465 138C                               l449 12A4  
                             l625 1D68                               l458 1330  
                             l626 1D62                               l484 14C4  
                             l476 1496                               l581 1AB8  
                             l477 144A                               l469 1400  
                             l582 1A6E                               l486 14DE  
                             l479 1474                               l495 07DC  
                             l498 08BC                               l691 19FC  
                             l499 0840                               l692 1A0A  
                             l684 1982                               l693 1A20  
                             l685 199A                               l687 19C8  
                             l688 19BC                      __CFG_CPB$OFF 000000  
                             wreg 000FE8      uartTransmitBlocking@numBytes 0024  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
    __end_of_uartTransmitBlocking 1AD4                              l4342 0D9C  
                            l3836 1A6E                              STR_1 FEB7  
                            STR_2 FF02                              STR_3 FEE4  
                            STR_4 FEF3                              STR_5 FE96  
                            STR_6 FEA7                              STR_7 FEB7  
                            STR_8 FED5                              STR_9 FEC6  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u4020 175C  
                            u4040 1C92                              u4035 1AF8  
                            u5007 156A                              u4048 1C96  
                            u4400 07DA                              u5017 15A6  
                            u5107 1740                              u5027 15E4  
                            u5117 1CCA                              u5037 160E  
                            u5207 0900                              u5127 1CFE  
                            u5047 1636                              u5217 091A  
                            u5137 0808                              u5057 165E  
                            u5307 0A4A                              u5227 0940  
                            u5147 0832                              u5067 1686  
                            u3805 1AB2                              u5317 0A72  
                            u5237 0954                              u5157 084C  
                            u5077 16AA                              u3806 1AB4  
                            u4390 07BA                              u5407 0BAA  
                            u5327 0A9C                              u5247 097C  
                            u5167 0872                              u5087 16D2  
                            u4560 0D9C                              u3745 1B94  
                            u5417 0BBE                              u5337 0AB6  
                            u5257 09A4                              u5177 0886  
                            u5097 1702                              u3850 19CC  
                            u3746 1B96                              u4730 10C6  
                            u3755 1BD4                              u5507 0D06  
                            u5427 0BE6                              u5347 0ADC  
                            u5267 09CE                              u5187 08AE  
                            _RCIE 007CED                              u3780 1A76  
                            u3756 1BD6                              _RCIF 007CF5  
                            u5517 0D20                              u5437 0C0E  
                            u5357 0AF0                              u5277 09E8  
                            u5197 08D6                              u3790 1A82  
                            u3782 1A78                              u4398 07BE  
                            u5607 1B86                              u5527 0D46  
                            u5447 0C38                              u5367 0B18  
                            u5287 0A0E                              u3792 1A84  
                            u5617 1BBC                              u5537 0D5A  
                            u5457 0C52                              u5377 0B40  
                            u5297 0A22                              u4817 0E8E  
                            u4738 10CA                              u5627 1BC6  
                            u5547 0D82                              u5467 0C78  
                            u5387 0B6A                              u4907 10AA  
                            u4827 0EAA                              u5637 1C66  
                            u5557 0DAC                              u5477 0C8C  
                            u5397 0B84                              u4917 10EC  
                            u4837 0F0A                              u5647 1A62  
                            u5567 0DD6                              u5487 0CB4  
                            u4927 1108                              u4847 0F26  
                            u5577 1DD8                              u5497 0CDC  
                            u4937 1130                              u4857 0F86  
                            u5587 1DEC                              u4947 1154  
                            u4867 0FA2                              u5597 1B7C  
                            u4957 1176                              u4877 1002  
                            u4967 1190                              u4887 101E  
                            u4977 11A8                              u4897 1092  
                            u4987 11C2                              u4997 152E  
                            _UART 003A                              _TRMT 007D61  
                            _TXIE 007CEC                              _TXIF 007CF4  
                            _done 0044                              _main 0DE6  
        __end_of_interruptHandler 07A8                              _keys FE47  
                            _side 004C                              _uart 0052  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 005E  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                     __CFG_IESO$OFF 000000  
                 __end_ofi2_putch 1E08                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                       i2_lcdNibble 1BD8  
                __end_of_LCD_LEFT FE59                 _prescription_data 004F  
                 __end_of___aldiv 1A32                             ?_main 0001  
                           STR_10 FEF3                             STR_11 FFF9  
                           STR_12 FFF6                             STR_20 FFC2  
                           STR_13 FFFC                             STR_21 FF90  
                           STR_14 FE96                             STR_22 FF9A  
                           STR_30 FE5E                             STR_15 FEA7  
                           STR_23 FFCB                             STR_31 FF11  
                           STR_40 FF20                             STR_32 FFEE  
                           STR_16 FFAE                             STR_24 FFA4  
                           STR_41 FF20                             STR_25 FFDD  
                           STR_17 FFD4                             STR_33 FF7B  
                           STR_18 FFB8                             STR_42 FF2E  
                           STR_34 FF20                             STR_26 FE84  
                           STR_35 FF20                             STR_19 FF86  
                           STR_43 FF39                             STR_27 FE72  
                           STR_36 FF20                             STR_28 FFE6  
                           STR_44 FF44                             STR_29 FE68  
                           STR_37 FF20                             STR_45 FF4F  
                           STR_38 FF20                             STR_46 FF5A  
                           STR_39 FF20                             STR_47 FF65  
                           STR_48 FF70                             i2l120 17E6  
                           i2l200 00C6                             i2l121 180C  
                           i2l201 00AA                             i2l122 183A  
                           i2l115 186A                             i2l123 1852  
                           i2l203 00B8                             i2l116 1786  
                           i2l220 0244                             i2l212 0166  
                           i2l118 17A6                             i2l119 17C6  
                           i2l223 029C                             i2l207 01FC  
                           i2l240 03EE                             i2l208 0152  
                           i2l241 03F2                             i2l209 010C  
                           i2l242 0444                             i2l218 0332  
                           i2l251 04B6                             i2l219 028A  
                           i2l260 0566                             i2l421 1928  
                           i2l413 18B0                             i2l253 04C4  
                           i2l229 048A                             i2l237 03FC  
                           i2l270 06FE                             i2l262 0572  
                           i2l246 0552                             i2l238 03E8  
                           i2l423 1946                             i2l415 18CE  
                           i2l271 063C                             i2l247 049E  
                           i2l239 0410                             i2l280 0734  
                           i2l264 0580                             i2l417 18EC  
                           i2l273 065A                             i2l249 04AA  
                           i2l282 075A                             i2l274 0674  
                           i2l266 0614                             i2l419 190A  
                           i2l275 0692                             i2l276 06B0  
                           i2l269 0726                             i2l277 06CA  
                           i2l278 06E6                             i2l199 075C  
                           i2l625 1D94                             i2l626 1D8E  
                           _RCREG 000FAE                             _SPBRG 000FAF  
                           _PORTB 000F81                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                 __end_of_lcdInst 1DF4                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
              __size_of_UART_Init 0086                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                 __end_of_initLCD 1D10                    __CFG_EBTRB$OFF 000000  
                           _reset 0050                             _putch 1DCC  
                           pclath 000FFA                             tablat 000FF5  
               _LCDinterruptState 004A                             status 000FD8  
                           wtemp6 005F                    __CFG_PBADEN$ON 000000  
                __end_ofi2_printf 1DAE                   __initialization 1D10  
              __size_ofi2_lcdInst 0014                      __end_of_main 11DC  
                    __end_of_keys FE58                        i2printf@ap 0006  
                  __CFG_OSC$HSPLL 000000               sendPillRequests@arr 008B  
               __end_of_LCD_RIGHT FE5A                            ??_main 0092  
                   __activetblptr 000002     __size_of_savePrescriptionInfo 00D2  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                 i2lcdNibble@data 0002                            ?_putch 0001  
                 i2lcdNibble@temp 0001                            _INT1IE 007F83  
                          _INT1IF 007F80                            i2l3540 0444  
                          i2l3438 0244                            i2l3392 015C  
                          i2l3378 010C                            i2l3686 06E0  
                       ??i2_putch 0003                            _TRISC6 007CA6  
                          _TRISC7 007CA7                   _modeOfOperation 0042  
                  __CFG_XINST$OFF 000000                  __end_of_findMode 1CC4  
               __end_of_UART_Init 1B5A                         ??___aldiv 0022  
                  __CFG_STVREN$ON 000000              _uartTransmitBlocking 1A32  
                          clear_0 1D36                            clear_1 1D42  
                       ??_lcdInst 0024                            _printf 1D56  
                       ??_initLCD 0025           __size_of_user_interface 026A  
                    __pdataCOMRAM 0026                     ?_placeMarkers 0001  
                    __mediumconst FE46                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
               __end_ofi2_lcdInst 1E1C                        __accesstop 0080  
         __end_of__initialization 1D48                     ___rparam_used 000001  
    interruptHandler@keypress_374 001F                    __pcstackCOMRAM 0001  
           ?_uartTransmitBlocking 0022                     __end_of_putch 1DE0  
               sendPillRequests@i 0087                __size_of_lcdNibble 007E  
                  ??_placeMarkers 0022         __size_of_sendPillRequests 063E  
                     i2putch@data 0003                         ?i2_printf 0004  
                         ??_putch 0024                        __pbssBANK0 0099  
               ?_interruptHandler 0001                ??_interruptHandler 000A  
                    ?i2_lcdNibble 0001                           ?_printf 0080  
                      _arr_dataRX 0099                        ??i2_printf 0006  
                       ?_findMode 0001                     ?_resetSection 0001  
                         i2_putch 1DF4                 __end_of_lcdNibble 1BD8  
                         __Hparam 0000                           __Lparam 0000  
                         ___aldiv 1964            ??_uartTransmitBlocking 0025  
        interruptHandler@keypress 0020                        _entryarray 0037  
                         __pcinit 1D10                           __ramtop 1000  
                         _lcdInst 1DE0                           __ptext0 0DE6  
                         __ptext1 1504                           __ptext2 1CC4  
                         __ptext3 07A8                           __ptext4 1D56  
                         __ptext5 1DCC                           __ptext6 1DE0  
                         __ptext7 1B5A                           __ptext8 11DC  
                         __ptext9 1C56                   __size_of_printf 002E  
                         _initLCD 1CC4                    _user_interface 1504  
                         _pillBox 0026                  ___aldiv@dividend 0080  
                       _LCD_RIGHT FE59                        ??_findMode 0081  
                  ??_resetSection 0009                           main@arr 0098  
                         main@res 0094                    __pintcode_body 0012  
            end_of_initialization 1D48             __end_of_LCD_SIZE_HORZ FE5C  
           __end_of_LCD_SIZE_VERT FE5B                     __Lmediumconst FE46  
                         int_func 0012              __end_of_placeMarkers 1504  
                  _frequency_data 004D      __end_of_savePrescriptionInfo 1964  
                       _RCSTAbits 000FAB                           printf@c 0084  
                         printf@f 0080                  ___aldiv@quotient 008A  
                         postdec1 000FE5                           postinc0 000FEE  
                         postinc2 000FDE                         _UART_Init 1AD4  
          __end_of_user_interface 176E                         _PORTCbits 000F82  
                _sendPillRequests 07A8                         i2_lcdInst 1E08  
                       _TXSTAbits 000FAC             interruptHandler@k_375 001E  
                      ?_UART_Init 0022              __size_ofi2_lcdNibble 007E  
                   __pidataCOMRAM 1DAE                   ?_user_interface 0085  
                   i2lcdInst@data 0003                    __end_of_printf 1D84  
             start_initialization 1D10                         i2printf@c 0008  
                       i2printf@f 0004             sendPillRequests@F3053 003C  
               __size_ofi2_printf 002A                        ?i2_lcdInst 0001  
               interruptHandler@k 0021             sendPillRequests@input 0089  
            __end_of_resetSection 1892                  __CFG_LPT1OSC$OFF 000000  
                        ??_printf 0025  uartTransmitBlocking@numTransmits 0080  
       __size_of_interruptHandler 07A0                       __pbssCOMRAM 0044  
                   __pcstackBANK0 0080              _savePrescriptionInfo 1892  
               __size_of_findMode 006E             __size_of_placeMarkers 0328  
                        ?i2_putch 0001                 __CFG_CCP2MX$PORTC 000000  
              _UARTinterruptState 004B                         __pintcode 0008  
                   __pmediumconst FE46                     UART_Init@baud 0022  
                       _lcdNibble 1B5A                          ?___aldiv 0080  
                     ??_UART_Init 008E                          ?_lcdInst 0001  
                        ?_initLCD 0001                      _placeMarkers 11DC  
           ?_savePrescriptionInfo 0001                    __size_of_putch 0014  
                        _LCD_LEFT FE58                   ___aldiv@divisor 0084  
                     ??i2_lcdInst 0003                   ___aldiv@counter 0088  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
        __end_of_sendPillRequests 0DE6                          i2u220_45 1C52  
                        i2u220_46 1C54                          i2u310_40 0228  
                        i2u311_40 0292                          i2u321_40 02EC  
                        i2u307_40 01B6                          i2u219_45 1C12  
                        i2u219_46 1C14                          i2u350_40 050C  
                        i2u334_40 03A2                          i2u335_40 0420  
                        i2u600_47 1C44                          i2u364_40 05D0  
                        i2u296_40 00F0                          i2u570_47 0236  
                        i2u571_47 0254                          i2u580_47 051C  
                        i2u572_47 0276                          i2u581_47 053E  
                        i2u573_47 02FC                          i2u565_47 00FE  
                        i2u590_47 06F2                          i2u582_47 05E0  
                        i2u574_47 031E                          i2u566_47 011C  
                        i2u591_47 0748                          i2u583_47 0602  
                        i2u575_47 03B2                          i2u567_47 013E  
                        i2u592_47 177A                          i2u584_47 0648  
                        i2u576_47 03D4                          i2u568_47 01C6  
                        i2u593_47 1818                          i2u585_47 0666  
                        i2u577_47 0436                          i2u569_47 01E8  
                        i2u594_47 185E                          i2u586_47 0680  
                        i2u578_47 0454                          i2u595_47 1E00  
                        i2u587_47 069E                          i2u579_47 0476  
                        i2u596_47 1E14                          i2u588_47 06BC  
                        i2u597_47 1BFA                          i2u589_47 06D6  
                        i2u598_47 1C04                          i2u599_47 1C3A  
                __CFG_WDTPS$32768 000000                         _prevPills 0046  
                      ?_lcdNibble 0001                         main@F3074 003E  
   __size_of_uartTransmitBlocking 00A2                     lcdNibble@data 0023  
                   lcdNibble@temp 0022                  _num_pills_F_data 0040  
                       main@input 0096                  _num_pills_L_data 003F  
                _num_pills_R_data 0041                          i2_printf 1D84  
                  _LCD_HORZ_LIMIT FE5D                         copy_data0 1D24  
                __size_ofi2_putch 0014             __size_of_resetSection 0124  
                        __Hrparam 0000                          __Lrparam 0000  
                ??_user_interface 0087                __CFG_BOREN$SBORDIS 000000  
                 _repetition_data 004E                  __size_of___aldiv 00CE  
                _interruptHandler 0008                  __size_of_lcdInst 0014  
                __size_of_initLCD 004C            ??_savePrescriptionInfo 0001  
          __end_of_LCD_HORZ_LIMIT FE5E                          __ptext10 1A32  
                        __ptext11 1AD4                          __ptext12 1964  
                        __ptext14 1892                          __ptext15 176E  
                        __ptext16 1D84                          __ptext17 1DF4  
                        __ptext18 1E08                          __ptext19 1BD8  
                        _findMode 1C56                    _LCD_VERT_LIMIT FE5C  
                    _resetSection 176E                     findMode@F3044 003D  
                   __size_of_main 03F6                          _pastPres 0043  
                        _numPills 0048                     ??i2_lcdNibble 0001  
                   findMode@input 0083                       ??_lcdNibble 0022  
                        int$flags 005E                         putch@data 0024  
                      _INTCONbits 000FF2            __end_of_LCD_VERT_LIMIT FE5D  
                        intlevel2 0000                     _LCD_SIZE_HORZ FE5B  
                   _LCD_SIZE_VERT FE5A                      findMode@flag 0085  
                        printf@ap 0082                      _prescription 0034  
                     lcdInst@data 0024               __end_ofi2_lcdNibble 1C56  
        uartTransmitBlocking@data 0022                      ___aldiv@sign 0089  
                     findMode@arr 0087                 ?_sendPillRequests 0001  
